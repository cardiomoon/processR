drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#84
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#85
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#86
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#6
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawConcept(labels=labels,serial=TRUE,nodemode=2)
drawModel(labels=labels,serial=TRUE,nodemode=2)
X=NULL;M=NULL;Y=NULL;labels=list(X="X",M=c("M1","M2"),Y="Y");data=NULL
vars=list()
moderator=list()
covar=NULL
mode=1;range=TRUE;rangemode=1;serial=TRUE;contrast=1;
bmatrix=NULL
if(is.null(X)) X=labels$X
if(is.null(M)) if(!is.null(labels$M)) M=labels$M
if(is.null(Y)) Y=labels$Y
interactionNo=0
res=c()
xcount=length(X)
if(!is.null(M)) {
mcount=length(M)
} else{
mcount=0
}
ycount=length(Y)
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
if(serial){
if(mcount>0){
if(is.null(bmatrix)) bmatrix=rep(1,sum(1:(mcount+1)))
}
}
# moderator=list(name=c("vs"),site=list(c("b1","b2")))
# name="vs"
# prefix="b"
# moderator
# name=MY
# name
# prefix="b"
mod2pos=function(moderator,name,prefix){
pos=list()
pos1=c()
# i=1
for(i in seq_along(name)) {
pos1=grep(name[i],moderator$name)
pos1
if(length(pos1)==1){
temp=moderator$site[[pos1]]
temp1=temp[str_detect(temp,prefix)]
temp1
res=str_extract(temp1,"[0-9]")
res
if(length(res)==1){
if(is.na(res)){
pos[[i]]=NULL
} else {
pos[[i]]=as.numeric(res)
}
} else{
pos[[i]]=as.numeric(res)
}
}
}
pos
}
pos=mod2pos(moderator,name=XM,prefix="a")
pos
if(is.null(bmatrix)){
eq1=makeCatEquation2(X=X,Y=M,W=XM,prefix="a",mode=mode,pos=pos,serial=serial)
} else{
eq1=makeCatEquation3(X=X,Y=M,W=XM,prefix="a",mode=mode,pos=pos,bmatrix=bmatrix,
vars=vars,moderator=moderator,depy=FALSE,
interactionNo=interactionNo)
}
# maxylev
eq1
strsplit(equation,"\n")
equation="M1~X\nM2~X+M1+X"
strsplit(equation,"\n")
unlist(strsplit(equation,"\n"))
equations=unlist(strsplit(equation,"\n"))
res=unlist(strsplit(eq,"~"))
eq="M2~X+M1+X+X*M*W"
res=unlist(strsplit(eq,"~"))
eq=str_replace_all(eq," ","")
eq=stringr::str_replace_all(eq," ","")
res=unlist(strsplit(eq,"~"))
res
temp=unlist(strsplit(res[2],"+"))
temp
temp=unlist(strsplit(res[2],"\\+"))
temp
requier(stringr)
res=strsplit(var,"\\*")
require(stringr)
var="X*M*W"
res=strsplit(var,"\\*")
res
res=unlist(strsplit(var,"\\*"))
res
i=1
temp=unlist(strsplit(var,"\\*"))
count=length(temp)
res=c()
i=1
combn(temp,i)
res1=combn(temp,i)
treatInteraction=function(var){
if(str_detect(var,"\\*")){
temp=unlist(strsplit(var,"\\*"))
count=length(temp)
res=c()
i=1
for(i in 1:count){
res1=combn(temp,i)
for(j in 1:ncol(res1)){
res=c(res,paste0(res1[,j],collapse=":"))
}
}
res
} else{
res=var
}
res
}
var="X*M*W"
treatInteraction(var)
var="X*M"
treatInteraction(var)
var="X"
treatInteraction(var)
#' unfold interaction
#' @param var name of variables
#' @importFrom stringr str_detect
#' @importFrom utils combn
#' @export
#' @examples
#' var="X*M"
#' treatInteraction(var)
#' var="X*M*W"
#' treatInteraction(var)
treatInteraction=function(var){
if(str_detect(var,"\\*")){
temp=unlist(strsplit(var,"\\*"))
count=length(temp)
res=c()
i=1
for(i in 1:count){
res1=combn(temp,i)
for(j in 1:ncol(res1)){
res=c(res,paste0(res1[,j],collapse=":"))
}
}
res
} else{
res=var
}
res
}
var="X*M"
treatInteraction(var)
var="X*M*W"
treatInteraction(var)
eq="M2~X+M1+X + X*M*W"
eq=stringr::str_replace_all(eq," ","")
res=unlist(strsplit(eq,"~"))
dep=res[1]
temp=unlist(strsplit(res[2],"\\+"))
temp
temp
sapply(temp,treatInterAction)
sapply(temp,treatIntercction)
sapply(temp,treatInteraction)
unlist(sapply(temp,treatInteraction))
res=unique(res)
res
temp
res=unlist(sapply(temp,treatInteraction))
res
res=unique(res)
res
checkEqVars=function(eq){
eq=stringr::str_replace_all(eq," ","")
res=unlist(strsplit(eq,"~"))
dep=res[1]
temp=unlist(strsplit(res[2],"\\+"))
temp
res=unlist(sapply(temp,treatInteraction))
res=unique(res)
res
}
eq="M2~X+M1+X + X*M*W"
eq="M2~X+M+X+X*M*W"
checkEqVars(eq)
#' Check dependent variables in equations
#' @param equation A string of regression formula
#' @importFrom stringr str_replace_all
#' @export
#' @examples
#' equation="M1~X\nM2~X+M1+X"
#' checkEquationVars(eq)
checkEquationVars=function(equation){
equations=unlist(strsplit(equation,"\n"))
for(i in seq_along){
}
}
equation="M1~X\nM2~X+M1+X"
equations=unlist(strsplit(equation,"\n"))
equations
equation="M1~X*M*W+W*Z\nM2~X+M1+X"
equations=unlist(strsplit(equation,"\n"))
equations
res=sapply(equations,checkEqVars)
res
eq="M2~X+M+X+X*M*W"
checkEqVars(eq)
#' Check dependent variables in a equation
#' @param eq A string of regression formula
#' @importFrom stringr str_replace_all
#' @export
#' @examples
#' eq="M2~X+M+X+X*M*W"
#' checkEqVars(eq)
checkEqVars=function(eq){
eq=stringr::str_replace_all(eq," ","")
res=unlist(strsplit(eq,"~"))
dep=res[1]
temp=unlist(strsplit(res[2],"\\+"))
temp
res=unlist(sapply(temp,treatInteraction))
res=unique(res)
paste0(dep,"~",paste0(res,collapse="+"))
}
eq="M2~X+M+X+X*M*W"
checkEqVars(eq)
equations=unlist(strsplit(equation,"\n"))
equations
res=sapply(equations,checkEqVars)
res
#' Check dependent variables in equations
#' @param equation A string of regression formula
#' @importFrom stringr str_replace_all
#' @export
#' @examples
#' equation="M1~X*M*W+W*Z\nM2~X+M1+X"
#' checkEquationVars(eq)
checkEquationVars=function(equation){
equations=unlist(strsplit(equation,"\n"))
equations
res=sapply(equations,checkEqVars)
paste0(res,collapse="\n")
}
equation="M1~X*M*W+W*Z\nM2~X+M1+X"
checkEquationVars(eq)
equation="M1~X*M*W+W*Z\nM2~X+M1+X"
equation="M1~X*M*W+W*Z\nM2~X+M1+X"
checkEquationVars(equation)
devtools::document()
library(processR)
#6
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawConcept(labels=labels,serial=TRUE,nodemode=2)
drawModel(labels=labels,serial=TRUE,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=1)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.1,0.3),"X:W"=c(0.3,0.3)))
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.2,0.3),"X:W"=c(0.5,0.3)))
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.2,0.4),"X:W"=c(0.5,0.3)))
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.2,0.45),"X:W"=c(0.5,0.3)))
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.5,0.3)))
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#84
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#84
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#86
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.1,0.2,0.3,0.4,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.1,0.2,0.3,0.4,0.5,0.6)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
i=1
res=matrix2df(moderator$matrix[[i]])
res
library(processR)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.1,0.2,0.3,0.4,0.5,0.6)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.6,0.5,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.4,0.5,0.5)))
#92
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.4,0.5,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.9,0.5,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.,0.5,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
moderator=list(name="W",matrix=list(wmatrix),pos=5,arr.pos=list(c(0.5,0.5,0.5,0.6,0.5,0.5)))
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#91
wmatrix=c(0,0,1,0,0,0)
moderator=list(name="W",matrix=list(wmatrix),pos=6)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
library(processR)
#6
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawConcept(labels=labels,serial=TRUE,nodemode=2)
drawModel(labels=labels,serial=TRUE,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
library(processR)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
library(processR)
system("grep -r 'makeCoefLabel' *")
library(processR)
#6
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawConcept(labels=labels,serial=TRUE,nodemode=2)
drawModel(labels=labels,serial=TRUE,nodemode=2)
#83
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#84
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,0,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2,node.pos=list("W"=c(0.3,0.45),"X:W"=c(0.6,0.3)))
#85
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,1,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#86
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#86
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(1,0,0,1,0,0)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#87
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(0,0,0,0,0,1)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#87
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(0,0,0,0,0,1)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#87
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(0,0,0,0,0,1)),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
#87
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",matrix=list(c(0,0,0,0,0,1)),pos=5)
library(processR)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
library(processR)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#88
wmatrix=c(0,0,0,0,1,1)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
#88
wmatrix=c(0,0,0,0,1,0)
moderator=list(name="W",matrix=list(wmatrix),pos=5)
drawConcept(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
drawModel(labels=labels,serial=TRUE,moderator=moderator,nodemode=2)
devtools::document()
devtools::check()
