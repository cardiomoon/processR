cat(catMediation(X="am",M="cyl",Y="mpg",data=mtcars,moderator=moderator,maxylev=6))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,maxylev=6))
cat(catMediation(X="am",M="wt",Y="mpg",data=mtcars,moderator=moderator,covar=covar))
library(processR)
devtools::document()
library(processR)
moderator=list(name=c("carb"),site=list(c("a","c")))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,mode=1))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,moderator=moderator))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,moderator=moderator,mode=1))
cat(catMediation(X="am",M="cyl",Y="mpg",data=mtcars,moderator=moderator,maxylev=6))
cat(catMediation(X="am",M="cyl",Y="mpg",data=mtcars,moderator=moderator,maxylev=6,mode=1))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,maxylev=6))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,maxylev=6,mode=1))
cat(catMediation(X="am",M="wt",Y="mpg",data=mtcars,moderator=moderator,covar=covar))
cat(catMediation(X="am",M="wt",Y="mpg",data=mtcars,moderator=moderator,covar=covar,mode=1))
cat(catMediation(X="am",M="wt",Y="mpg",data=mtcars,moderator=moderator,covar=covar))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,moderator=moderator))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,moderator=moderator,rangemode=2))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars,moderator=moderator))
devtools::document()
devtools::document()
devtools::check()
library(processR)
makeCatEquation(X="wt",Y="mpg",data=mtcars)
makeCatEquation(X="wt",Y="mpg",W="cyl",data=mtcars)
makeCatEquation(X="wt",Y="mpg",W=c("cyl","hp"),data=mtcars)
grouplabels=list(carb="f")
makeCatEquation(X="carb",Y="mpg",W=c("cyl","hp"),data=mtcars,maxylev=6)
makeCatEquation(X="carb",Y="mpg",W=c("cyl","hp"),data=mtcars)
cat(makeCatEquation(X="wt",Y="carb",W=c("am","hp"),data=mtcars,maxylev=6,grouplabels=grouplabels))
grouplabels=list(carb="f")
cat(makeCatEquation(X="wt",Y="carb",W=c("am","hp"),data=mtcars,maxylev=6,grouplabels=grouplabels))
makeCatEquation(X="wt",Y="mpg",W=c("cyl","hp"),data=mtcars)
makeCatEquation(X="carb",Y="mpg",W=c("cyl","hp"),data=mtcars,maxylev=6)
grouplabels=list()
is.null(grouplabels)
length(grouplabels)
library(processR)
makeCatEquation(X="wt",Y="mpg",data=mtcars)
makeCatEquation(X="wt",Y="mpg",W="cyl",data=mtcars)
makeCatEquation(X="wt",Y="mpg",W=c("cyl","hp"),data=mtcars)
grouplabels=list(carb="f")
makeCatEquation(X="carb",Y="mpg",W=c("cyl","hp"),data=mtcars,maxylev=6)
makeCatEquation(X="carb",Y="mpg",W=c("cyl","hp"),data=mtcars)
cat(makeCatEquation(X="wt",Y="carb",W=c("am","hp"),data=mtcars,maxylev=6,grouplabels=grouplabels))
devtools::document()
devtools::check()
devtools::document()
devtools::check()
moderator=list(name=c("carb"),site=list(c("c")))
cat(catMediation(X="cyl",M="am",Y="mpg",data=mtcars))
cat(catMediation(X="cyl",Y="mpg",data=mtcars))
library(processR)
devtools::document()
cat(catMediation(X="cyl",Y="mpg",data=mtcars))
# X="X";M="M";Y="Y";cat="M";count=4;data=NULL;moderator=list();maxylev=6;
# covar=NULL;mode=0;range=TRUE;rangemode=1
# cat=NULL;count=NULL;moderator=list();maxylev=3
moderator=list(name=c("carb"),site=list(c("c")))
X="am";M=NULL;Y="mpg";data=mtcars;covar=NULL;mode=0;range=TRUE;rangemode=1;maxylev=2
res=c()
xcount=length(unique(data[[X]]))
mcount=length(unique(data[[M]]))
if(!is.null(M)) mcount=length(unique(data[[M]]))
# X="X";M="M";Y="Y";cat="M";count=4;data=NULL;moderator=list();maxylev=6;
# covar=NULL;mode=0;range=TRUE;rangemode=1
# cat=NULL;count=NULL;moderator=list();maxylev=3
moderator=list(name=c("carb"),site=list(c("c")))
X="am";M=NULL;Y="mpg";data=mtcars;covar=NULL;mode=0;range=TRUE;rangemode=1;maxylev=2
res=c()
xcount=length(unique(data[[X]]))
if(!is.null(M)) {
mcount=length(unique(data[[M]]))
} else{
mcount=0
}
vars=c(X,M,Y,moderator$name)
groupvars=c()
grouplabels=list()
for(i in seq_along(vars)) {
count=length(unique(data[[vars[i]]]))
if(is.factor(data[[vars[i]]])) {
groupvars=c(groupvars,vars[i])
} else if((count>2)&(count<=maxylev)){
groupvars=c(groupvars,vars[i])
}
}
for(i in seq_along(groupvars)){
grouplabels[[groupvars[i]]]=letters[3+i]
}
grouplabels
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
eq1=makeCatEquation(X=X,Y=M,W=XM,data=data,prefix="a",maxylev=maxylev,grouplabels=grouplabels,mode=mode)
eq3=makeCatEquation(X=X,Y=Y,W=XY,data=data,prefix="c",maxylev=maxylev,grouplabels=grouplabels,mode=mode)
eq3
temp3=unlist(strsplit(eq3,"~"))[2]
temp3
temp3=unlist(strsplit(temp3,"+",fixed=TRUE))
(eq=sumEquation(eq2,eq3))
if(is.null(M)) {
eq=eq3
} else{
eq=sumEquation(eq2,eq3)
}
if((!is.null(covar)) & !(Y %in% groupvars)){
covar$site=lapply(covar$site,function(x) str_replace(x,"Y",Y))
if(mode){
eq=addCovarEquation(eq,covar,prefix=NULL)
} else{
eq=addCovarEquation(eq,covar)
}
}
equation=paste(eq1,eq,sep="\n")
equation=ifelse(is.null(M),eq,paste(eq1,eq,sep="\n"))
if((mode==0)&(!is.null(M))){
moderatorNames=moderator$name
for(i in seq_along(moderatorNames)){
name=moderatorNames[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,"\n",temp)
}
temp1
temp2
temp3
moderatorNames
range
rangemode
grouplabels
temp=makeIndirectEquationCat(X,M,temp1,temp2,temp3,moderatorNames,range=range,data=data,rangemode=rangemode,grouplabels=grouplabels)
temp
equation=paste0(equation,temp)
}
equation
devtools::document()
library(processR)
moderator=list(name=c("carb","wt"),site=list(c("c"),c("c")))
cat(catMediation(X="cyl",Y="mpg",data=mtcars))
cat(catMediation(X="cyl",Y="mpg",data=mtcars,moderator=moderator))
cat(catMediation(X="cyl",Y="mpg",data=mtcars,moderator=moderator,maxylev=6))
moderator=list(name=c("am","wt"),site=list(c("c"),c("c")))
cat(catMediation(X="cyl",Y="mpg",data=mtcars,moderator=moderator,maxylev=6))
moderator=list(name=c("cyl","wt"),site=list(c("c"),c("c")))
cat(catMediation(X="am",Y="mpg",data=mtcars,moderator=moderator,maxylev=6))
moderator=list(name=c("cyl","wt"),site=list(c("c"),c("c")))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
cat(catMediation(X="am",Y="mpg",data=mtcars,moderator=moderator,covar=covar,maxylev=6))
X="X";M="M";Y="Y"
cat(modmedEquation(X=X,M=M,Y=Y,range=TRUE))
X="X";Y="Y"
moderator=list(name=c("Z"),site=list(c("a","c")))
cat(modmedEquation(X=X,Y=Y,moderator=moderator,range=TRUE))
X="X";M="M";Y="Y"
cat(modmedEquation(X=X,M=M,Y=Y,range=TRUE))
X="X";M="M";Y="Y"
moderator=list(name=c("Z"),site=list(c("a","c")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator,range=TRUE))
X="X";M="M";Y="Y";labels=NULL;range=FALSE
moderator=list(name=c("X"),site=list(c("b")))
cat(modmedEquation(X=X,M=M,Y=Y,moderator=moderator,range=FALSE))
X="X";Y="Y"
moderator=list(name=c("Z"),site=list(c("c")))
cat(modmedEquation(X=X,Y=Y,moderator=moderator,range=FALSE))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
cat(modmedEquation(X=X,M="M",Y=Y,moderator=moderator,range=FALSE,covar=covar))
devtools::document()
devtools::check()
library(lavaan)
library(processR)
moderator=list(name=c("sexism"),site=list(c("a","c")))
moderator=list(name=c("sexism"),site=list(c("a","c")))
protest1=addCatVars(protest,"protest",mode=2)
protest1
model=catMediation(X="protest1",M="respappr",Y="liking",data=protest1,moderator=moderator,rangemode=2)
cat(model)
semfit=sem(model=model,data=protest)
semfit=sem(model=model,data=protest1)
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,rangemode=2)
cat(model)
semfit=sem(model=model,data=protest1)
parameterEstimates(semfit)
fit1=lm(respappr~d1+d2+sexism+d1:sexism+d2:sexism,data=protest1)
summary(fit1)
fit2=lm(liking~d1+d2+sexism+d1:sexism+d2:sexism+respappr,data=protest1)
summary(fit2)
labels=list(M="respappr",Y="liking",W="sexism")
x=modelsSummary(list(fit1,fit2),labels=labels)
x
modelsSummaryTable(x)
estimatesTable2(semfit)
parameterEstimates(semfit)
library(processR)
library(lavaan)
library(processR)
modmedSummary(semfit,mod="sexism")
x=modmedSummary(semfit,mod="sexism")
x
x=modmedSummary(semfit,mod="sexism")
x
parameterEstimates(semfit)
conditionalEffectPlot(semfit,data=protest1,mod="sexism")
x=modmedSummary(semfit,mod="sexism")
x
parameterEstimates(semfit)
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,maxylev=6,rangemode=2)
cat(model)
semfit=sem(model=model,data=protest1)
parameterEstimates(semfit)
x=modelsSummary(list(fit1,fit2),labels=labels)
x
modelsSummaryTable(x)
parameterEstimates(semfit)
conditionalEffectPlot(semfit,data=protest1,mod="sexism")
x=modmedSummary(semfit,mod="sexism")
x
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,maxylev=6,rangemode=1)
cat(model)
semfit=sem(model=model,data=protest1)
x=modmedSummary(semfit,mod="sexism")
x=modmedSummary(semfit,mod="sexism")
x
conditionalEffectPlot(semfit,data=protest1,mod="sexism")
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,maxylev=6,rangemode=1)
cat(model)
semfit=sem(model=model,data=protest1)
x=modelsSummary(list(fit1,fit2),labels=labels)
x
modelsSummaryTable(x)
x=modmedSummary(semfit,mod="sexism")
x
x=modmedSummary(semfit,mod="sexism")
x
conditionalEffectPlot(semfit,data=protest1,mod="sexism")
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,maxylev=6,rangemode=2)
cat(model)
semfit=sem(model=model,data=protest1)
parameterEstimates(semfit)
estimatesTable2(semfit)
x=modelsSummary(list(fit1,fit2),labels=labels)
x
modelsSummaryTable(x)
parameterEstimates(semfit)
parameterEstimates(semfit)
res=parameterEstimates(semfit)
res
res[str_detect(res$label,"indirect"),]
quantile(protest$sexism,probs=c(0.16,0.5,0.84),type=6)
res$est[res$label=="b1"]
b1=res$est[res$label=="b1"]
b1
res=parameterEstimates(semfit)
res[str_detect(res$label,"indirect")]
res=parameterEstimates(semfit)
res[str_detect(res$label,"indirect")]
model=catMediation(X="protest",M="respappr",Y="liking",data=protest1,moderator=moderator,maxylev=6,rangemode=2)
semfit=sem(model=model,data=protest1)
parameterEstimates(semfit)
res=parameterEstimates(semfit)
res[str_detect(res$label,"indirect")]
res[str_detect(res$label,"indirect"),]
res1=res[str_detect(res$label,"indirect"),]
res1$est
res1$est[c(2,1,3,5,4,6)]
indirect=res1$est[c(2,1,3,5,4,6)]
b1=res$est[res$label=="b1"]
b1
condIndirect=indirect/b1
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
res1
length(res1)
nrow(res1)
no=c(2,1,3)
no+3
nrow(res1)
no=c(2,1,3)
count=nrow(res1)/3
no=c(2,1,3)
for(i in 2:count){
no=c(no,no+3)
}
no
for(i in 2:4){
no=c(no,no+3)
}
no=c(2,1,3)
for(i in 2:4){
no=c(no,no+3)
}
no
no=c(2,1,3)
for(i in 2:4){
no=c(no,no+3)
}
no
no=c(2,1,3)
temp=no
temp=no
for(i in 2:4){
temp=c(temp,no+3*(i-1))
}
temp
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
no
indirect=res1$est[no]
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(condIndirect=indirect/b1)
W=quantile(protest$sexism,probs=c(0.16,0.5,0.84),type=6)
W
(indirectm=matrix(indirect,byrow=TRUE,nrow=3))
(indirectm=matrix(indirect,byrow=FALSE,nrow=3))
(cond=indirect/b1)
(condm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
cbind(W,condm,b,indm)
res=cbind(W,condm,b,indm)
res
colnames(res)=c("W",paste0("ThetaD",1:count),"b",paste0("ThetaD",1:count,"B"))
res
colnames(res)=c("W",paste0("ThetaD",1:count),"b",paste0("ThetaD",1:count,"b"))
res
as.data.frame(res)
condIndirectSummary=function(semfit,W){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
nrow(res1)
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
no
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0("ThetaD",1:count),"b",paste0("ThetaD",1:count,"b"))
as.data.frame(res)
}
condIndirectSummary(semfit,W)
round(condIndirectSummary(semfit,W),3)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
nrow(res1)
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
no
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0("ThetaD",1:count),"b",paste0("ThetaD",1:count,"b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0("ThetaD",1:count),"b",paste0("ThetaD",1:count,"b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0(greeks['theta'],"D",1:count),"b",paste0("ThetaD",1:count,"b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0('\u0398',"D",1:count),"b",paste0("ThetaD",1:count,"b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0('\u0398',"D",1:count),"b",paste0('\u0398',"D",1:count,"b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0('\u0398',"D",1:count,'\u8594',"M"),"b",paste0('\u0398',"D",1:count,'\u8594',"M","b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
condIndirectSummary=function(semfit,W,digits=3){
res=parameterEstimates(semfit)
res1=res[str_detect(res$label,"indirect"),]
count=nrow(res1)/3
no=c(2,1,3)
temp=no
for(i in 2:count){
temp=c(temp,no+3*(i-1))
}
no=temp
(indirect=res1$est[no])
(b1=res$est[res$label=="b1"])
(cond=indirect/b1)
(indm=matrix(indirect,byrow=FALSE,nrow=3))
(condm=matrix(cond,byrow=FALSE,nrow=3))
b=rep(b1,3)
res=cbind(W,condm,b,indm)
colnames(res)=c("W",paste0('\u0398',"D",1:count,'\u2192',"M"),"b",paste0('\u0398',"D",1:count,'\u2192',"M","b"))
round(as.data.frame(res),digits)
}
condIndirectSummary(semfit,W)
