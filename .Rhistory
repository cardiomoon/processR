nodes
select=which(nodes$name=="dot")
xpos=nodes$xpos[select]
ypos=nodes$ypos[select]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
textplain(c(xpos,mean(c(ypos,nodes$ypos[select-1]-rady))),lab=".")
textplain(c(xpos,ypos),lab=".")
textplain(c(xpos,mean(c(ypos,nodes$ypos[select+1]+rady))),lab=".")
xnodes=nodes[!(nodes$name %in% c("M","Y")),]
rect(xpos-xmargin-radx-0.01,min(xnodes$ypos)-rady-ymargin,
xpos+xmargin+radx+0.01,max(xnodes$ypos)+rady+ymargin,lty=2)
textplain(c(xpos-xmargin-radx-0.04,mean(xnodes$ypos)),lab=expression(italic(X)))
}
}
drawModel()
drawModel=function(xcount=3,includeM=TRUE,whatLabel="name",addDots=TRUE,
xmargin=0.01,radx=0.12,
ymargin=0.02,xlim=c(-0.2,1.2),ylim=xlim,
rady=0.04,maxypos=0.6,minypos=0.2,ypos=c(1,0.5),mpos=c(0.5,0.9),
xinterval=NULL,yinterval=NULL,xspace=NULL,label.pos=list()){
# xcount=3; includeM=TRUE
# nodelabels=NULL;whatLabel="est"
# xmargin=0.01;radx=0.12
# ymargin=0.02;xlim=c(-0.2,1.2);ylim=xlim
# rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
# xinterval=NULL;yinterval=NULL;xspace=NULL;label.pos=list()
# digits=3
M<-NULL
if(includeM) M<-"M"
X=paste0("D",1:(xcount-1))
X=c(X,"Dg-1")
Y="Y"
if(addDots) {
count=length(X)
X= c(X,X[count])
X[count]="dot"
count=length(X)
}
df1=data.frame(label=X,stringsAsFactors = FALSE)
df1
df1$lty=1
df1$name=paste0("c",1:nrow(df1))
df1$name[count]=("cg-1")
df1$start=df1$label
df1$end="Y"
count=length(df1$label)
df1
if(!is.null(M)){
df2<-df1
df2$name=paste0("a",1:count)
df2$name[count]=("ag-1")
df2$end="M"
df2
df3=data.frame(label="M",lty=1,name="b",start="M",end="Y",stringsAsFactors = FALSE)
df=rbind(df1,df2,df3)
} else{
df=df1
}
df
name=c("Y","M",X)
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes
nodes$xpos=c(ypos[1],mpos[1],rep(0,count))
nodes$ypos=c(ypos[2],mpos[2],count:1)
nodes$ypos=adjustypos(nodes$ypos,ymargin=ymargin,rady=rady,
maxypos=maxypos,minypos=minypos)
if(is.null(M)) {
nodes=nodes[-2,]
}
nodes
makeSubscript=function(x){
res=c()
for(i in seq_along(x)){
if(nchar(x[i])==1){
temp=paste0("expression(italic(",x[i],"))")
} else{
temp=paste0("expression(italic(",substr(x[i],1,1),"[",substr(x[i],2,nchar(x[i])),"]))")
}
res=c(res,temp)
}
res
}
nodes$label=makeSubscript(nodes$name)
nodes
arrows=df
arrows$labelpos=0.65
arrows$arrpos=0.8
arrows$no=1
arrows$label1=arrows$label
arrows$label=arrows$name
addprime=TRUE
arrows
# print(nodes)
# print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
if(arrows$start[i]!="dot"){
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
}
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
mid=c(xpos,nodes$ypos[i])
label=eval(parse(text=nodes$label[i]))
if(nodes$name[i]!="dot"){
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
}
}
if(addDots){
nodes
select=which(nodes$name=="dot")
xpos=nodes$xpos[select]
ypos=nodes$ypos[select]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
textplain(c(xpos,mean(c(ypos,nodes$ypos[select-1]-rady))),lab=".")
textplain(c(xpos,ypos),lab=".")
textplain(c(xpos,mean(c(ypos,nodes$ypos[select+1]+rady))),lab=".")
xnodes=nodes[!(nodes$name %in% c("M","Y")),]
rect(xpos-xmargin-radx-0.01,min(xnodes$ypos)-rady-ymargin,
xpos+xmargin+radx+0.01,max(xnodes$ypos)+rady+ymargin,lty=2)
textplain(c(xpos-xmargin-radx-0.04,mean(xnodes$ypos)),lab=expression(italic(X)))
}
}
drawModel()
drawModel(xcount=4)
drawModel(xcount=2)
drawModel()
drawModel(xcount=4)
drawModel(xcount=3)
drawCatModel2=function(xcount=3,includeM=TRUE,whatLabel="name",addDots=TRUE,
xmargin=0.01,radx=0.12,
ymargin=0.02,xlim=c(-0.2,1.2),ylim=xlim,
rady=0.04,maxypos=0.6,minypos=0.2,ypos=c(1,0.5),mpos=c(0.5,0.9),
xinterval=NULL,yinterval=NULL,xspace=NULL,label.pos=list()){
M<-NULL
if(includeM) M<-"M"
X=paste0("D",1:(xcount-1))
X=c(X,"Dg-1")
Y="Y"
if(addDots) {
count=length(X)
X= c(X,X[count])
X[count]="dot"
count=length(X)
}
df1=data.frame(label=X,stringsAsFactors = FALSE)
df1
df1$lty=1
df1$name=paste0("c",1:nrow(df1))
df1$name[count]=("cg-1")
df1$start=df1$label
df1$end="Y"
count=length(df1$label)
df1
if(!is.null(M)){
df2<-df1
df2$name=paste0("a",1:count)
df2$name[count]=("ag-1")
df2$end="M"
df2
df3=data.frame(label="M",lty=1,name="b",start="M",end="Y",stringsAsFactors = FALSE)
df=rbind(df1,df2,df3)
} else{
df=df1
}
df
name=c("Y","M",X)
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes
nodes$xpos=c(ypos[1],mpos[1],rep(0,count))
nodes$ypos=c(ypos[2],mpos[2],count:1)
nodes$ypos=adjustypos(nodes$ypos,ymargin=ymargin,rady=rady,
maxypos=maxypos,minypos=minypos)
if(is.null(M)) {
nodes=nodes[-2,]
}
nodes
makeSubscript=function(x){
res=c()
for(i in seq_along(x)){
if(nchar(x[i])==1){
temp=paste0("expression(italic(",x[i],"))")
} else{
temp=paste0("expression(italic(",substr(x[i],1,1),"[",substr(x[i],2,nchar(x[i])),"]))")
}
res=c(res,temp)
}
res
}
nodes$label=makeSubscript(nodes$name)
nodes
arrows=df
arrows$labelpos=0.65
arrows$arrpos=0.8
arrows$no=1
arrows$label1=arrows$label
arrows$label=arrows$name
addprime=TRUE
arrows
# print(nodes)
# print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
if(arrows$start[i]!="dot"){
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
}
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
mid=c(xpos,nodes$ypos[i])
label=eval(parse(text=nodes$label[i]))
if(nodes$name[i]!="dot"){
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
}
}
if(addDots){
nodes
select=which(nodes$name=="dot")
xpos=nodes$xpos[select]
ypos=nodes$ypos[select]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
textplain(c(xpos,mean(c(ypos,nodes$ypos[select-1]-rady))),lab=".")
textplain(c(xpos,ypos),lab=".")
textplain(c(xpos,mean(c(ypos,nodes$ypos[select+1]+rady))),lab=".")
xnodes=nodes[!(nodes$name %in% c("M","Y")),]
rect(xpos-xmargin-radx-0.01,min(xnodes$ypos)-rady-ymargin,
xpos+xmargin+radx+0.01,max(xnodes$ypos)+rady+ymargin,lty=2)
textplain(c(xpos-xmargin-radx-0.04,mean(xnodes$ypos)),lab=expression(italic(X)))
}
}
drawCatModel()
#' @param ypos  The x and y position of Y node. Default value is c(1,0.5)
#' @param mpos The x and y position of M node. Default value is c(0.5,0.9)
#' @param xinterval numeric. Horizontal intervals among labels for nodes and nodes
#' @param yinterval numeric. Vertical intervals among labels for nodes and nodes
#' @param xspace numeric. Horizontal distance bewteen nodes
#' @param label.pos Optional list of arrow label position
#' @export
#' @examples
#' drawCatModel2()
#' drawCatModel2(xcount=4,includeM=FALSE)
drawCatModel2=function(xcount=3,includeM=TRUE,whatLabel="name",addDots=TRUE,
xmargin=0.01,radx=0.12,
ymargin=0.02,xlim=c(-0.2,1.2),ylim=xlim,
rady=0.04,maxypos=0.6,minypos=0.2,ypos=c(1,0.5),mpos=c(0.5,0.9),
xinterval=NULL,yinterval=NULL,xspace=NULL,label.pos=list()){
M<-NULL
if(includeM) M<-"M"
X=paste0("D",1:(xcount-1))
X=c(X,"Dg-1")
Y="Y"
if(addDots) {
count=length(X)
X= c(X,X[count])
X[count]="dot"
count=length(X)
}
df1=data.frame(label=X,stringsAsFactors = FALSE)
df1
df1$lty=1
df1$name=paste0("c",1:nrow(df1))
df1$name[count]=("cg-1")
df1$start=df1$label
df1$end="Y"
count=length(df1$label)
df1
if(!is.null(M)){
df2<-df1
df2$name=paste0("a",1:count)
df2$name[count]=("ag-1")
df2$end="M"
df2
df3=data.frame(label="M",lty=1,name="b",start="M",end="Y",stringsAsFactors = FALSE)
df=rbind(df1,df2,df3)
} else{
df=df1
}
df
name=c("Y","M",X)
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes
nodes$xpos=c(ypos[1],mpos[1],rep(0,count))
nodes$ypos=c(ypos[2],mpos[2],count:1)
nodes$ypos=adjustypos(nodes$ypos,ymargin=ymargin,rady=rady,
maxypos=maxypos,minypos=minypos)
if(is.null(M)) {
nodes=nodes[-2,]
}
nodes
makeSubscript=function(x){
res=c()
for(i in seq_along(x)){
if(nchar(x[i])==1){
temp=paste0("expression(italic(",x[i],"))")
} else{
temp=paste0("expression(italic(",substr(x[i],1,1),"[",substr(x[i],2,nchar(x[i])),"]))")
}
res=c(res,temp)
}
res
}
nodes$label=makeSubscript(nodes$name)
nodes
arrows=df
arrows$labelpos=0.65
arrows$arrpos=0.8
arrows$no=1
arrows$label1=arrows$label
arrows$label=arrows$name
addprime=TRUE
arrows
# print(nodes)
# print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
if(arrows$start[i]!="dot"){
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
}
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
mid=c(xpos,nodes$ypos[i])
label=eval(parse(text=nodes$label[i]))
if(nodes$name[i]!="dot"){
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
}
}
if(addDots){
nodes
select=which(nodes$name=="dot")
xpos=nodes$xpos[select]
ypos=nodes$ypos[select]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
textplain(c(xpos,mean(c(ypos,nodes$ypos[select-1]-rady))),lab=".")
textplain(c(xpos,ypos),lab=".")
textplain(c(xpos,mean(c(ypos,nodes$ypos[select+1]+rady))),lab=".")
xnodes=nodes[!(nodes$name %in% c("M","Y")),]
rect(xpos-xmargin-radx-0.01,min(xnodes$ypos)-rady-ymargin,
xpos+xmargin+radx+0.01,max(xnodes$ypos)+rady+ymargin,lty=2)
textplain(c(xpos-xmargin-radx-0.04,mean(xnodes$ypos)),lab=expression(italic(X)))
}
}
devtools::document()
library(processR)
drawCatModel2()
drawCatModel2(xcount=4,includeM=FALSE)
devtools::check()
devtools::document()
devtools::check()
drawCatModel2()
system("grep -r 'addprime' *")
require(diagram)
openplotmat()
label="cg-1"
temp2=substr(label,2,nchar(label))
temp2
temp1=paste0("expression(italic(",substr(label,1,1),")[",temp2,"]",prime,")")
temp1
addprime=TRUE
label="cg-1"
if(addprime) {
prime=ifelse(substr(label,1,1)=="c","^minute","")
}  else {
prime=""
}
prime
temp2=substr(label,2,nchar(label))
temp2
temp1=paste0("expression(italic(",substr(label,1,1),")[",temp2,"]",prime,")")
temp1
textplain(c(xpos-xmargin-radx-0.04,mean(xnodes$ypos)),lab=expression(italic(X)))
openplotmat()
textplain(c(0.5,0.5),lab=expression(italic(X)))
textplain(c(0.5,0.5),lab=eval(parse(text=temp1)))
openplotmat()
temp1
textplain(c(0.5,0.5),lab=eval(parse(text=temp1)))
temp=eval(parse(text=temp1))
label=temp
textplain(c(0.5,0.5),lab=eval(parse(text=temp1)))
textplain(c(0.5,0.5),lab=label)
require(diagram)
addprime=TRUE
openplotmat()
label="cg-1"
if(addprime) {
prime=ifelse(substr(label,1,1)=="c","^minute","")
}  else {
prime=""
}
prime
temp2=substr(label,2,nchar(label))
temp2
temp1=paste0("expression(italic(",substr(label,1,1),")[",temp2,"]",prime,")")
temp=eval(parse(text=temp1))
label=temp
textplain(c(0.5,0.5),lab=label)
drawCatModel2()
devtools::document()
library(processR)
drawCatModel2(M="M")
drawCatModel2(xcount=4)
drawCatModel2(M="M")
devtools::document()
devtools::check()
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
#' @importFrom magrittr "%>%"
#' @importFrom tidyselect starts_with
#' @export
#' @return A data.frame
#' @examples
#' fit1=lm(mpg~wt,data=mtcars)
#' fit2=lm(mpg~wt*hp*am,data=mtcars)
#' fit=list(fit1,fit2)
#' labels=list(Y="mpg",X="wt",W="hp",Z="am")
#' modelsSummary(fit,labels=labels)
modelsSummary=function(fit,labels=NULL,prefix="b",constant="iy"){
# prefix="b";constant="iy"
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][[paste0("label",i)]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
df[[i]]<-df[[i]] %>% select(starts_with("label"),everything())
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
df
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf<-mydf %>% select("name1",everything())
rownames(mydf)=mydf[["name1"]]
mydf<-mydf[-1]
mydf[]=lapply(mydf,myformat)
mydf<-mydf[c(2:nrow(mydf),1),]
rownames(mydf)[nrow(mydf)]="Constant"
mydf
for(i in 1:count){
mydf[[5*i]]=pformat(mydf[[5*i]])
}
finalNames=rownames(mydf)
df2=data.frame(coef,stringsAsFactors = FALSE)
colnames(df2)=paste0("coef",1:ncol(df2))
finalNames=c(finalNames,c("Observations","R2","Adjusted R2","Residual SE","F statistic"))
res=full_join(mydf,df2,by=paste0("coef",1:count))
res[is.na(res)]=""
res
if(!is.null(labels)) finalNames=changeLabelName(finalNames,labels,add=TRUE)
rownames(res)=finalNames
res
class(res)=c("modelSummary","data.frame")
attr(res,"modelNames")=modelNames
res
}
modelsSummary(fit,labels=labels)
require(processR)
modelsSummary(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
library(processR)
protest=addCatVars(protest,"protest")
labels=list(X="protest",M="respappr",Y="linking")
eq=catMediation(labels=labels,mode=1)
eq=catMediation(labels=labels,data=protest,mode=1)
eq
fit=eq2fit(eq,data=protest)
labels=list(X="protest",M="respappr",Y="liking")
eq=catMediation(labels=labels,data=protest,mode=1)
fit=eq2fit(eq,data=protest)
modelsSummary(fit)
fit=lm(liking~D1+D2,data=protest)
modelsSummary(fit)
modelsSummary2(fit)
