arrow.pos=list(a4=0.4,a5=0.3))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a3=0.4,a4=0.4,a5=0.3))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3,b2=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3,b2=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3,b3=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3,b3=0.5))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.4,a3=0.4,a4=0.4,a5=0.3,b3=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,b3=0.6))
require(processR)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
fit=eq2fit(eq,data=data1)
library(processR)
modelsSummaryTable(fit,labels=labels)
# cat("temp=",temp,"\n")
temp=c("M","D1","D2","W","D1:W","D2:W")
str_replace(temp,"D[1-9]","X[1-9]")
stringr::str_replace(temp,"D[1-9]","X[1-9]")
# cat("temp=",temp,"\n")
temp=c("M","D1","D2","W","D1:W","D2:W")
stringr::str_replace(temp,"D[1-9]","X[1-9]")
# cat("temp=",temp,"\n")
temp=c("M","D1","D2","W","D1:W","D2:W")
for(i in seq_along(temp)){
if(str_detect(temp[i],"D[1-9]")){
temp[i]=stringr::str_replace(temp[i],"D","X")
}
}
for(i in seq_along(temp)){
if(stringr::str_detect(temp[i],"D[1-9]")){
temp[i]=stringr::str_replace(temp[i],"D","X")
}
}
temp
# cat("temp=",temp,"\n")
temp=c("M","D1","D2","W","D1:W","D2:W","Direct")
for(i in seq_along(temp)){
if(stringr::str_detect(temp[i],"D[1-9]")){
temp[i]=stringr::str_replace(temp[i],"D","X")
}
}
temp
library(processR)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
moderator=list(name="sexism",site=list(c("a")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
temp=c("D1:W","D1","W","M")
str_detect(temp,"D[1-9]?:W")
require(stringr)
str_detect(temp,"D[1-9]?:W")
any(str_detect(temp,"D[1-9]?:W"))
library(processR)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
result=c("c1","c2","b")
if(any(str_detect(result,"b"))){
str_replace(result,"c","c'")
}
result
result=c("c1","c2","b")
if(any(str_detect(result,"b"))){
result=str_replace(result,"c","c'")
}
result
library(processR)
library(processR)
require(processR)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
nodelabels=list(D1="No vs. Any\nProtest",D2="Ind. vs Col.\nProtest",
M="Respappr",W="Sexism",Y="Liking")
moderator=list(name="sexism",site=list(c("a")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
library(processR)
devtools::document()
devtools::check()
require(processR)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,varnames="protest",mode=3)
eq=catMediation(labels=labels,moderator=moderator,data=protest,
maxylev=6,rangemode=2,mode=1)
cat(eq)
fit=eq2fit(eq,data=data1)
modelsSummaryTable(fit,labels=labels)
nodelabels=list(D1="No vs. Any\nProtest",D2="Ind. vs Col.\nProtest",
M="Respappr",W="Sexism",Y="Liking")
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="est",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,b3=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,b3=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,`c'5`=0.6))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,`c'5`=0.9))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,`c5`=0.9))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,`c5`=0.2))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3,c5=0.2))
drawModel(fit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),ylim=c(-0.1,1.1),
arrow.pos=list(a2=0.45,a3=0.4,a4=0.4,a5=0.3))
labels=list(X="frame",Y="donate")
library(processR)
drawModel(labels=labels)
drawModel(labels=labels,arrowslabels=list(c="c"),whatLabel="label")
library(processR)
labels=list(X="frame",Y="donate")
drawModel(labels=labels)
library(processR)
drawModel(labels=labels,arrowslabels=list(c="c"))
drawModel(labels=labels)
drawModel(labels=labels,arrowslabels=list(c="c"))
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,serial=TRUE,nodemode=4)
library(processR)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,serial=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
drawModel(labels=labels,parallel=TRUE)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
drawModel(labels=labels,parallel=TRUE)
drawModel(labels=labels,parallel=TRUE,serial=TRUE)
drawModel(labels=labels,parallel=TRUE)
drawModel(labels=labels,parallel=TRUE,serial=TRUE)
drawModel(labels=labels,parallel=TRUE)
drawModel(labels=labels,parallel=TRUE,serial=TRUE)
model=multipleMediation(labels=labels,data=pmi)
cat(model)
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
cat(model)
semfit=sem(model=model,data=pmi)
require(lavaan)
semfit=sem(model=model,data=pmi)
drawModel(semfit,labels=labels,parallel=TRUE)
drawModel(semfit,labels=labels,whatLabel="est",parallel=TRUE)
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
cat(model)
nodelabels=NULL;whatLabel="name";semfit=NULL;parallel=TRUE;covar=NULL;data=NULL
equation=NULL
labels=list(X="cond",M=c("import","pmi","age","M4"),Y="reaction")
xmargin=0.01;radx=NULL;mode=2;nodemode=1
ymargin=0.02;xlim=NULL;ylim=NULL
rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
xinterval=NULL;yinterval=NULL;xspace=NULL;arrow.pos=list()
digits=3;serial=FALSE
labels=list(X="X",M=c("M1","M2"),Y="Y");parallel=TRUE;serial=TRUE
if(is.null(radx)) radx=ifelse(nodemode %in% c(1,4),0.08,0.12)
labels=appendLabels(labels,vars,moderator,covar)
system("grep -r 'appendLabels' *")
#'add name to labels
#'@param labels A list
#'@param id label id
#'@param name A character
#'@export
#'@examples
#'labels=c(X="X",M="M",Y="Y")
#'addLabels(labels,"W","X")
#'addLabels(labels,"W","W")
addLabels=function(labels,id,name){
if(!(name %in% unlist(labels))){
labels[[id]]=name
}
labels
}
#' Append labels from vars, moderator and covar
#' @param labels A list
#' @param vars A list
#' @param moderator  A list
#' @param covar A list
appendLabels=function(labels,vars=list(),moderator=list(),covar=NULL){
if(length(vars)>0){
if(is.null(vars$label)){
if(length(vars$name)==1){
labels=addLabels(labels,"W",vars$name[[1]][1])
labels=addLabels(labels,"Z",vars$name[[1]][2])
} else{
for(i in seq_along(vars$name)){
labels=addLabels(labels,paste0("W",i),vars$name[[i]][1])
labels=addLabels(labels,paste0("Z",i),vars$name[[i]][2])
}
}
} else{
if(length(vars$name)==1){
labels=addLabels(labels,vars$label[[1]][1],vars$name[[1]][1])
labels=addLabels(labels,vars$label[[1]][2],vars$name[[1]][2])
} else{
for(i in seq_along(vars$name)){
labels=addLabels(labels,vars$label[[i]][1],vars$name[[i]][1])
labels=addLabels(labels,vars$label[[i]][2],vars$name[[i]][2])
}
}
}
}
if(length(moderator)>0){
# prefix=ifelse(length(vars)==0,"W","V")
# if(length(moderator$name)==1){
#   labels=addLabels(labels,prefix,moderator$name)
# } else{
# for(i in seq_along(moderator$name)){
#   labels=addLabels(labels,paste0(prefix,i),moderator$name[i])
# }
# }
if(is.null(moderator$label)){
prefix=ifelse(length(vars)==0,"W","V")
if(length(moderator$name)==1){
labels=addLabels(labels,prefix,moderator$name)
} else{
for(i in 1:length(moderator$name)){
labels=addLabels(labels,paste0(prefix,i),moderator$name[i])
}
}
} else{
for(i in 1:length(moderator$label)){
labels=addLabels(labels,moderator$label[i],moderator$name[i])
}
}
}
if(!is.null(covar)){
for(i in seq_along(covar$name)){
labels=addLabels(labels,paste0("C",i),covar$name[i])
}
}
labels
}
#' labels2table(labels,serial=FALSE)
#' labels2table(labels,covar=covar)
#' labels2table(labels,moderator=moderator)
#' labels=list(X="X",M="M",Y="Y")
#' moderator=list(name=c("W"),site=list(c("b","c")))
#' labels2table(labels,moderator=moderator)
#' labels=list(X="baby",M="wine",Y="tile")
#' moderator=list(name=c("milk"),site=list("a"))
#' covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
#' labels2table(labels,moderator=moderator,covar=covar,serial=FALSE)
labels2table=function(labels=labels,vars=list(),moderator=list(),covar=NULL,serial=TRUE,
bmatrix=NULL,
eq=NULL){
# vars=list();eq=NULL;covar=NULL;serial=TRUE;bmatrix=NULL
# labels=list(X="X",M="M",Y="Y")
# moderator=list(name="X",site=list(c("b")))
# labels=list(X="baby",M=c("wine","tent","sand"),Y="tile")
# bmatrix=c(1,1,0,1,0,0,1,1,1,1)
# moderator=list(name=c("milk","hair"),labels=c("W","Z"),
#                matrix=list(c(1,0,0,0,0,0,0,0,0,0),c(0,0,0,0,0,0,0,1,0,0)))
# labels=list(X="baby",M="wine",Y="tile")
# vars=list()
# moderator=list(name=c("milk"),site=list("a"))
# covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
# serial=FALSE
# bmatrix=NULL
# eq=NULL
if(is.null(eq)) {
eq=multipleMediation(labels=labels,vars=vars,moderator=moderator,covar=covar,mode=1,
serial=serial,bmatrix=bmatrix)
}
eq
eq=checkEquationVars(eq)
labels = appendLabels(labels,vars,moderator,covar)
eq
labels
df=equations2var(eq,labels=labels)
df
}
labels=appendLabels(labels,vars,moderator,covar)
# nodelabels=NULL;whatLabel="name";semfit=NULL;parallel=TRUE;covar=NULL;data=NULL
# equation=NULL
# labels=list(X="cond",M=c("import","pmi","age","M4"),Y="reaction")
# xmargin=0.01;radx=NULL;mode=2;nodemode=1
# ymargin=0.02;xlim=NULL;ylim=NULL
# rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
# xinterval=NULL;yinterval=NULL;xspace=NULL;arrow.pos=list()
# digits=3;serial=FALSE
labels=list(X="X",M=c("M1","M2"),Y="Y");parallel=TRUE;serial=TRUE;vars=list();moderator=list();covar=NULL
labels=appendLabels(labels,vars,moderator,covar)
labels
df1=labels2table(labels=labels,vars=vars,moderator=moderator,
covar=covar,serial=serial,bmatrix=bmatrix,
eq=equation)
# nodelabels=NULL;whatLabel="name";semfit=NULL;parallel=TRUE;covar=NULL;data=NULL
# equation=NULL
# labels=list(X="cond",M=c("import","pmi","age","M4"),Y="reaction")
# xmargin=0.01;radx=NULL;mode=2;nodemode=1
# ymargin=0.02;xlim=NULL;ylim=NULL
# rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
# xinterval=NULL;yinterval=NULL;xspace=NULL;arrow.pos=list()
# digits=3;serial=FALSE
# labels=list(X="X",M=c("M1","M2"),Y="Y");parallel=TRUE;serial=TRUE;
vars=list();moderator=list();covar=NULL;bmatrix=NULL
df1=labels2table(labels=labels,vars=vars,moderator=moderator,
covar=covar,serial=serial,bmatrix=bmatrix,
eq=equation)
df1$end=df1$Variables
df1$start=df1$Predictors
print(df1)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list();serial=FALSE;eq=NULL
labels2table(labels)
eq=multipleMediation(labels=labels,vars=vars,moderator=moderator,covar=covar,mode=1,
serial=serial,bmatrix=bmatrix)
eq
eq=checkEquationVars(eq)
eq
labels = appendLabels(labels,vars,moderator,covar)
eq
labels
df=equations2var(eq,labels=labels)
df
eq=multipleMediation(labels=labels,vars=vars,moderator=moderator,covar=covar,mode=1,
serial=serial,bmatrix=bmatrix)
eq
eq=checkEquationVars(eq)
labels = appendLabels(labels,vars,moderator,covar)
eq
labels
df=equations2var(eq,labels=labels)
df
serial=TRUE
eq=multipleMediation(labels=labels,vars=vars,moderator=moderator,covar=covar,mode=1,
serial=serial,bmatrix=bmatrix)
eq
eq=checkEquationVars(eq)
labels = appendLabels(labels,vars,moderator,covar)
eq
labels
df=equations2var(eq,labels=labels)
df
eq
labels
labels=list(X="baby",M=c("wine","tent","sand"),Y="tile",W="milk")
eq="wine~baby+milk+baby:milk"
labels=list(X="baby",M=c("wine","tent","sand"),Y="tile",W="milk")
eq2var(eq,labels=labels)
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq="Y~M1+M2+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="Y~M1+M2+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M2~M1+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M2~X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M2~M1+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M2~M1+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq=str_replace_all(eq," ","")
temp=unlist(strsplit(eq,"~"))
y=temp[1]
require(strinfr)
require(stringr)
eq=str_replace_all(eq," ","")
temp=unlist(strsplit(eq,"~"))
y=temp[1]
x=unique(unlist(strsplit(temp[2],"\\+")))
y=rep(y,length(x))
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
prefix=ifelse(df$Variables[1]=="Y","b","a")
y[1]
prefix
df$x
df
df$name=makeCoefLabel(name=df$x,dep=y[1],labels=labels,constant = "iy",prefix=prefix)
df$name=str_replace(df$name,"'","")
df
eq="Y~M1+M2+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M2~M1+X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
eq="M3~X"
labels=list(X="X",M=c("M1","M2"),Y="Y")
eq2var(eq,labels=labels)
library(processR)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,serial=TRUE)
equation='M1~X
M2~X+M1
M3~X+M1
Y~X+M1+M2+M3'
node.pos=list(X=c(0,0.5),M1=c(0.5,0.5),M2=c(0.75,0.9),M3=c(0.75,0.1),Y=c(1,0.5))
curved.arrow=list(a2=-0.1,a3=0.1,c=-0.15)
drawModel(equation=equation,nodemode=2,node.pos=node.pos,curved.arrow=curved.arrow)
equation='M1~X
M2~X
M3~X
M4~X+M1+M2+M3
Y~X+M1+M2+M3+M4'
node.pos=list(X=c(0,0.5),M1=c(0.35,0.9),M2=c(0.35,0.5),M3=c(0.35,0.1),M4=c(0.7,0.5),Y=c(1,0.5))
curved.arrow=list(a4=0.15,b2=0.15)
segment.arrow=list(c=0.5)
drawModel(equation=equation,nodemode=2,node.pos=node.pos,radx=0.08,curved.arrow=curved.arrow,
segment.arrow=segment.arrow)
library(processR)
library(processR)
fit=lm(govact~negemot*age,data=glbwarm)
compareMC(fit)
compareMC(fit,mode=2)
fit=lm(govact~negemot*age,data=glbwarm)
compareMCTable(fit)
library(processR)
devtools::document()
devtools::document()
devtools::check()
library(processR)
fit=lm(govact~negemot*age,data=glbwarm)
compareMCTable(fit)
fit=lm(govact~negemot*age,data=glbwarm)
res=compareMC(fit)
ft<-modelsSummary2Table(res,vanilla=vanilla)
fit=lm(govact~negemot*age,data=glbwarm)
compareMCTable(fit)
fit=lm(govact~negemot*age,data=glbwarm)
compareMC(fit)
compareMC(fit,mode=2)
fit=lm(govact~negemot*age,data=glbwarm)
compareMC(fit)
fit=lm(govact~negemot*age,data=glbwarm)
compareMCTable(fit)
devtools::document()
devtools::check()
citation("processR")
