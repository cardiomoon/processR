hlabel<-setNames(hlabel,col_keys)
hlabel=as.list(hlabel)
hlabel
length(hlabel)
length(col_keys)
count
colcount
ft <- add_header_row(ft,values=hlabel,top=TRUE,
colwidths=rep(1,count*colcount+ifelse(vanilla,0,1)))
ft <- ft %>%
hline_top(j=2:(count*colcount++ifelse(vanilla,0,1)),part="header",border=fp_border(color="black",width=1))
ft
for(i in 1:count){
ft<-ft %>% hline(i=1,j=((i-1)*colcount+3):((i-1)*colcount+6),
part="header",border=fp_border(color="black",width=1))
}
for(i in 1:count){
ft <- ft %>% merge_h_range (i=1,j1=(i-1)*colcount+3,j2=(i-1)*colcount+6,
part="header")
}
ft
hlabel=list(name1="",coef1="Consequent")
ft<-ft %>%
add_header_row(top=TRUE,values=hlabel,
colwidths=c(1,count*colcount+ifelse(vanilla,0,1)-1)) %>%
hline_top(part="header",border=big_border) %>%
hline(i=1,j=2:(count*colcount+ifelse(vanilla,0,1)),part="header",
border=fp_border(color="black",width=1)) %>%
merge_h_range(i=1,j1=2,j2=count*colcount+ifelse(vanilla,0,1),part="header") %>%
align(align="center",part="header") %>%
align(align="right",part="body") %>%
bold(part="header") %>%
align(i=(nrow(x)-4):nrow(x),align="center",part="body") %>%
fontsize(part="all",size=12) %>%
hline(i=rowcount-5,border=fp_border(color="gray"),part="body")
ft
if(count>1){
if(vanilla)
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.01)
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
if(!vanilla){
ft <-ft %>%
theme_zebra(even_body="#EFEFEF",odd_body="transparent",
even_header ="#5B7778",odd_header="#5B7778") %>%
fontsize(size=12,part="all") %>%
align(align="center",part="header") %>%
align(j=1,align="center",part="body") %>%
align(j=2:(1+colcount*count),align="right",part="body") %>%
align(i=(nrow(x)-4):nrow(x),align="center",part="body") %>%
color(color="white",part="header") %>%
hline(j=2:(1+colcount*count),border=fp_border(color="black",width=1),
part="header") %>%
vline(j=1:(1+colcount*count),border=fp_border(color="black",width=1),
part="header") %>%
vline_left(border=fp_border(color="black",width=1),
part="header") %>%
hline(j=1:(1+colcount*count),border=fp_border(color="#EDBD3E",width=1),
part="body") %>%
vline(j=1:(1+colcount*count),border=fp_border(color="#EDBD3E",width=1),
part="body") %>%
vline_left(border=fp_border(color="#EDBD3E",width=1),
part="body")
}
ft
if(vanilla)
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.01) %>%
width(j=(i-1)*6+2,width=0.5)
}
ft
# vanilla=TRUE
# require(tidyverse)
# require(flextable)
# require(officer)
# x=modelsSummary(list(fit1,fit2))
if(!("modelSummary" %in% class(x))) {
x=modelsSummary(x,...)
}
modelNames=attr(x,"modelNames")
modelNames
result=x
count=ncol(x)/5
count
result[["name1"]]=rownames(result)
if(vanilla){
if(count>1){
for(i in 2:count) result[[paste0("s",(i-1))]]=""
}
}
result<-result %>% select("name1",everything())
rowcount=nrow(result)
if(vanilla) {
col_keys=c("name1",names(result)[2:6])
if(count>1){
for(i in 1:(count-1)) {
col_keys=c(col_keys,paste0("s",i),names(result)[(i*5+2):(i*5+6)])
}
}
} else{
col_keys=names(result)
}
ft<-flextable(result,col_keys=col_keys)
ft
hlabel=c("Antecedent","","Coef","SE","t","p")
if(count>1){
for(i in 2:count){
if(vanilla) { hlabel=c(hlabel,"","","Coef","SE","t","p") }
else { hlabel=c(hlabel,"","Coef","SE","t","p") }
}
}
hlabel<-setNames(hlabel,col_keys)
hlabel=as.list(hlabel)
hlabel
ft<-ft %>% set_header_labels(values=hlabel)
colcount=5+ifelse(vanilla,1,0)
ft
for(i in 1:count){
ft<- ft %>% merge_h_range(i=(rowcount-4):rowcount,
j1=colcount*(i-1)+3,j2=colcount*(i-1)+6)
}
ft<- ft %>% align(align="center",part="all") %>%
hline_top(part="header",border=fp_border(color="white",width=0))
ft
for(i in 1:count){
ft <- ft %>% hline_top(j=((i-1)*colcount+2):(i*colcount),
part="header",border=fp_border(color="black",width=1))
}
big_border=fp_border(color="black",width=2)
hlabel=c("","",modelNames[1],rep("",3))
if(count>1){
for(i in 2:count){
if(vanilla) {hlabel=c(hlabel,"","",modelNames[i],rep("",3))}
else {hlabel=c(hlabel,"",modelNames[i],rep("",3))}
}
}
hlabel<-setNames(hlabel,col_keys)
hlabel=as.list(hlabel)
hlabel
length(hlabel)
length(col_keys)
count
colcount
ft <- add_header_row(ft,values=hlabel,top=TRUE,
colwidths=rep(1,count*colcount+ifelse(vanilla,0,1)))
ft <- ft %>%
hline_top(j=2:(count*colcount++ifelse(vanilla,0,1)),part="header",border=fp_border(color="black",width=1))
ft
for(i in 1:count){
ft<-ft %>% hline(i=1,j=((i-1)*colcount+3):((i-1)*colcount+6),
part="header",border=fp_border(color="black",width=1))
}
for(i in 1:count){
ft <- ft %>% merge_h_range (i=1,j1=(i-1)*colcount+3,j2=(i-1)*colcount+6,
part="header")
}
ft
hlabel=list(name1="",coef1="Consequent")
ft<-ft %>%
add_header_row(top=TRUE,values=hlabel,
colwidths=c(1,count*colcount+ifelse(vanilla,0,1)-1)) %>%
hline_top(part="header",border=big_border) %>%
hline(i=1,j=2:(count*colcount+ifelse(vanilla,0,1)),part="header",
border=fp_border(color="black",width=1)) %>%
merge_h_range(i=1,j1=2,j2=count*colcount+ifelse(vanilla,0,1),part="header") %>%
align(align="center",part="header") %>%
align(align="right",part="body") %>%
bold(part="header") %>%
align(i=(nrow(x)-4):nrow(x),align="center",part="body") %>%
fontsize(part="all",size=12) %>%
hline(i=rowcount-5,border=fp_border(color="gray"),part="body")
ft
ft
if(count>1){
if(vanilla) {
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.01) %>%
width(j=(i-1)*6+2,width=0.5)
}
} else{
for(i in 1:(count-1)){
ft<-ft %>% width(j=(i-1)*5+2,width=0.5)
}
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
if(count>1){
if(vanilla) {
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.01) %>%
width(j=(i-1)*6+2,width=0.5)
}
} else{
for(i in 1:(count-1)){
ft<-ft %>% width(j=(i-1)*5+2,width=0.5)
}
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
if(count>1){
if(vanilla) {
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.001) %>%
width(j=(i-1)*6+2,width=0.5)
}
} else{
for(i in 1:(count-1)){
ft<-ft %>% width(j=(i-1)*5+2,width=0.5)
}
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
if(count>1){
if(vanilla) {
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.001) %>%
width(j=(i-1)*6+2,width=0.4)
}
} else{
for(i in 1:(count-1)){
ft<-ft %>% width(j=(i-1)*5+2,width=0.5)
}
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
fit1=lm(mpg~wt,data=mtcars)
library(processR)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
x=modelsSummary(fit1)
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
x=modelsSummary(list(fit1,fit2,fit3))
modelsSummaryTable(x)
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
modelsSummaryTable(list(fit1,fit2))
x=modelsSummary(list(fit1,fit2,fit3))
modelsSummaryTable(x)
x=modelsSummary(list(fit1,fit2,fit3),vanilla=FALSE)
modelsSummaryTable(x,vanilla=FALSE)
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
#' fit1=lm(mpg~wt,data=mtcars)
#' fit2=lm(mpg~wt*hp,data=mtcars)
#' fit3=lm(mpg~wt*hp*am,data=mtcars)
#' x=modelsSummary(fit1)
#' modelsSummaryTable(x)
#' modelsSummary(list(fit1,fit2))
#' modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
#' x=modelsSummary(list(fit1,fit2,fit3))
#' modelsSummaryTable(x)
#'}
modelsSummaryTable=function(x,vanilla=TRUE,...){
# vanilla=TRUE
# require(tidyverse)
# require(flextable)
# require(officer)
# x=modelsSummary(list(fit1,fit2))
if(!("modelSummary" %in% class(x))) {
x=modelsSummary(x,...)
}
modelNames=attr(x,"modelNames")
modelNames
result=x
count=ncol(x)/5
count
result[["name1"]]=rownames(result)
if(vanilla){
if(count>1){
for(i in 2:count) result[[paste0("s",(i-1))]]=""
}
}
result<-result %>% select("name1",everything())
rowcount=nrow(result)
if(vanilla) {
col_keys=c("name1",names(result)[2:6])
if(count>1){
for(i in 1:(count-1)) {
col_keys=c(col_keys,paste0("s",i),names(result)[(i*5+2):(i*5+6)])
}
}
} else{
col_keys=names(result)
}
ft<-flextable(result,col_keys=col_keys)
ft
hlabel=c("Antecedent","","Coef","SE","t","p")
if(count>1){
for(i in 2:count){
if(vanilla) { hlabel=c(hlabel,"","","Coef","SE","t","p") }
else { hlabel=c(hlabel,"","Coef","SE","t","p") }
}
}
hlabel<-setNames(hlabel,col_keys)
hlabel=as.list(hlabel)
hlabel
ft<-ft %>% set_header_labels(values=hlabel)
colcount=5+ifelse(vanilla,1,0)
ft
for(i in 1:count){
ft<- ft %>% merge_h_range(i=(rowcount-4):rowcount,
j1=colcount*(i-1)+3,j2=colcount*(i-1)+6)
}
ft<- ft %>% align(align="center",part="all") %>%
hline_top(part="header",border=fp_border(color="white",width=0))
ft
for(i in 1:count){
ft <- ft %>% hline_top(j=((i-1)*colcount+2):(i*colcount),
part="header",border=fp_border(color="black",width=1))
}
big_border=fp_border(color="black",width=2)
hlabel=c("","",modelNames[1],rep("",3))
if(count>1){
for(i in 2:count){
if(vanilla) {hlabel=c(hlabel,"","",modelNames[i],rep("",3))}
else {hlabel=c(hlabel,"",modelNames[i],rep("",3))}
}
}
hlabel<-setNames(hlabel,col_keys)
hlabel=as.list(hlabel)
hlabel
length(hlabel)
length(col_keys)
count
colcount
ft <- add_header_row(ft,values=hlabel,top=TRUE,
colwidths=rep(1,count*colcount+ifelse(vanilla,0,1)))
ft <- ft %>%
hline_top(j=2:(count*colcount++ifelse(vanilla,0,1)),part="header",border=fp_border(color="black",width=1))
ft
for(i in 1:count){
ft<-ft %>% hline(i=1,j=((i-1)*colcount+3):((i-1)*colcount+6),
part="header",border=fp_border(color="black",width=1))
}
for(i in 1:count){
ft <- ft %>% merge_h_range (i=1,j1=(i-1)*colcount+3,j2=(i-1)*colcount+6,
part="header")
}
ft
hlabel=list(name1="",coef1="Consequent")
ft<-ft %>%
add_header_row(top=TRUE,values=hlabel,
colwidths=c(1,count*colcount+ifelse(vanilla,0,1)-1)) %>%
hline_top(part="header",border=big_border) %>%
hline(i=1,j=2:(count*colcount+ifelse(vanilla,0,1)),part="header",
border=fp_border(color="black",width=1)) %>%
merge_h_range(i=1,j1=2,j2=count*colcount+ifelse(vanilla,0,1),part="header") %>%
align(align="center",part="header") %>%
align(align="right",part="body") %>%
bold(part="header") %>%
align(i=(nrow(x)-4):nrow(x),align="center",part="body") %>%
fontsize(part="all",size=12) %>%
hline(i=rowcount-5,border=fp_border(color="gray"),part="body")
ft
if(count>1){
if(vanilla) {
for(i in 1:(count-1)){
ft<-ft %>% width(j=i*6+1,width=0.001)
}
for(i in 1:count){
width(j=(i-1)*6+2,width=0.4)
}
} else{
for(i in 1:count){
ft<-ft %>% width(j=(i-1)*5+2,width=0.5)
}
}
for(i in 1:(count)){
ft<-ft %>% italic(i=3,j=c(((i-1)*colcount+3):((i-1)*colcount+5)),
italic=TRUE,part="header")
}
}
ft
if(!vanilla){
ft <-ft %>%
theme_zebra(even_body="#EFEFEF",odd_body="transparent",
even_header ="#5B7778",odd_header="#5B7778") %>%
fontsize(size=12,part="all") %>%
align(align="center",part="header") %>%
align(j=1,align="center",part="body") %>%
align(j=2:(1+colcount*count),align="right",part="body") %>%
align(i=(nrow(x)-4):nrow(x),align="center",part="body") %>%
color(color="white",part="header") %>%
hline(j=2:(1+colcount*count),border=fp_border(color="black",width=1),
part="header") %>%
vline(j=1:(1+colcount*count),border=fp_border(color="black",width=1),
part="header") %>%
vline_left(border=fp_border(color="black",width=1),
part="header") %>%
hline(j=1:(1+colcount*count),border=fp_border(color="#EDBD3E",width=1),
part="body") %>%
vline(j=1:(1+colcount*count),border=fp_border(color="#EDBD3E",width=1),
part="body") %>%
vline_left(border=fp_border(color="#EDBD3E",width=1),
part="body")
}
ft
}
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
x=modelsSummary(fit1)
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
modelsSummaryTable(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2))
library(processR)
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
modelsSummaryTable(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
modelsSummaryTable(x)
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
x=modelsSummary(fit1)
modelsSummaryTable(x)
modelsSummaryTable(x,vanilla=FALSE)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
modelsSummaryTable(list(fit1,fit2))
x=modelsSummary(list(fit1,fit2,fit3))
modelsSummaryTable(x)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
labels=list(X="wt",W="hp",Y="mpg",Z="am")
x=modelsSummary(fit1,labels=labels)
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2),labels=labels)
modelsSummaryTable(list(fit1,fit2),labels=labels,vanilla=FALSE)
modelsSummaryTable(list(fit1,fit2),labels=labels)
x=modelsSummary(list(fit1,fit2,fit3))
modelsSummaryTable(x)
x=modelsSummary(list(fit1,fit2,fit3),labels=labels)
modelsSummaryTable(x)
x=modelsSummary(list(fit1,fit2,fit3),labels=labels)
x
modelsSummaryTable(x)
modelsSummary2Table(x)
modelsSummary2Table(x)
modelsSummaryTable(x)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp")
modelsSummary(fit,labels=labels)
modelsSummary2(fit,labels=labels)
modelsSummaryTable(fit,labels=labels)
modelsSummary2Table(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
labels=list(X="wt",W="hp",Y="mpg",Z="am")
x=modelsSummary(list(fit1,fit2,fit3),labels=labels)
modelsSummaryTable(x)
fit=list(fit1,fit2,fit3)
modelsSummaryTable(fit)
modelsSummary2Table(fit)
modelsSummaryTable(fit)
fit=lm(mpg~wt*hp*am,data=mtcars)
modelsSummaryTable(fit)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp")
modelsSummary(fit,labels=labels)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
labels=list(X="wt",W="hp",Y="mpg",Z="am")
x=modelsSummary(fit1,labels=labels)
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2),labels=labels)
modelsSummaryTable(list(fit1,fit2),labels=labels,vanilla=FALSE)
x=modelsSummary(list(fit1,fit2,fit3),labels=labels)
modelsSummaryTable(x)
x=modelsSummary(list(fit1,fit3),labels=labels)
modelsSummaryTable(x)
x=modelsSummary(list(fit1,fit2,fit3),labels=labels)
modelsSummaryTable(x)
library(processR)
devtools::document()
devtools::check()
