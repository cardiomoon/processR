df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
df[[6]]=pformat(df[[6]])
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
r2diff=function(fit,digits=4){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
df[1,2,3,6]=myformat(df[1,2,3,6],digits)
df[[6]]=pformat(df[[6]])
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
r2diff=function(fit,digits=4){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
df[c(1,2,3,6)]=myformat(df[c(1,2,3,6)],digits)
df[[6]]=pformat(df[[6]])
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
r2diff=function(fit,digits=4){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param digits
#' @param mode Integer. If 1, filter interaction only. Else all data
r2diff=function(fit,digits=4,mode=1){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(mode==1) {
select=str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param digits
#' @param mode Integer. If 1, filter interaction only. Else all data
#' @importFrom stringr str_detect
r2diff=function(fit,digits=4,mode=1){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(mode==1) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
r2diff(fit)
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param digits
#' @param mode Integer. If 1, filter interaction only. Else all data
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,digits=4,mode=1){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
if(mode==1) {
select=stringr::str_detect(vars,":")
vars=vars[select]
}
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
df
}
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param digits
#' @param mode Integer. If 1, filter interaction only. Else all data
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,digits=4,mode=1){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(mode==1) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
r2diff(fit,mode==0)
r2diff(fit,mode=0)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param digits Integer indicating the number of decimal places
#' @param interaction.only Logical
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,digits=4,interaction.only=TRUE){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(interaction.only) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
#' Calculate change of R2 and adjusted R2
#' @param fit An object of class lm
#' @param interaction.only Logical
#' @param digits Integer indicating the number of decimal places
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,interaction.only=TRUE,digits=4){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(interaction.only) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
#' Calculate difference of R2 and adjusted R2
#' @param fit An object of class lm
#' @param interaction.only Logical
#' @param digits Integer indicating the number of decimal places
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,interaction.only=TRUE,digits=4){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
if(interaction.only) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
#' Calculate difference of R2 and adjusted R2
#' @param fit An object of class lm
#' @param interaction.only Logical
#' @param digits Integer indicating the number of decimal places
#' @importFrom stringr str_detect
#' @examples
#' fit=lm(mpg~wt*hp,data=mtcars)
#' r2diff(fit)
r2diff=function(fit,interaction.only=TRUE,digits=NULL){
fit.r2=summary(fit)$r.squared
fit.adj.r2=summary(fit)$adj.r.squared
vars=names(fit$coef)[-1]
df=fit$model
r2=c()
adj.r2=c()
f=c()
df1=c()
df2=c()
p=c()
for(i in 1:length(vars)){
temp=vars[-i]
eq=paste0(names(df)[1],"~",paste0(temp,collapse="+"))
fit1=lm(as.formula(eq),data=df)
r2=c(r2,summary(fit1)$r.squared)
adj.r2=c(adj.r2,summary(fit1)$adj.r.squared)
result=anova(fit1,fit)
f=c(f,result$F[2])
df1=c(df1,result$Df[2])
df2=c(df2,summary(fit)$df[2])
p=c(p,result$`Pr(>F)`[2])
}
r2diff=fit.r2-r2
ar2diff=fit.adj.r2-adj.r2
df=data.frame(r2diff=r2diff,ar2diff=ar2diff,F=f,df1=df1,df2=df2,p=p)
rownames(df)=vars
if(!is.null(digits)){
for(i in c(1,2,3,6)){
df[[i]]=myformat(df[[i]],digits)
}
df[[6]]=pformat(df[[6]])
}
if(interaction.only) {
select=stringr::str_detect(vars,":")
df=df[select,]
}
df
}
fit=lm(mpg~wt*hp,data=mtcars)
r2diff(fit)
devtools::document()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(processR)
?r2diff
