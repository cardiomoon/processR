df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df
df %>% spread(key=2,value=3) -> df2
df2
require(tidyverse)
df<-df[c(pred,modx,dep)]
df %>% spread(key=2,value=3) -> df2
df2
df
df1=calEquation(fit,modx.values = modx.values)
df1
df1=calEquation(fit,modx.values = modx.values)
df1
df1[[modx]]=modx.values
df1
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df1
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df
fit=lm(justify~skeptic*frame,data=disaster)
pred=NULL
modx=NULL
pred.values=NULL
modx.values=NULL
rangemode=2
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df1
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df
df<-df[c(pred,modx,dep)]
df
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("Y")),"yhat")
df
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(Y)")),"yhat")
df
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(Y)")),"\u0176")
df
df<-df[c(pred,modx,dep)]
df
colnames(df)=c(paste0(pred,"(W)"),paste0(modx,("(X)")),"\u0176")
df
df<-df[c(pred,modx,dep)]
df
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df1
df
round(df,3)
df
fit
df
df[]=lapply(df,pformat,3)
df
df[]=lapply(df,myformat,3)
df
fit$coef
modelsSummary(fit)
modelsSummary(list(fit))
labels=list(X="skeptic",Y="justify",W="frame")
modelsSummary(list(fit),labels=labels)
modelsSummaryTable(list(fit),labels=labels)
fit$coef
digits=3
coef=round(fit$coef,digits)
coef
sign
coef
coef2str=function(x){
paste0(ifelse(sign(x)>=0,"+",""),x)
}
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
temp
coef2str=function(x){
paste0(ifelse(sign(x)>=0," + ",""),x)
}
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
temp
coef2str=function(x){
paste0(ifelse(sign(x)>=0," + "," "),x)
}
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
temp
coef2str=function(x){
paste0(ifelse(sign(x)>=0," + "," - "),abs(x))
}
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
temp
pred=NULL
modx=NULL
pred.values=NULL
modx.values=NULL
rangemode=2
digits=3
data=fit$model
iris1=addCatVars(iris,c("Species"))
iris3=addCatVars(iris,c("Species"),mode=3)
fit1=lm(Sepal.Length~Sepal.Width+D1+D2,data=iris1)
getYhat(fit1)
fit1=lm(Sepal.Length~D2*Sepal.Width+Sepal.Width*D1+Petal.Width,data=iris1)
getYhat(fit1)
fit3=lm(Sepal.Length~D2*Sepal.Width+Sepal.Width*D1+Petal.Width*D1+Petal.Width*D2,data=iris3)
getYhat(fit3,mode=3)
modSummary=function(fit){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
df
}
modSummary=function(fit,pred=NULL,modx=NULL,pred.values=NULL,modx.values=NULL,
rangemode=2,digits=3){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
df
}
#'fit=lm(justify~skeptic*frame,data=disaster)
#'modSummary(fit)
modSummary=function(fit,pred=NULL,modx=NULL,pred.values=NULL,modx.values=NULL,
rangemode=2,digits=3){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
df
}
#' Make tbale summarizing moderation effect
#'@param pred name of predictor variable
#'@param modx name of moderator variable
#'@param pred.values Values of predictor variables
#'@param modx.values Values of modifier variables
#'@param rangemode integer. 1 or 2
#'@param digits integer indicating the number of decimal places
#'@examples
#'fit=lm(justify~skeptic*frame,data=disaster)
#'modSummary(fit)
modSummary=function(fit,pred=NULL,modx=NULL,pred.values=NULL,modx.values=NULL,
rangemode=2,digits=3){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
df
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
class(df)="modSummary"
#' Make tbale summarizing moderation effect
#'@param pred name of predictor variable
#'@param modx name of moderator variable
#'@param pred.values Values of predictor variables
#'@param modx.values Values of modifier variables
#'@param rangemode integer. 1 or 2
#'@param digits integer indicating the number of decimal places
#'@examples
#'fit=lm(justify~skeptic*frame,data=disaster)
#'modSummary(fit)
modSummary=function(fit,pred=NULL,modx=NULL,pred.values=NULL,modx.values=NULL,
rangemode=2,digits=3){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
class(df)="modSummary"
df
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
#' Make tbale summarizing moderation effect
#'@param pred name of predictor variable
#'@param modx name of moderator variable
#'@param pred.values Values of predictor variables
#'@param modx.values Values of modifier variables
#'@param rangemode integer. 1 or 2
#'@param digits integer indicating the number of decimal places
#'@examples
#'fit=lm(justify~skeptic*frame,data=disaster)
#'modSummary(fit)
modSummary=function(fit,pred=NULL,modx=NULL,pred.values=NULL,modx.values=NULL,
rangemode=2,digits=3){
data=fit$model
dep=colnames(data)[1]
if(is.null(pred)) pred=colnames(data)[2]
if(is.null(modx)) modx=colnames(data)[3]
if(is.null(pred.values)){
if(rangemode==1) {
pred.values=mean(data[[pred]],na.rm=TRUE)+c(-1,0,1)*sd(data[[pred]],na.rm=TRUE)
} else if(rangemode==2) {
pred.values=quantile(data[[pred]],probs=c(0.16,0.5,0.84),type=6)
}
}
if(is.null(modx.values)){
if(length(unique(data[[modx]]))<6) {
modx.values=unique(data[[modx]])
} else if(rangemode==1){
modx.values=mean(data[[modx]],na.rm=T)+c(-1,1)*sd(data[[modx]],na.rm=T)
} else{
modx.values=quantile(data[[modx]],probs=c(0.16,0.84),type=6)
}
}
df1=calEquation(fit,modx.values = modx.values)
df1[[modx]]=modx.values
df=tidyr::crossing(pred.values,modx.values)
names(df)=c(pred,modx)
df<-dplyr::left_join(df,df1)
df[[dep]]=df$slope*df[[pred]]+df$intercept
df<-df[c(pred,modx,dep)]
colnames(df)=c(paste0(pred,"(X)"),paste0(modx,("(W)")),"\u0176")
df[]=lapply(df,myformat,digits)
coef=round(fit$coef,digits)
temp=paste0("\u0176 = ",coef[1], coef2str(coef[2]),"X",
coef2str(coef[3]),"W",coef2str(coef[4]),"XW")
attr(df,"eq")=temp
class(df)=c("modSummary","data.frame")
df
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
print.modSummary=function(x,...){
cat("\n\nSummary of moderation effect\n")
cat("\n\nEquation=",attr(x,"eq"),"\n")
x
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
fit=lm(justify~skeptic*frame,data=disaster)
print.modSummary=function(x,...){
cat("\n\nSummary of moderation effect\n")
cat("\n\nEquation=",attr(x,"eq"),"\n")
print(x)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
print.modSummary=function(x,...){
cat("\n\nSummary of moderation effect\n")
cat("\n\nEquation=",attr(x,"eq"),"\n")
class(x)="data.frame"
print(x)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
print.modSummary=function(x,...){
cat("\n\nSummary of moderation effect\n")
cat("Equation\n",attr(x,"eq"),"\n\n")
class(x)="data.frame"
print(x)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
print.modSummary=function(x,...){
cat("\n\nSummary of moderation effect\n")
cat("\nEquation: ",attr(x,"eq"),"\n\n")
class(x)="data.frame"
print(x)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
print.modSummary=function(x,...){
cat("\nSummary of moderation effect\n")
cat("\nEquation: ",attr(x,"eq"),"\n\n")
class(x)="data.frame"
print(x)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
modSummaryTable=function(x,...){
df2flextable(x,...)
}
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
modSummaryTable=function(x,...){
if("lm" %in% class(x)) x=modSummary(x)
df2flextable(x,...)
}
modSummaryTable(fit)
modSummaryTable=function(x,...){
if("lm" %in% class(x)) x=modSummary(x)
rrtable::df2flextable(x,...)
}
modSummaryTable(fit)
modSummaryTable(fit,vanilla=TRUE)
modSummaryTable=function(x,...){
if("lm" %in% class(x)) x=modSummary(x,...)
rrtable::df2flextable(x,...)
}
modSummaryTable(fit,vanilla=TRUE)
modSummaryTable=function(x,...){
if("lm" %in% class(x)) x=modSummary(x)
rrtable::df2flextable(x,...)
}
modSummaryTable(fit,vanilla=TRUE)
modSummaryTable=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary(x,...)
rrtable::df2flextable(x,vanilla=vanilla)
}
modSummaryTable(fit,vanilla=TRUE)
modSummaryTable(fit)
modSummaryTable=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary(x,...)
rrtable::df2flextable(x,vanilla=vanilla) %>%
add_footer_lines(attr(x,"eq") )) %>%
align(align="right",part="footer")
}
modSummaryTable=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary(x,...)
rrtable::df2flextable(x,vanilla=vanilla) %>%
add_footer_lines(attr(x,"eq")) %>%
align(align="right",part="footer")
}
modSummaryTable(fit)
devtools::document()
fit=lm(justify~skeptic*frame,data=disaster)
library(processR)
modSummaryTable(fit)
fit=lm(justify~skeptic*frame,data=disaster)
modSummaryTable(fit)
devtools::documnet()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
fit=lm(justify~skeptic*frame,data=disaster)
modSummaryTable(fit)
source('~/Documents/ownCloud/Documents/processR/R/modSummary.R', echo=TRUE)
fit=lm(justify~skeptic*frame,data=disaster)
modSummary(fit)
devtools::document()
devtools::check()
library(processR)
