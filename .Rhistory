estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
nodes
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
require(stringr)
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
if(whatLabel!="name") arrows3$label=as.numeric(arrows3$label)
nodes
arrows
arrows3
# print(nodes)
# print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
drawArrows(arrows,nodes,xmargin=xmargin,rady=rady,radx=radx,addprime=addprime)
require(diagram)
# print(nodes)
# print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
drawArrows(arrows,nodes,xmargin=xmargin,rady=rady,radx=radx,addprime=addprime)
drawStatDiagram(no=no,arrows=arrows3,nodes=nodes,labels=labels,nodeslabels=nodeslabels,
xmargin=xmargin,radx=radx,rady=rady,fit,addprime=addprime,xlim=xlim,ylim=ylim)
labels=list(X="wt",Mi="am",Y="mpg");names=c("X","MiX","Y")
findNames(labels,names=names)
labels=list(X="wt",M="am",Y="mpg");names=c("X","MX","Y")
findNames(labels,names=names)
labels=list(X="wt",Mi="am",Y="mpg");names=c("X","MX","Y")
findNames(labels,names=names)
labels=list(X="wt",M="am",Y="mpg");name="MiX"
nodeslabels=list(X="weight",M="automatic",Y="milepergallon")
findName(labels=labels,nodeslabels=nodeslabels,name="MiX")
findName(labels=labels,name="MiX")
findName(labels=labels,nodeslabels=nodeslabels,name="M")
labels=list(X="GDPpp",M="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\nper inhabitant",M="Illiteracy Rate",Y="Mean Life\nExpectation")
findName(labels=labels,name="Mi")
findName(labels=labels,nodeslabels=nodeslabels,name="Mi")
labels=list(X="GDPpp",Mi="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\nper inhabitant",Mi="Illiteracy Rate",Y="Mean Life\nExpectation")
findName(labels=labels,name="M")
findName(labels=labels,nodeslabels=nodeslabels,name="M")
library(processR)
labels=list(X="GDPpp",Mi="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\nper inhabitant",Mi="Illiteracy Rate",Y="Mean Life\nExpectation")
findName(labels=labels,name="M")
findName(labels=labels,nodeslabels=nodeslabels,name="M")
labels=list(X="wintense",Mi="cogapp",Y="emotion")
nodeslabels=list(X="Work\nIntensity",Mi="Cognitive\nAppraisal",Y="Emotional\nExhaustion")
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=nodeslabels)
statisticalDiagram(4,labels=labels,nodeslabels=nodeslabels)
labels=list(X="GDP\nper inhabitant",M="Illiteracy Rate",Y="Mean Life\nExpectation")
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=labels,arrowslabels=c("e","f","g"),whatLabel="label")
statisticalDiagram(4,labels=labels,arrowslabels=list("e","f","g"),whatLabel="label")
statisticalDiagram(4,labels=labels,arrowslabels=c("e","f","g"),whatLabel="label")
#
no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
arrowslty=NULL
labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
digits=3;covar=list();addCovar=TRUE;type=NULL
includeLatentVars=FALSE;addprime=TRUE
arrowslabels=c("e","f","g")
#
# no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
# arrowslty=NULL
# labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
# digits=3;covar=list();addCovar=TRUE;type=NULL
# includeLatentVars=FALSE;addprime=TRUE
arrowslabels=c("e","f","g");whatLabel="label"
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
source('~/Documents/ownCloud/Documents/processR/R/statisticalDiagram.R', echo=TRUE)
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
if( !is.null(estimateTable)) {
if(no==1.1){
arrows2$Predictors=arrows2$start
} else{
arrows2$Predictors=findNames(labels,names=arrows2$start)
}
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
nodes
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
if(whatLabel!="name") arrows3$label=as.numeric(arrows3$label)
#
# no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
# arrowslty=NULL
# labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
# digits=3;covar=list();addCovar=TRUE;type=NULL
# includeLatentVars=FALSE;addprime=TRUE
arrowslabels=c("e","f","g");whatLabel="label";ylim=NULL
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
arrows3
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
if( !is.null(estimateTable)) {
if(no==1.1){
arrows2$Predictors=arrows2$start
} else{
arrows2$Predictors=findNames(labels,names=arrows2$start)
}
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
whatLabel
arrowslabels
nrow(arrows3)
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
arrows3
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
nodes
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
if(whatLabel=="est") arrows3$label=as.numeric(arrows3$label)
drawStatDiagram(no=no,arrows=arrows3,nodes=nodes,labels=labels,nodeslabels=nodeslabels,
xmargin=xmargin,radx=radx,rady=rady,fit,addprime=addprime,xlim=xlim,ylim=ylim)
library(processR)
labels=list(X="wintense",Mi="cogapp",Y="emotion")
nodeslabels=list(X="Work\nIntensity",Mi="Cognitive\nAppraisal",Y="Emotional\nExhaustion")
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=nodeslabels)
statisticalDiagram(4,labels=labels,nodeslabels=nodeslabels)
labels=list(X="GDP\nper inhabitant",M="Illiteracy Rate",Y="Mean Life\nExpectation")
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=labels,arrowslabels=c("e","f","g"),whatLabel="label")
library(processR)
statisticalDiagram(4,labels=labels,arrowslabels=c("e","f","g"),whatLabel="label")
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
result
require(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
result
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi)
plot(result,type=1)
plot(result)
plot(result,type=1,whatLabel="label",arrowslabels="c",addprime=FALSE)
plot(result,whatLabel="label",arrowslabels=c("a","b","c"))
plot(result,type=1)
plot(result)
require(processR)
library(klaR)
data(countries)
labels=list(X="GDPpp",M="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\n per inhabitant",M="Illiteracy Rate",
Y="Mean Life\nExpectation")
result=mediationBK(labels=labels,data=countries)
plot(result,nodeslabels=nodeslabels)
plot(result,type=1,nodeslabels=nodeslabels)
plot(result,nodeslabels=nodeslabels)
plot(result,nodeslabels=nodeslabels,whatLabel="est")
result=mediationBK(labels=labels,data=countries)
plot(result,nodeslabels=nodeslabels,whatLabel="est")
plot(result,nodeslabels=nodeslabels)
plot(result,type=1,nodeslabels=nodeslabels)
result=mediationBK(labels=labels,data=countries)
plot(result,nodeslabels=nodeslabels)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi)
x=result
str(x)
lty=c()
for(i in 2:4){
lty=c(lty,ifelse(x$pvalue[i]<0.05,1,2))
}
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label",...)
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label")
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi)
plot(result,type=1)
plot(result)
plot(result,type=1,whatLabel="label",arrowslabels="c",addprime=FALSE)
plot(result,whatLabel="label",arrowslabels=c("a","b","c"))
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi)
plot(result,type=1)
plot(result)
plot(result,type=1,whatLabel="label",arrowslabels="c",addprime=FALSE)
plot(result,whatLabel="label",arrowslabels=c("a","b","c"))
require(processR)
library(klaR)
data(countries)
labels=list(X="GDPpp",M="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\n per inhabitant",M="Illiteracy Rate",
Y="Mean Life\nExpectation")
result=mediationBK(labels=labels,data=countries)
plot(result,nodeslabels=nodeslabels)
plot(result,type=1,nodeslabels=nodeslabels)
plot(result)
plot(result)
plot(result,type=1)
plot(result)
result$coef
plot(result)
plot(result,type=1)
data(countries)
labels=list(X="GDPpp",M="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\n per inhabitant",M="Illiteracy Rate",
Y="Mean Life\nExpectation")
result=mediationBK(labels=labels,data=countries)
result
plot(result)
x=result
type=0
whatLabel="est"
if(type==1){
lty=ifelse(x$pvalue[1]<0.05,1,2)
if(whatLabel=="est"){
statisticalDiagram(0,labels=x$labels,arrowslabels=round(x$coef[1],3),arrowslty=lty,whatLabel = "label",...)
} else{
statisticalDiagram(0,labels=x$labels,...)
}
} else{
lty=c()
for(i in 2:4){
lty=c(lty,ifelse(x$pvalue[i]<0.05,1,2))
}
if(whatLabel=="est"){
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label",...)
# statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label")
} else{
statisticalDiagram(4,labels=x$labels,...)
}
}
lty=c()
for(i in 2:4){
lty=c(lty,ifelse(x$pvalue[i]<0.05,1,2))
}
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label")
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label")
statisticalDiagram(4,labels=x$labels,arrowslabels=round(x$coef[2:4],3),arrowslty=lty,whatLabel = "label",...)
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi)
plot(result,type=1)
plot(result)
plot(result,type=1,whatLabel="label",arrowslabels="c",addprime=FALSE)
plot(result,whatLabel="label",arrowslabels=c("a","b","c"))
library(klaR)
data(countries)
labels=list(X="GDPpp",M="Illit",Y="LifeEx")
nodeslabels=list(X="GDP\n per inhabitant",M="Illiteracy Rate",
Y="Mean Life\nExpectation")
result=mediationBK(labels=labels,data=countries)
result
plot(result,nodeslabels=nodeslabels)
plot(result,type=1,nodeslabels=nodeslabels)
result$coef
plot(result)
plot(result,type=1)
library(processR)
library(processR)
devtools::document()
devtools::check()
library(processR)
