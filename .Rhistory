paste0(collapse="+") %>%
str_replace("\\+-","-")
temp1
cat("Conditional Effect = ",temp1,"\n")
data=fit$model
if(is.null(modx.values)){
W1=getRepValues(data,W,rangemode=rangemode,maxylev=maxylev)
} else{
W1=modx.values
}
if(addz){
if(is.null(mod2.values)){
Z1=getRepValues(data,Z,rangemode=rangemode,maxylev=maxylev)
} else{
Z1=mod2.values
}
}
w<-z<-y<-c()
W1
if(addz) {
for(i in seq_along(W1)){
for(j in seq_along(Z1)){
W=W1[i]
if(addz) Z=Z1[j]
w=c(w,W1[i])
if(addz) z=c(z,Z1[j])
y=c(y,eval(parse(text=temp)))
}
}
df=data.frame(W=w,Z=z,slope=round(y,digits))
colnames(df)=c(paste0(labelW,"(W)"),paste0(labelZ,"(Z)"),"slope")
} else{
for(i in seq_along(W1)){
W=W1[i]
w=c(w,W1[i])
y=c(y,eval(parse(text=temp)))
}
df=data.frame(W=w,slope=round(y,digits))
colnames(df)=c(paste0(labelW,"(W)"),"slope")
}
attr(df,"eq")=temp1
df
}
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit,X="hp",W="wt")
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,labels=labels)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit,X="hp",W="wt")
devtools::document()
devtools::check()
#' Make flextable summarizing moderation effect
#' @param x An object
#' @param vanilla logical
#' @param ... Further argument to be passed to modSummary3
#' @export
#' @examples
#' fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
#' modSummary3Table(fit)
modSummary3Table=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary3(x,...)
rrtable::df2flextable(x,vanilla=vanilla)
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit)
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit)
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels)
#'@param digits integer indicating the number of decimal places
#'@export
#'@examples
#'labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
#'fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
#'modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
#'fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
#'modSummary3(fit1)
#'fit=lm(mpg~hp*wt,data=mtcars)
#'modSummary3(fit,X="hp",W="wt")
modSummary3=function(fit,X=NULL,W=NULL,Z=NULL,labels=NULL,modx.values=NULL,
mod2.values=NULL,rangemode=2,maxylev=6,digits=3){
# X="hp";W="wt";Z=NULL;modx.values=NULL;labels=NULL
# rangemode=2;maxylev=6;digits=3;mod2.values=NULL
data=fit$model
if(is.null(X)){ X=labels$X }
if(is.null(X)){ X=names(data)[2]}
if(is.null(W)){ W=labels$W }
if(is.null(W)){ W=names(data)[3]}
if(is.null(Z)){ Z=labels$Z }
if(is.null(Z)) {
if(length(names(data))>3) Z=names(data)[4]
}
addz=TRUE
if(is.null(Z)) addz=FALSE
labelW=W
labelZ=Z
vars=names(fit$coef)
select=str_detect(vars,X)
coef=fit$coef[select]
count=length(coef)
vars1<- vars[select] %>%
str_replace(W,"W") %>%
str_replace_all(":","*") %>%
str_replace(X,"1")
if(addz) vars1=str_replace(vars1,Z,"Z")
temp<-paste0("coef[",1:count,"]*",vars1) %>%
str_replace("\\*1","") %>%
paste0(collapse="+")
temp
temp1=paste0(round(coef,digits=3),"*",vars1) %>%
str_replace("\\*1","") %>%
paste0(collapse="+") %>%
str_replace("\\+-","-")
temp1
cat("Conditional Effect = ",temp1,"\n")
if(is.null(modx.values)){
W1=getRepValues(data,W,rangemode=rangemode,maxylev=maxylev)
} else{
W1=modx.values
}
if(addz){
if(is.null(mod2.values)){
Z1=getRepValues(data,Z,rangemode=rangemode,maxylev=maxylev)
} else{
Z1=mod2.values
}
}
w<-z<-y<-c()
W1
if(addz) {
for(i in seq_along(W1)){
for(j in seq_along(Z1)){
W=W1[i]
if(addz) Z=Z1[j]
w=c(w,W1[i])
if(addz) z=c(z,Z1[j])
y=c(y,eval(parse(text=temp)))
}
}
df=data.frame(W=w,Z=z,slope=round(y,digits))
colnames(df)=c(paste0(labelW,"(W)"),paste0(labelZ,"(Z)"),"slope")
} else{
for(i in seq_along(W1)){
W=W1[i]
w=c(w,W1[i])
y=c(y,eval(parse(text=temp)))
}
df=data.frame(W=w,slope=round(y,digits))
colnames(df)=c(paste0(labelW,"(W)"),"slope")
}
attr(df,"eq")=temp1
df
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit,X="hp",W="wt")
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels)
modSummary3Table(fit,labels=labels)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit)
modSummary3Table(fit,mod2.values=c(30,50,70))
#' Make flextable summarizing moderation effect
#' @param x An object
#' @param vanilla logical
#' @param ... Further argument to be passed to modSummary3
#' @export
#' @examples
#' fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
#' modSummary3Table(fit,mod2.values=c(30,50,70))
modSummary3Table=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary3(x,...)
rrtable::df2flextable(x,vanilla=vanilla,digits=3)
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit,mod2.values=c(30,50,70))
#' Make flextable summarizing moderation effect
#' @param x An object
#' @param vanilla logical
#' @param ... Further argument to be passed to modSummary3
#' @export
#' @examples
#' fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
#' modSummary3Table(fit,mod2.values=c(30,50,70))
modSummary3Table=function(x,vanilla=TRUE,...){
if("lm" %in% class(x)) x=modSummary3(x,...)
rrtable::df2flextable(x,vanilla=vanilla,digits=3) %>%
add_footer_lines(attr(x,"eq") ) %>%
align(align="right",part="footer")
}
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit,mod2.values=c(30,50,70))
system("grep -r '\u' *")
system('grep -r "\u" *')
system('grep -r "\\u" *')
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
modSummary3(fit1,rangemode=1)
devtools::document()
devtools::check()
devtools::document()
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary2(fit,rangemode=2,mod2.values=c(30,50,70),summarymode=2)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,labels=labels,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,rangemode=1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit,mod2.values=c(30,50,70))
devtools::document()
devtools::check()
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,rangemode=1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3Table(fit,mod2.values=c(30,50,70))
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,rangemode=1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
devtools::document()
devtools::check()
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,rangemode=1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary3(fit,mod2.values=c(30,50,70))
fit1=lm(govact~negemot*sex*age+posemot+ideology,data=glbwarm)
modSummary3(fit1,rangemode=1)
fit=lm(mpg~hp*wt,data=mtcars)
modSummary3(fit)
library(processR)
modSummary3
require(processR)
fit=lm(mpg~hp*wt+am,data=mtcars)
summry(fit)
summary(fit)
modelsSummary(fit)
modelsSummary2(fit)
summary(fit)$coef
df=summary(fit)$coef
df
rownames(df)
vars=rownames(df)[str_detect(rownames(df),":")]
require(stringr)
vars=rownames(df)[str_detect(rownames(df),":")]
vars
fit=lm(mpg~hp*wt+hp*cyl+am,data=mtcars)
summary(fit)
df=summary(fit)$coef
vars=rownames(df)[str_detect(rownames(df),":")]
vars
vars=unlist(strsplit(vars,":"))
vars
require(tidyverse)
rownames(df)
rownames(df) %>% str_detect(":")
rownames(df) %>% filter(str_detect(":"))
vars=rownames(df)[str_detect(rownames(df),":")]
vars=unlist(strsplit(vars,":"))
vars
vars=unique(unlist(strsplit(vars,":")))
vars
vars=rownames(df)[str_detect(rownames(df),":")]
vars
vars1=unique(unlist(strsplit(vars,":")))
vars
vars1
vars2=stediff(rownames(df),union(vars,vars1))
vars2=setdiff(rownames(df),union(vars,vars1))
vars2
vars2=setdiff(rownames(df)[-1],union(vars,vars1))
vars2
vars2=rownames(df)[str_detect(rownames(df),":")]
vars1=unique(unlist(strsplit(vars2,":")))
vars3=setdiff(rownames(df)[-1],union(vars1,vars2))
vars=c(vars1,vars2,vars3)
vars
df[vars,]
#'
reArrange=function(fit){
df=summary(fit)$coef
vars2=rownames(df)[str_detect(rownames(df),":")]
vars1=unique(unlist(strsplit(vars2,":")))
vars3=setdiff(rownames(df)[-1],union(vars1,vars2))
vars=c(vars1,vars2,vars3)
df[vars,]
}
fit=lm(mpg~hp*wt+hp*cyl+am,data=mtcars)
summary(fit)$coef
#'
getCoef=function(fit){
df=summary(fit)$coef
vars2=rownames(df)[str_detect(rownames(df),":")]
vars1=unique(unlist(strsplit(vars2,":")))
vars3=setdiff(rownames(df)[-1],union(vars1,vars2))
vars=c(vars1,vars2,vars3)
df[vars,]
}
#'
getCoef=function(fit){
df=summary(fit)$coef
vars2=rownames(df)[str_detect(rownames(df),":")]
vars1=unique(unlist(strsplit(vars2,":")))
vars3=setdiff(rownames(df)[-1],union(vars1,vars2))
vars=c(vars1,vars2,vars3)
df[vars,]
}
getCoef(fit)
fit=lm(mpg~hp*wt*am,data=mtcars)
summary(fit)$coef
getCoef(fit)
fit=lm(mpg~hp*wt,data=mtcars)
getCoef(fit)
fit=lm(mpg~hp*wt+am,data=mtcars)
getCoef(fit)
fit=lm(mpg~hp*wt+am,data=mtcars)
getCoef(fit)
str(getCoef(fit))
devtools::document()
devtools::check()
fit=lm(mpg~hp*wt+am,data=mtcars)
summary(fit)$coef
getCoef(fit)
#'Get coef summary table
#'@param fit An object of class lm
#'@examples
#'fit=lm(mpg~hp*wt+am)
#'getCoef(fit)
#'@export
getCoef=function(fit){
df=summary(fit)$coef
vars2=rownames(df)[str_detect(rownames(df),":")]
vars1=unique(unlist(strsplit(vars2,":")))
vars3=setdiff(rownames(df)[-1],union(vars1,vars2))
vars=c(rownames(df)[1],vars1,vars2,vars3)
df[vars,]
}
fit=lm(mpg~hp*wt+am)
getCoef(fit)
fit=lm(mpg~hp*wt+am,data=mtcars)
getCoef(fit)
devtools::document()
devtools::check()
fit=lm(mpg~hp*wt+am,data=mtcars)
getCoef(fit)
modelsSummary2(fit)
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
require(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
modelsSummary2(fit1)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*vs+am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*vs+am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="vs")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
modelsSummary2(fit1)
system("grep -r 'changeLabelName' *")
system("grep -r 'changeLabelName=' *")
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
changeLabelName(x,labels)
changeLabelName(x,labels,add=TRUE)
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
i=4
temp=unlist(strsplit(x[i],":"))
temp
temp2=c()
for(j in 1:length(temp)){
temp3=names(unlist(labels))[which(unlist(labels)==temp[j])]
temp2=c(temp2,temp3)
}
temp2
if(length(temp2)>1){
temp2=paste0(temp2,collapse=":")
if(add){
res=c(res,paste0(x[i],"(",temp2,")"))
} else{
res=c(res,temp2)
}
} else{
temp=x[i]
temp
for(j in 1:length(labels)){
if(add) {
temp=str_replace(x[i],labels[[j]],paste0(labels[[j]],"(",names(labels)[j],")"))
} else{
temp=str_replace(x[i],labels[[j]],names(labels)[j])
}
}
temp
res=c(res,temp)
}
#'Change Label Names
#'@param x A character vector
#'@param labels A list
#'@param add A logical
#'@export
#'@examples
#'labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
#'x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
#'changeLabelName(x,labels)
#'changeLabelName(x,labels,add=TRUE)
changeLabelName=function(x,labels,add=FALSE){
res=c()
# i=4
for(i in 1:length(x)){
if(str_detect(x[i],":")){
temp=unlist(strsplit(x[i],":"))
temp
temp2=c()
for(j in 1:length(temp)){
temp3=names(unlist(labels))[which(unlist(labels)==temp[j])]
temp2=c(temp2,temp3)
}
temp2
if(length(temp2)>1){
temp2=paste0(temp2,collapse=":")
if(add){
res=c(res,paste0(x[i],"(",temp2,")"))
} else{
res=c(res,temp2)
}
} else{
temp=x[i]
temp
for(j in 1:length(labels)){
if(add) {
temp=str_replace(x[i],labels[[j]],paste0(labels[[j]],"(",names(labels)[j],")"))
} else{
temp=str_replace(x[i],labels[[j]],names(labels)[j])
}
}
temp
res=c(res,temp)
}
}  else if(x[i] %in% unlist(labels)){
if(add){
temp=names(unlist(labels))[which(unlist(labels)==x[i])]
res=c(res,paste0(x[i],"(",temp,")"))
} else{
res=c(res,names(unlist(labels))[which(unlist(labels)==x[i])])
}
} else{
res=c(res,x[i])
}
}
res
}
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
changeLabelName(x,labels)
require(stringr)
changeLabelName(x,labels)
changeLabelName(x,labels,add=TRUE)
library(processR)
