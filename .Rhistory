for(i in 1:count){
select=c(select,2+(i-1)*4,count*4+1+i,5+(i-1)*4)
}
df=df[select]
df
count=(ncol(x)-1)/4
count
df=x
class(df)="data.frame"
df[]=lapply(df,myformat)
for(i in 1:count){
df[[1+i*4]]=pformat(df[[1+i*4]])
}
for(i in 1:count){
df[[paste0("ci",i)]]=paste0("(",df[[3+(i-1)*4]]," to ",df[[4+(i-1)*4]],")")
}
# vanilla=FALSE
select=c(1)
for(i in 1:count){
select=c(select,2+(i-1)*4,count*4+1+i,5+(i-1)*4)
}
df=df[select]
df
temp=rep(c("estimate","95% Bootstrap CI","p"),count)
temp
table=rrtable::df2flextable(df,vanilla=vanilla)
table
col_keys=colnames(df)
hlabel<-setNames(temp,col_keys)
hlabel=as.list(hlabel)
hlabel
table<-table %>% set_header_labels(values=hlabel)
table
temp=rep(c("estimate","95% Bootstrap CI","p"),count)
temp =c("type",temp)
table=rrtable::df2flextable(df,vanilla=vanilla)
table
col_keys=colnames(df)
hlabel<-setNames(temp,col_keys)
hlabel=as.list(hlabel)
hlabel
table<-table %>% set_header_labels(values=hlabel)
table
hlabel=list(type="",
est.indirect=paste0("Indirect Effect\n",attr(x,"equations")[1]),
est.direct=paste0("Direct Effect\n",attr(x,"equations")[2]))
big_border=fp_border(color="black",width=2)
table<-table %>%
add_header_row(top=TRUE,values=hlabel,colwidths=c(1,3,3))
table
table %>%
align(j=c(1),align="center",part="body") %>%
align(align="center",part="header") %>%
fontsize(size=12,part="header") %>%
bold(part="header") %>%
italic(i=1,j=c(4,7),italic=TRUE,part="header") %>%
width(j=c(3,6),width=2)
table<-table %>%
align(j=c(1),align="center",part="body") %>%
align(align="center",part="header") %>%
fontsize(size=12,part="header") %>%
bold(part="header") %>%
italic(i=1,j=c(4,7),italic=TRUE,part="header") %>%
width(j=c(3,6),width=2)
table<-table %>% color(i=1,j=1:7,color="white",part="header") %>%
bg(i=1,j=1:7,bg="#5B7778",part="header") %>%
merge_at(i=1:2,j=1,part="header")
table
table<-table %>% vline(i=1:2,border=fp_border(color="white"),part="header") %>%
hline(i=1:2,border=fp_border(color="white"),part="header") %>%
width(j=1,width=1)
table
library(processR)
x=medSummary(semfit,boot.ci.type = "all")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator,data=disaster)
cat(model)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
x=modmedSummary(semfit,mod="skeptic")
x
modmedSummaryTable(x)
modmedSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit)
x
medSummaryTable(x)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable2(x,vanilla=FALSE)
medSummaryTable2(x,vanilla=FALSE)
medSummaryTable2(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x,vanilla=FALSE)
library(processR)
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x,vanilla=FALSE)
x
cat("\nvanilla=",vanilla,"\n")
vannilla=FLASE
vannilla=FALSE
vanilla=FALSE
count=(ncol(x)-1)/4
count
df=x
class(df)="data.frame"
df[]=lapply(df,myformat)
for(i in 1:count){
df[[1+i*4]]=pformat(df[[1+i*4]])
}
for(i in 1:count){
df[[paste0("ci",i)]]=paste0("(",df[[3+(i-1)*4]]," to ",df[[4+(i-1)*4]],")")
}
if(vanilla){
for(i in 1:count){ df[[paste0("s",i)]]=""}
select=c(1)
for(i in 1:count){
select=c(select,2+(i-1)*4,count*4+1+i,5+(i-1)*4)
if(i<count) select=c(select,which(colnames(df)==paste0("s",i)))
}
df=df[select]
df
temp=rep(c("estimate","95% Bootstrap CI","p",""),count)
temp=c("type",temp[-length(temp)])
temp
table=rrtable::df2flextable(df,vanilla=vanilla)
table
col_keys=colnames(df)
hlabel<-setNames(temp,col_keys)
hlabel=as.list(hlabel)
hlabel
table<-table %>% set_header_labels(values=hlabel)
hlabel=list(type="",
est.indirect=paste0("Indirect Effect\n",attr(x,"equations")[1]),
s1="",
est.direct=paste0("Direct Effect\n",attr(x,"equations")[2]))
big_border=fp_border(color="black",width=2)
table<-table %>%
hline_top(part="header",border=fp_border(color="black",width=0)) %>%
add_header_row(top=TRUE,values=hlabel,colwidths=c(1,3,1,3)) %>%
hline_top(part="header",border=big_border) %>%
hline(i=1,j=6,part="header",border=fp_border(color="black",width=1))%>%
hline(i=1,j=2,part="header",border=fp_border(color="black",width=1)) %>%
width(j=c(5),width=0.01)
table %>%
align(j=c(1),align="center",part="body") %>%
align(align="center",part="header") %>%
fontsize(size=12,part="header") %>%
bold(part="header") %>%
italic(i=1,j=c(5),italic=TRUE,part="header") %>%
width(j=c(3,7),width=2)
} else{
# vanilla=FALSE
select=c(1)
for(i in 1:count){
select=c(select,2+(i-1)*4,count*4+1+i,5+(i-1)*4)
}
df=df[select]
df
temp=rep(c("estimate","95% Bootstrap CI","p"),count)
temp =c("type",temp)
table=rrtable::df2flextable(df,vanilla=vanilla)
table
col_keys=colnames(df)
hlabel<-setNames(temp,col_keys)
hlabel=as.list(hlabel)
hlabel
table<-table %>% set_header_labels(values=hlabel)
table
hlabel=list(type="type",
est.indirect=paste0("Indirect Effect\n",attr(x,"equations")[1]),
est.direct=paste0("Direct Effect\n",attr(x,"equations")[2]))
big_border=fp_border(color="black",width=2)
table<-table %>%
add_header_row(top=TRUE,values=hlabel,colwidths=c(1,3,3))
table<-table %>%
align(j=c(1),align="center",part="body") %>%
align(align="center",part="header") %>%
fontsize(size=12,part="header") %>%
bold(part="header") %>%
italic(i=1,j=c(4,7),italic=TRUE,part="header") %>%
width(j=c(3,6),width=2)
table<-table %>% color(i=1,j=1:7,color="white",part="header") %>%
bg(i=1,j=1:7,bg="#5B7778",part="header") %>%
merge_at(i=1:2,j=1,part="header")
table
table<-table %>% vline(i=1:2,border=fp_border(color="white"),part="header") %>%
hline(i=1:2,border=fp_border(color="white"),part="header") %>%
width(j=1,width=1)
}
table
library(processR)
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
devtools::document()
devtools::document()
devtools::check()
library(processR)
devtools::document()
library(processR)
statisticalDiagram(1)
statisticalDiagram(0)
statisticalDiagram(0,whatLabel="label",arrowslabels="c")
library(processR)
statisticalDiagram(0,whatLabel="label",arrowslabels="c")
statisticalDiagram(0,whatLabel="label",arrowslabels=c("a","b","c"))
statisticalDiagram(4,whatLabel="label",arrowslabels=c("a","b","c"))
devtools::document()
library(processR)
statisticalDiagram(4,whatLabel="label",arrowslabels=c("a","b","c"))
statisticalDiagram(0,whatLabel="label",arrowslabels="c")
devtools::check()
statisticalDiagram(0,whatLabel="label",arrowslabels="c")
statisticalDiagram(0,whatLabel="label",arrowslabels="c",addprime=FALSE)
statisticalDiagram(4,whatLabel="label",arrowslabels=c("a","b","c"))
library(processR)
statisticalDiagram(4,whatLabel="label",arrowslabels=c("a","b","c"))
statisticalDiagram(4,whatLabel="label",arrowslabels=c("a","b","c"),addprime=FALSE)
library(processR)
devtools::document()
devtools::check()
library(processR)
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator,data=disaster)
cat(model)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
require(processR)
require(lavaan)
require(ztable)
require(ggplot2)
require(moonBook)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
x=medSummary(semfit)
x
medSummaryTable(x)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit)
x
semfit=sem(model=model,data=disaster)
summary(semfit)
semfit=sem(model=model,data=disaster)
summary(semfit)
x=medSummary(semfit)
x
semfit=sem(model=model,data=disaster)
summary(semfit)
x=medSummary(semfit)
x
str(x)
x=medSummary(semfit)
x
str(x)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit)
x
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
x=medSummary(semfit)
x
medSummaryTable(x)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
x=medSummary(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
labels=list(X="negemot",M="ideology",Y="govact")
str(labels)
labels$X
devtools::document()
devtools::check()
devtools::document()
devtools::check()
labels=linst(X="negemot",M="ideology",Y="govact")
labels=list(X="negemot",M="ideology",Y="govact")
cat(tripleEquation(labels=labels,moderator=moderator,covar=covar))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
moderator=list(name=c("W"),site=list(c("c")))
cat(tripleEquation(X=X,Y=Y,moderator=moderator))
X="negemot";Y="govact";suffix=0
moderator=list(name=c("W"),site=list(c("c")))
cat(tripleEquation(X=X,Y=Y,moderator=moderator))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
labels=list(X="negemot",M="ideology",Y="govact")
cat(tripleEquation(labels=labels,moderator=moderator,covar=covar))
devtools::document()
devtools::document()
devtools::check()
library(processR)
moderator=list(name=c("W"),site=list(c("c")))
covar=list(name=c("C1","C2","C3"),label=c("ese","sex","tenure"),site=list(c("M","Y"),"Y","Y"))
labels=list(X="negemot",M="ideology",Y="govact")
cat(tripleEquation(labels=labels,moderator=moderator,covar=covar))
devtools::document()
library(processR)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
medSummary(semfit)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
require(processR)
require(lavaan)
require(ztable)
require(ggplot2)
require(moonBook)
labels=list(X="frame",M="justify",Y="donate")
labels=list(X="frame",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
cat(model)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
medSummary(semfit)
x
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
medSummary(semfit)
x
x=medSummary(semfit)
x
x
medSummaryTable(x)
medSummaryTable(semfit)
medSummaryTable(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
library(processR)
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator,rangemode=2,data=disaster)
labels=list(X="frame",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
cat(model)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
modmedSummary(semfit,mod="skeptic")
x
modmedSummary(semfit,mod="skeptic")
modmedSummaryTable(semfit,mod="skeptic")
x=modmedSummary(semfit,mod="skeptic")
modmedSummaryTable(x,vanilla=FALSE)
devtools::document()
library(processR)
devtools::check()
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator,rangemode=2,data=disaster)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
modmedSummary(semfit,mod="skeptic")
modmedSummaryTable(semfit,mod="skeptic")
medSummaryTable(x)
medSummaryTable(semfit)
x=medSummary(semfit)
x
medSummaryTable(x)
medSummaryTable(semfit)
medSummaryTable(x)
medSummaryTable(semfit,boot.ci.type = "all")
x
medSummaryTable(x)
medSummaryTable(x,vanilla=FALSE)
devtools::document()
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit3=lm(mpg~wt*hp*am,data=mtcars)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
x=modelsSummary(list(fit1,fit2,fit3))
modelsSummaryTable(x)
modelsSummary(list(fit1,fit2))
modelsSummaryTable(list(fit1,fit2),vanilla=FALSE)
library(processR)
devtools::check()
system("grep -r 'meanCentering' *")
library(processR)
newData=meanCentering(education,colnames(education)[1:3])
str(newData)
scale(education[["age"]]],center=TRUE,scale=FALSE)
res=scale(education[["age"]],center=TRUE,scale=FALSE)
str(res)
as.vector(res)
str(as.vector(res))
str(res)
res[[1]]
res[1]
res
res[,1]
str(res[,1])
#' Perform mean centering
#' @param data A data.frame
#' @param names column names to mean centering
#' @examples
#' library(processR)
#' newData=meanCentering(education,colnames(education)[1:3])
#' @export
meanCentering=function(data,names){
for(i in seq_along(names)){
data[[paste0(names[i],".c")]]=scale(data[[names[i]]],center=TRUE,scale=FALSE)[,1]
}
data
}
newData=meanCentering(education,colnames(education)[1:3])
str(newData)
library(processR)
devtools::document()
devtools::check()
library(processR)
library(processR)
devtools::document()
devtools::check()
library(processR)
labels=list(X="frame",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
require(processR)
require(lavaan)
require(ztable)
require(ggplot2)
require(moonBook)
model=tripleEquation(X="frame",M="justify",Y="donate",moderator=moderator,rangemode=2,data=disaster)
labels=list(X="frame",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
cat(model)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
summary(semfit)
modmedSummary(semfit,mod="skeptic")
