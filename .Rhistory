labels=list(X="protest",Y="liking",M="respappr")
meanSummary(data=protest,labels=labels)
meanSummary(data=protest,labels=labels,maxylev=2)
library(processR)
devtools::docuemnt()
devtools::document()
devtools::check()
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
meanSummary(data=pmi,labels=labels,xlabels=xlabels)
require(processR)
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
meanSummary(data=pmi,labels=labels,xlabels=xlabels)
devtools::document()
devtools::check()
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*vs+am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="vs")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
modelsSummary2(fit1)
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*vs+am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="vs")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
modelsSummary2(fit,labels=labels,prefix=c("a","b"))
modelsSummary2(fit,labels=labels,prefix=c("c","b"))
modelsSummary2(fit1)
modelsSummary2(fit,labels=labels)
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(list(fit1,fit2),labels=labels)
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
require(tidyverse)
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf<-mydf %>% select("name1",everything())
rownames(mydf)=mydf[["name1"]]
mydf<-mydf[-1]
mydf[]=lapply(mydf,myformat)
mydf<-mydf[c(2:nrow(mydf),1),]
rownames(mydf)[nrow(mydf)]="Constant"
mydf
for(i in 1:count){
mydf[[4*i]]=pformat(mydf[[4*i]])
}
finalNames=rownames(mydf)
df2=data.frame(coef,stringsAsFactors = FALSE)
colnames(df2)=paste0("coef",1:ncol(df2))
finalNames=c(finalNames,c("Observations","R2","Adjusted R2","Residual SE","F statistic"))
res=full_join(mydf,df2,by=paste0("coef",1:count))
res[is.na(res)]=""
res
if(!is.null(labels)) finalNames=changeLabelName(finalNames,labels,add=TRUE)
rownames(res)=finalNames
res
class(res)=c("modelSummary","data.frame")
attr(res,"modelNames")=modelNames
res
str(res)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(list(fit1,fit2),labels=labels)
fit=list(fit1,fit2)
modelsSummary(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
df
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf<-mydf %>% select("name1",everything())
rownames(mydf)=mydf[["name1"]]
mydf<-mydf[-1]
mydf[]=lapply(mydf,myformat)
mydf<-mydf[c(2:nrow(mydf),1),]
rownames(mydf)[nrow(mydf)]="Constant"
mydf
for(i in 1:count){
mydf[[4*i]]=pformat(mydf[[4*i]])
}
finalNames=rownames(mydf)
df2=data.frame(coef,stringsAsFactors = FALSE)
colnames(df2)=paste0("coef",1:ncol(df2))
finalNames=c(finalNames,c("Observations","R2","Adjusted R2","Residual SE","F statistic"))
res=full_join(mydf,df2,by=paste0("coef",1:count))
res[is.na(res)]=""
res
if(!is.null(labels)) finalNames=changeLabelName(finalNames,labels,add=TRUE)
rownames(res)=finalNames
res
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp*vs+am,data=mtcars)
labels=list(Y="mpg",X="wt",W="hp",Z="vs")
fit=list(fit1,fit2)
modelsSummary2(fit,labels=labels)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][["name"]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
prefix="b";constant="iy"
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][["name"]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
df
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][[paste0("label",i)]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
df
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf<-mydf %>% select("name1",everything())
rownames(mydf)=mydf[["name1"]]
mydf<-mydf[-1]
mydf
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][[paste0("label",i)]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
df<-df %>% select(starts_with("label"),everything())
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if("lm" %in%  class(fit)) fit=list(fit)
count=length(fit)
df<-coef<-list()
modelNames=c()
if(length(constant)==1) constant=rep(constant,count)
if(length(prefix)==1) prefix=rep(prefix,count)
for(i in 1 :count){
df[[i]]=data.frame(summary(fit[[i]])$coef)
colnames(df[[i]])=paste0(c("coef","se","t","p"),i)
df[[i]][["name1"]]=rownames(df[[i]])
df[[i]][[paste0("label",i)]]=c(constant[i],paste0(prefix[i],1:(nrow(df[[i]])-1)))
colnames(df[[i]])[5]="name1"
coef[[i]]=getInfo(fit[[i]])[1:5]
df[[i]]<-df[[i]] %>% select(starts_with("label"),everything())
modelNames=c(modelNames,names(fit[[i]]$model)[1])
}
if(!is.null(labels)) modelNames=changeLabelName(modelNames,labels,add=TRUE)
df
if(count==1){
mydf=df[[1]]
} else{
mydf<-reduce(df,full_join,by="name1")
}
mydf
mydf<-mydf %>% select("name1",everything())
rownames(mydf)=mydf[["name1"]]
mydf<-mydf[-1]
mydf[]=lapply(mydf,myformat)
mydf<-mydf[c(2:nrow(mydf),1),]
rownames(mydf)[nrow(mydf)]="Constant"
mydf
for(i in 1:count){
mydf[[4*i]]=pformat(mydf[[4*i]])
}
for(i in 1:count){
mydf[[5*i]]=pformat(mydf[[5*i]])
}
finalNames=rownames(mydf)
df2=data.frame(coef,stringsAsFactors = FALSE)
colnames(df2)=paste0("coef",1:ncol(df2))
finalNames=c(finalNames,c("Observations","R2","Adjusted R2","Residual SE","F statistic"))
res=full_join(mydf,df2,by=paste0("coef",1:count))
res[is.na(res)]=""
res
if(!is.null(labels)) finalNames=changeLabelName(finalNames,labels,add=TRUE)
rownames(res)=finalNames
res
str(res)
res
res
class(res)=c("modelSummary","data.frame")
rownames(res)=finalNames
res
class(res)=c("modelSummary","data.frame")
attr(res,"modelNames")=modelNames
res
str(res)
#'S3 method print for object modelSummary
#'@param x Object of class modelSummary
#'@param ... additional arguments to pass to print.modelSummary
#'@importFrom stringr str_pad
#'@export
print.modelSummary=function(x,...){
count=ncol(x)/4
colwidth=37
left=25
total=left+colwidth*count+1
right=colwidth*count+1
cat(paste(rep("=",total),collapse = ""),"\n")
cat(paste0(centerPrint("",left),centerPrint("Consequent",right)),"\n")
cat(paste0(centerPrint("",left),paste(rep("-",right),collapse = "")),"\n")
names=attr(x,"modelNames")
cat(paste0(centerPrint("",left)))
for(i in 1:count){cat(centerPrint(names[i],colwidth))}
cat("\n")
cat(paste0(centerPrint("",left)))
for(i in 1:count) cat(paste0(rep("-",colwidth),collapse = "")," ")
cat("\n")
cat(paste0(centerPrint("Antecedent",left)))
for(i in 1:count) cat(paste0(centerPrint("Coef",8),centerPrint("SE",8),centerPrint("t",8),centerPrint("p",8)," "))
cat("\n")
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in 1:(nrow(x)-5)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
for(k in 1:5){
cat(str_pad(x[i,(j-1)*5+k],6,"left")," ")
cat(ifelse((j==count)&(k==5),"\n",""))
}
}
}
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in (nrow(x)-4):nrow(x)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
cat(centerPrint(x[i,(j-1)*5+1],colwidth))
cat(ifelse(j==count,"\n",""))
}
}
cat(paste(rep("=",total),collapse = ""),"\n")
}
res
#'S3 method print for object modelSummary
#'@param x Object of class modelSummary
#'@param ... additional arguments to pass to print.modelSummary
#'@importFrom stringr str_pad
#'@export
print.modelSummary=function(x,...){
count=ncol(x)/5
colwidth=37
left=25
total=left+colwidth*count+1
right=colwidth*count+1
cat(paste(rep("=",total),collapse = ""),"\n")
cat(paste0(centerPrint("",left),centerPrint("Consequent",right)),"\n")
cat(paste0(centerPrint("",left),paste(rep("-",right),collapse = "")),"\n")
names=attr(x,"modelNames")
cat(paste0(centerPrint("",left)))
for(i in 1:count){cat(centerPrint(names[i],colwidth))}
cat("\n")
cat(paste0(centerPrint("",left)))
for(i in 1:count) cat(paste0(rep("-",colwidth),collapse = "")," ")
cat("\n")
cat(paste0(centerPrint("Antecedent",left)))
for(i in 1:count) cat(paste0(centerPrint("",5),centerPrint("Coef",8),centerPrint("SE",8),centerPrint("t",8),centerPrint("p",8)," "))
cat("\n")
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in 1:(nrow(x)-5)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
for(k in 1:5){
cat(str_pad(x[i,(j-1)*5+k],6,"left")," ")
cat(ifelse((j==count)&(k==5),"\n",""))
}
}
}
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in (nrow(x)-4):nrow(x)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
cat(centerPrint(x[i,(j-1)*5+1],colwidth))
cat(ifelse(j==count,"\n",""))
}
}
cat(paste(rep("=",total),collapse = ""),"\n")
}
res
#'S3 method print for object modelSummary
#'@param x Object of class modelSummary
#'@param ... additional arguments to pass to print.modelSummary
#'@importFrom stringr str_pad
#'@export
print.modelSummary=function(x,...){
count=ncol(x)/5
colwidth=37
left=25
total=left+colwidth*count+1
right=colwidth*count+1
cat(paste(rep("=",total),collapse = ""),"\n")
cat(paste0(centerPrint("",left),centerPrint("Consequent",right)),"\n")
cat(paste0(centerPrint("",left),paste(rep("-",right),collapse = "")),"\n")
names=attr(x,"modelNames")
cat(paste0(centerPrint("",left)))
for(i in 1:count){cat(centerPrint(names[i],colwidth))}
cat("\n")
cat(paste0(centerPrint("",left)))
for(i in 1:count) cat(paste0(rep("-",colwidth),collapse = "")," ")
cat("\n")
cat(paste0(centerPrint("Antecedent",left)))
for(i in 1:count) cat(paste0(centerPrint("",5),centerPrint("Coef",8),centerPrint("SE",8),centerPrint("t",8),centerPrint("p",8)," "))
cat("\n")
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in 1:(nrow(x)-5)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
for(k in 1:5){
cat(str_pad(x[i,(j-1)*5+k],6,"left")," ")
cat(ifelse((j==count)&(k==5),"\n",""))
}
}
}
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in (nrow(x)-4):nrow(x)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
cat(centerPrint(x[i,(j-1)*5+2],colwidth))
cat(ifelse(j==count,"\n",""))
}
}
cat(paste(rep("=",total),collapse = ""),"\n")
}
res
#'S3 method print for object modelSummary
#'@param x Object of class modelSummary
#'@param ... additional arguments to pass to print.modelSummary
#'@importFrom stringr str_pad
#'@export
print.modelSummary=function(x,...){
count=ncol(x)/5
colwidth=37
left=25
total=left+colwidth*count+1
right=colwidth*count+1
cat(paste(rep("=",total),collapse = ""),"\n")
cat(paste0(centerPrint("",left),centerPrint("Consequent",right)),"\n")
cat(paste0(centerPrint("",left),paste(rep("-",right),collapse = "")),"\n")
names=attr(x,"modelNames")
cat(paste0(centerPrint("",left)))
for(i in 1:count){cat(centerPrint(names[i],colwidth))}
cat("\n")
cat(paste0(centerPrint("",left)))
for(i in 1:count) cat(paste0(rep("-",colwidth),collapse = "")," ")
cat("\n")
cat(paste0(centerPrint("Antecedent",left)))
for(i in 1:count) cat(paste0(centerPrint("",5),centerPrint("Coef",8),centerPrint("SE",8),centerPrint("t",8),centerPrint("p",8)," "))
cat("\n")
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in 1:(nrow(x)-5)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
for(k in 1:5){
if(k==1){
cat(str_pad(x[i,(j-1)*5+k],3,"left")," ")
} else{
cat(str_pad(x[i,(j-1)*5+k],6,"left")," ")
}
cat(ifelse((j==count)&(k==5),"\n",""))
}
}
}
cat(paste(rep("-",total),collapse = ""),"\n")
for(i in (nrow(x)-4):nrow(x)){
cat(centerPrint(rownames(x)[i],left))
for(j in 1:count){
cat(centerPrint(x[i,(j-1)*5+2],colwidth))
cat(ifelse(j==count,"\n",""))
}
}
cat(paste(rep("=",total),collapse = ""),"\n")
}
res
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
View(df2)
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
modelsSummary(fit,labels=labels)
modelsSummary(fit,labels=labels,prefix=c("c","b"))
res=modelsSummary(fit,labels=labels,prefix=c("c","b"))
str(res)
res=modelsSummary(fit,labels=labels,prefix=c("b","c"))
res$label2[3]="b"
res
res=modelsSummary(fit,labels=labels)
library(processR)
devtools::document()
library(processR)
fit1=lm(mpg~wt,data=mtcars)
fit2=lm(mpg~wt*hp,data=mtcars)
fit=list(fit1,fit2)
labels=list(Y="mpg",X="wt",W="hp",Z="am")
res=modelsSummary(fit,labels=labels)
modelsSummary(fit,labels=labels)
modelsSummary(fit,labels=labels,prefix=("b","c'"))
modelsSummary(fit,labels=labels,prefix=("b","c'"))
modelsSummary(fit,labels=labels,prefix=c("b","c'"))
modelsSummary(fit,labels=labels)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
