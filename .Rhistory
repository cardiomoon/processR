# if(i %in% pos[[l]]){
#   res=c(res,W[l],paste0(X[i],":",W[l]))
# }
}
if(mode==0){
if(length(res)>0) temp1=paste0("a",(1+count):(length(res)+count),"*",res)
count=count+length(res)
} else{
temp1=res
}
res1=c(res1,temp1)
if(j>1){
for(k in 2:j){
pos=1+sum(1:(j-1))+(k-1)
#cat("j=",j,",k=",k,"\n")
#cat("pos=",pos,",bmatrix[pos]=",bmatrix[pos],"\n")
if(bmatrix[pos]==1){
if(is.null(moderator$matrix)){
if(mode==0) {
res1=c(res1,paste0("d",j,k-1,"*",Y[k-1]))
} else{
res1=c(res1,Y[k-1])
}
} else{
for(l in seq_along(W)){
if(moderator$matrix[[l]][pos]==1){
res=c(Y[k-1],W[i],paste0(Y[k-1],":",W[i]))
} else{
res=c(Y[k-1])
}
}
if(mode==0) {
if(length(res)>0) temp1=paste0("d",(1+dcount):(length(res)+dcount),"*",res)
dcount=dcount+length(res)
res1=c(res1,temp1)
} else{
res1=c(res1,res)
}
}
}
}
}
}
} else if(depx==TRUE){
count=length(bmatrix)
count
xcount=matrix2no(bmatrix)
bpos=1+sum(1:(xcount-1))
bpos
bmatrix[bpos]
if(bmatrix[bpos]==1){
res=c()
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
res=c(res,X)
} else if(moderator$matrix[[l]][bpos]==0){
res=c(res,X)
} else{
res=c(res,X,W[l],paste0(X,":",W[l]))
}
}
if(mode==0){
res=paste0("c",1:length(res),"*",res)
}
res1=c(res1,res)
}
} else{
bpos=1+sum(1:(xcount))
bpos=bpos+1
bpos
i=0
for(k in bpos:length(bmatrix)){
i=i+1
if(bmatrix[k]==1){
res1=c(res1,X[i])
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
if(i %in% pos[[l]]){
res1=c(res1,W[l],paste0(X[i],":",W[l]))
}
} else{
if(moderator$matrix[[l]][k]==1){
res1=c(res1,W[l],paste0(X[i],":",W[l]))
}
}
}
}
}
res1=unique(res1)
if(mode==0){
if(length(res1)>0) res1=paste0("b",1:length(res1),"*",res1)
}
}
res1
if(length(res1)>0) temp=c(temp,paste0(Y[j],"~",paste0(res1,collapse="+")))
}
temp
temp=c()
j=1
count=0
dcount=0
res1=c()
for(i in 1:xcount){
res=c()
res=c(res,X[i])
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
if(i %in% pos[[l]]){
res=c(res,W[l],paste0(X[i],":",W[l]))
}
} else{
if(moderator$matrix[[l]][1]==1){
res=c(res,W[l],paste0(X[i],":",W[l]))
}
}
#
# if(i %in% pos[[l]]){
#   res=c(res,W[l],paste0(X[i],":",W[l]))
# }
}
if(mode==0){
if(length(res)>0) temp1=paste0("a",(1+count):(length(res)+count),"*",res)
count=count+length(res)
} else{
temp1=res
}
res1=c(res1,temp1)
if(j>1){
for(k in 2:j){
pos=1+sum(1:(j-1))+(k-1)
#cat("j=",j,",k=",k,"\n")
#cat("pos=",pos,",bmatrix[pos]=",bmatrix[pos],"\n")
if(bmatrix[pos]==1){
if(is.null(moderator$matrix)){
if(mode==0) {
res1=c(res1,paste0("d",j,k-1,"*",Y[k-1]))
} else{
res1=c(res1,Y[k-1])
}
} else{
for(l in seq_along(W)){
if(moderator$matrix[[l]][pos]==1){
res=c(Y[k-1],W[i],paste0(Y[k-1],":",W[i]))
} else{
res=c(Y[k-1])
}
}
if(mode==0) {
if(length(res)>0) temp1=paste0("d",(1+dcount):(length(res)+dcount),"*",res)
dcount=dcount+length(res)
res1=c(res1,temp1)
} else{
res1=c(res1,res)
}
}
}
}
}
}
j=1
pos=j+sum(1:j)
(pos=j+sum(1:j))
j=1
j=2
(pos=j+sum(1:j))
j=1
(pos=ifelse(j==1,1,j+sum(1:(j-1))))
j=2
(pos=ifelse(j==1,1,j+sum(1:(j-1))))
j=3
(pos=ifelse(j==1,1,j+sum(1:(j-1))))
j=1
(pos=ifelse(j==1,1,j-1+sum(1:(j-1))))
j=2
(pos=ifelse(j==1,1,j-1+sum(1:(j-1))))
j=3
(pos=ifelse(j==1,1,j-1+sum(1:(j-1))))
j=4
(pos=ifelse(j==1,1,j-1+sum(1:(j-1))))
j=1
(pos=ifelse(j==1,1,1+sum(1:(j-1))))
j=2
(pos=ifelse(j==1,1,1+sum(1:(j-1))))
j=3
(pos=ifelse(j==1,1,1+sum(1:(j-1))))
j=4
(pos=ifelse(j==1,1,1+sum(1:(j-1))))
X="baby";Y=c("wine","tent","sand");W=NULL;labels=list();prefix="a";mode=0;pos=list();
bmatrix=c(1,1,0,0,1,1,1,1,0,1);depy=FALSE;depx=FALSE
moderator=list(name=c("milk"),matrix=list(c(1,0,0,0,1,0,1,0,0,0)))
if(is.null(X)) X=labels$X
if(is.null(W)) {
if(!is.null(labels$W)) W=labels$W
if(!is.null(moderator)) W=moderator$name
}
if(length(W)==0) {
if(!is.null(labels$W)) W=labels$W
if(!is.null(moderator)) W=moderator$name
}
if(is.null(Y)) Y=labels$Y
xgroup<-wgroup<-c()
xcount<-wcount<-ycount<-0
(xcount=length(X))
(wcount=length(W))
(ycount=length(Y))
temp=c()
j=1
count=0
dcount=0
for(j in 1:ycount){
res1=c()
if(depy==FALSE){
for(i in 1:xcount){
res=c()
(pos=ifelse(j==1,1,1+sum(1:(j-1))))
if(bmatrix[pos]==1){
res=c(res,X[i])
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
if(i %in% pos[[l]]){
res=c(res,W[l],paste0(X[i],":",W[l]))
}
} else{
if(moderator$matrix[[l]][pos]==1){
res=c(res,W[l],paste0(X[i],":",W[l]))
}
}
#
# if(i %in% pos[[l]]){
#   res=c(res,W[l],paste0(X[i],":",W[l]))
# }
}
}
temp1=c()
if(mode==0){
if(length(res)>0) temp1=paste0("a",(1+count):(length(res)+count),"*",res)
count=count+length(res)
} else{
temp1=res
}
res1=c(res1,temp1)
if(j>1){
for(k in 2:j){
pos=1+sum(1:(j-1))+(k-1)
#cat("j=",j,",k=",k,"\n")
#cat("pos=",pos,",bmatrix[pos]=",bmatrix[pos],"\n")
if(bmatrix[pos]==1){
if(is.null(moderator$matrix)){
if(mode==0) {
res1=c(res1,paste0("d",j,k-1,"*",Y[k-1]))
} else{
res1=c(res1,Y[k-1])
}
} else{
for(l in seq_along(W)){
if(moderator$matrix[[l]][pos]==1){
res=c(Y[k-1],W[i],paste0(Y[k-1],":",W[i]))
} else{
res=c(Y[k-1])
}
}
if(mode==0) {
if(length(res)>0) temp1=paste0("d",(1+dcount):(length(res)+dcount),"*",res)
dcount=dcount+length(res)
res1=c(res1,temp1)
} else{
res1=c(res1,res)
}
}
}
}
}
}
} else if(depx==TRUE){
count=length(bmatrix)
count
xcount=matrix2no(bmatrix)
bpos=1+sum(1:(xcount-1))
bpos
bmatrix[bpos]
if(bmatrix[bpos]==1){
res=c()
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
res=c(res,X)
} else if(moderator$matrix[[l]][bpos]==0){
res=c(res,X)
} else{
res=c(res,X,W[l],paste0(X,":",W[l]))
}
}
if(mode==0){
res=paste0("c",1:length(res),"*",res)
}
res1=c(res1,res)
}
} else{
bpos=1+sum(1:(xcount))
bpos=bpos+1
bpos
i=0
for(k in bpos:length(bmatrix)){
i=i+1
if(bmatrix[k]==1){
res1=c(res1,X[i])
for(l in seq_along(W)){
if(is.null(moderator$matrix)){
if(i %in% pos[[l]]){
res1=c(res1,W[l],paste0(X[i],":",W[l]))
}
} else{
if(moderator$matrix[[l]][k]==1){
res1=c(res1,W[l],paste0(X[i],":",W[l]))
}
}
}
}
}
res1=unique(res1)
if(mode==0){
if(length(res1)>0) res1=paste0("b",1:length(res1),"*",res1)
}
}
res1
if(length(res1)>0) temp=c(temp,paste0(Y[j],"~",paste0(res1,collapse="+")))
}
temp
library(processR)
labels=list(X="baby",M=c("wine","tent","sand"),Y="tile",W="milk",Z="hair")
# moderator=list(name=c("milk","hair"),matrix=list(c(1,0,0,0,1,0,1,0,0,0),c(1,1,0,0,0,0,0,0,0,0)))
moderator=list(name=c("milk"),matrix=list(c(1,0,0,0,1,0,1,0,0,0)))
bmatrix=c(1,1,0,0,1,1,1,1,0,1)
eq=multipleMediation(labels=labels,bmatrix=bmatrix,moderator=moderator,mode=1)
cat(eq)
drawModel(equation=eq,labels=labels)
cat(eq)
df=equations2var(eq,labels=labels)
df
equations=unlist(strsplit(eq,"\n"))
equations
purrr::map_df(equations,eq2var,labels=labels)
labels
eq2var(equations[1],labels=labels)
eq2var(equations[2],labels=labels)
eq2var(equations[3],labels=labels)
df=equations2var(eq,labels=labels)
df
eq2var(equations[4],labels=labels)
df=equations2var(eq,labels=labels)
df
labels=list(X="baby",M=c("wine","tent","sand"),Y="tile",W="milk",Z="hair")
# moderator=list(name=c("milk","hair"),matrix=list(c(1,0,0,0,1,0,1,0,0,0),c(1,1,0,0,0,0,0,0,0,0)))
moderator=list(name=c("milk"),matrix=list(c(1,0,0,0,1,0,1,0,0,0)))
bmatrix=c(1,1,0,0,1,1,1,1,0,1)
cat(multipleMediation(labels=labels,bmatrix=bmatrix,moderator=moderator))
modelsSummary(labels=list(X="cond",M="pmi",Y="reaction"),data=pmi)
devtools::document()
library(processR)
modelsSummary(labels=list(X="cond",M="pmi",Y="reaction"),data=pmi)
labels=list(X="cond",M="pmi",Y="reaction")
modelsSummary(labels=labels,data=pmi)
labels=list(X="cond",M="pmi",Y="reaction")
modelsSummaryTable(labels=labels,data=pmi)
modelsSummaryTable(labels=labels,data=pmi)
x=modelsSummary(labels=labels,data=pmi)
modelsSummaryTable(x)
library(processR)
library(processR)
modelsSummaryTable(labels=labels,data=pmi)
devtools::document()
devtools::check()
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
meanSummary(data=pmi,labels=labels,xlabels=xlabels)
require(processR)
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
meanSummary(data=pmi,labels=labels,xlabels=xlabels)
X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
data=disaster;maxylev=6,mode=1
X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
data=disaster;maxylev=6;mode=1
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
# X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
# data=disaster;maxylev=6;mode=1
if(is.null(X)) X=labels[["X"]]
if(is.null(Y)) Y=labels[["Y"]]
if(is.null(M)) M=labels[["M"]]
if(is.null(W)) W=labels[["W"]]
values=sort(unique(data[[X]]))
count=length(values)
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
# X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
# data=disaster;maxylev=6;mode=1
if(is.null(X)) X=labels[["X"]]
if(is.null(Y)) Y=labels[["Y"]]
if(is.null(M)) M=labels[["M"]]
if(is.null(W)) W=labels[["W"]]
values=sort(unique(data[[X]]))
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
# X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
# data=disaster;maxylev=6;mode=1
if(is.null(X)) X=labels[["X"]]
X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
data=pmi;maxylev=6;mode=1
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
# X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
# data=pmi;maxylev=6;mode=1
if(is.null(X)) X=labels[["X"]]
if(is.null(Y)) Y=labels[["Y"]]
if(is.null(M)) M=labels[["M"]]
if(is.null(W)) W=labels[["W"]]
values=sort(unique(data[[X]]))
count=length(values)
X
values=sort(unique(data[[X]]))
data=pmi
require(processR)
X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
data=pmi;maxylev=6;mode=1
labels=list(X="cond",Y="reaction",M="pmi")
xlabels=c("Front Page","Interior Page")
values=sort(unique(data[[X]]))
count=length(values)
data
values=sort(unique(data[[X]]))
# X=NULL;Y=NULL;M=NULL;W=NULL;digits=3;xlabels=NULL
# data=pmi;maxylev=6;mode=1
if(is.null(X)) X=labels[["X"]]
if(is.null(Y)) Y=labels[["Y"]]
if(is.null(M)) M=labels[["M"]]
if(is.null(W)) W=labels[["W"]]
X
data
values=sort(unique(data[[X]]))
count=length(values)
data
y=getMeanSd(data=data,X=X,Y=Y,digits=digits)
#' get mean and sd
#' @param data A data.frame
#' @param X Name of independant variable
#' @param Y Name of dependant variable
#' @param digits Integer indicating the number of decimal places
getMeanSd=function(data,X,Y,digits){
values=sort(unique(data[[X]]))
y=c()
for(i in seq_along(values)) {
y=c(y,mean(data[data[[X]]==values[i],Y],na.rm=T),
sd(data[data[[X]]==values[i],Y],na.rm=T))
}
y=c(y,mean(data[[Y]],na.rm=T),sd(data[[Y]],na.rm=T))
sprintf(paste0("%0.",digits,"f"),y)
}
y=getMeanSd(data=data,X=X,Y=Y,digits=digits)
y
m=getMeanSd(data=data,X=X,Y=M,digits=digits)
yhat=getYhat1(data=data,X=X,M=M,Y=Y,digits=digits,maxylev=maxylev,mode=mode)
yhat
mean(pmi$pmi)
fit2=lm(reaction~cond+pmi,data=pmi)
summary(fit2)
coef(fit2)[1]+coef(fit2)[3]*mean(pmi$pmi)
coef(fit2)[1]+coef(fit2)[3]*mean(pmi$pmi)+coef(fit2)[2]
library(lavaan)
labels=list(X="cond",M="pmi",Y="reaction")
model=tripleEquation(labels=labels)
semfit=sem(model=model,data=pmi, se="boot", bootstrap=100)
require(processR)
library(lavaan)
labels=list(X="cond",M="pmi",Y="reaction")
model=tripleEquation(labels=labels)
semfit=sem(model=model,data=pmi, se="boot", bootstrap=100)
medSummary(semfit)
medSummary(semfit,boot.ci.type="all")
medSummary(semfit,boot.ci.type="all",effects="indirect")
devtools::document()
library(processR)
devtools::check()
library(lavaan)
labels=list(X="cond",M="pmi",Y="reaction")
model=tripleEquation(labels=labels)
semfit=sem(model=model,data=pmi, se="boot", bootstrap=100)
medSummary(semfit,boot.ci.type="all")
medSummary(semfit)
devtools::document()
devtools::document()
devtools::check()
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
require(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
result
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
result=mediationBK(labels=labels,data=pmi,silent=FALSE)
result
library(processR)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
