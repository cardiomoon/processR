}
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
require(processR)
#' @param eq Optional string contains equation
#' @export
#' @examples
#' labels=list(X="frame",M="justify",Y="donate",W="skeptic")
#' moderator=list(name="skeptic",site=list(c("a","c")))
#' covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
#' labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
#' labels2table(labels,serial=TRUE)
#' labels2table(labels,covar=covar)
#' labels2table(labels,moderator=moderator)
labels2table=function(labels=labels,moderator=list(),covar=list(),serial=FALSE,eq=NULL){
# moderator=list();serial=TRUE
if(is.null(eq)) {
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
}
df=equations2var(eq,labels=labels)
df
}
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
moderator=list()
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
moderator=list();serial=FALSE;eq=NULL
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
df=equations2var(eq,labels=labels)
df
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
moderator=list();serial=FALSE;eq=NULL
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
moderator=list();serial=FALSE;eq=NULL
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
library(processR)
devtools::document()
library(processR)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
moderator=list();serial=TRUE
moderator=list();serial=FALSE;eq=NULL
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
moderator=list();serial=FALSE;eq=NULL
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=FALSE)
multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=FALSE)
multipleMediation(labels=labels,moderator=moderator,covar=covar,mserial=FALSE)
multipleMediation(labels=labels,moderator=moderator,covar=covar,serial=FALSE)
multipleMediation(labels=labels,covar=covar,serial=FALSE)
labels=list(X=c("cyl","wt"),M="am",Y="mpg")
covar=list(name=c("carb","disp"),label=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
labels=list(X=c("cyl","wt"),M="am",Y="mpg")
covar=list(name=c("carb","disp"),label=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
cat(multipleMediation(labels=labels,covar=covar,data=mtcars))
labels=list(X=c("cyl","wt"),M="am",Y="mpg")
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
labels=list(X="cyl",M="am",Y="mpg")
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
cat(multipleMediation(labels=labels,covar=covar,data=mtcars))
labels=list(X="cyl",M="am",Y="mpg")
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
cat(multipleMediation(labels=labels,covar=covar,data=mtcars))
X=NULL;M=NULL;Y=NULL;labels=list();moderator=list()
covar=NULL;mode=1;range=TRUE;rangemode=1;serial=FALSE;contrast=1
bmatrix=NULL
# labels=list(X="X",M=c("M1","M2"),Y="Y",W="W")
# moderator=list(name=c("W"),matrix=list(c(1,1,0,1,0,0)))
# bmatrix=c(1,1,1,1,1,1)
labels=list(X="baby",M=c("wine","tent","sand"),Y="tile",W="milk",Z="hair")
labels=list(X="X",M=c("M1","M2","M3"),Y="Y",W="W")
# # moderator=list(name=c("milk","hair"),matrix=list(c(1,0,0,0,1,0,1,0,0,0),c(1,1,0,0,0,0,0,0,0,0)))
# moderator=list(name=c("milk"),matrix=list(c(1,0,0,0,1,0,1,0,0,0)))
moderator=list()
bmatrix=c(1,1,0,0,1,1,1,1,0,1)
labels=list(X="cyl",M="am",Y="mpg")
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
labels=list(X="cyl",M="am",Y="mpg");moderator=NULL
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
if(is.null(X)) X=labels$X
if(is.null(M)) if(!is.null(labels$M)) M=labels$M
if(is.null(Y)) Y=labels$Y
res=c()
xcount=length(X)
if(!is.null(M)) {
mcount=length(M)
} else{
mcount=0
}
ycount=length(Y)
vars=c(X,M,Y,moderator$name,covar$name)
vars
#         groupvars=c(groupvars,vars[i])
#     } else if((count>2)&(count<=maxylev)){
#         groupvars=c(groupvars,vars[i])
#     }
# }
# for(i in seq_along(groupvars)){
#     grouplabels[[groupvars[i]]]=LETTERS[3+i]
#     attr(grouplabels[[groupvars[i]]],"length")=length(unique(data[[groupvars[i]]]))-1
# }
# str(grouplabels)
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
# moderator=list(name=c("vs"),site=list(c("b1","b2")))
# name="vs"
# prefix="b"
# moderator
# name=MY
# name
# prefix="b"
mod2pos=function(moderator,name,prefix){
pos=list()
pos1=c()
# i=1
for(i in seq_along(name)) {
pos1=grep(name[i],moderator$name)
pos1
if(length(pos1)==1){
temp=moderator$site[[pos1]]
temp1=temp[str_detect(temp,prefix)]
temp1
res=str_extract(temp1,"[0-9]")
res
if(length(res)==1){
if(is.na(res)){
pos[[i]]=NULL
} else {
pos[[i]]=as.numeric(res)
}
} else{
pos[[i]]=as.numeric(res)
}
}
}
pos
}
pos=mod2pos(moderator,name=XM,prefix="a")
pos
if(is.null(bmatrix)){
eq1=makeCatEquation2(X=X,Y=M,W=XM,prefix="a",mode=mode,pos=pos,serial=serial)
} else{
eq1=makeCatEquation3(X=X,Y=M,W=XM,prefix="a",mode=mode,pos=pos,bmatrix=bmatrix,
moderator=moderator,depy=FALSE)
}
# maxylev
eq1
eq1=addCovarEquation(eq1,covar,prefix=NULL)
eq1
#
covar
# maxylev
eq1
#
covar
addCovarEquation
devtools::document()
library(processR)
labels=list(X="cyl",M="am",Y="mpg")
covar=list(name=c("carb","disp"),site=list(c("M","Y"),"Y","Y"))
cat(multipleMediation(labels=labels,covar=covar,data=mtcars))
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
moderator=list();serial=FALSE;eq=NULL
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
df=equations2var(eq,labels=labels)
df
labels
eq
equations=unlist(strsplit(eq,"\n"))
equations
eq=equations[1]
labels
temp=unlist(strsplit(eq,"~"))
y=temp[1]
x=unlist(strsplit(temp[2],"\\+"))
y=rep(y,length(x))
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
df$name=makeCoefLabel(name=df$x,dep=y[1],labels=labels,constant = "iy",prefix="b")
df$name=str_replace(df$name,"'","")
require(stringr)
df$name=makeCoefLabel(name=df$x,dep=y[1],labels=labels,constant = "iy",prefix="b")
df$name=str_replace(df$name,"'","")
df
temp=unlist(strsplit(eq,"~"))
y=temp[1]
x=unlist(strsplit(temp[2],"\\+"))
y=rep(y,length(x))
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
labels
changeLabelName
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=multipleMediation(labels=labels,moderator=moderator,mode=1)
equations2var(eq)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq2var("donate~justify+frame+skeptic+frame:skeptic")
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq2var("donate~justify+frame+skeptic+frame:skeptic")
labels=list(X="dysfunc",M="negtone",W="negexp",Y="perform")
moderator=list(name="negexp",site=list(c("a","b","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=teams,mode=1)
fit=eq2fit(eq,data=teams)
modelsSummary(fit,labels=labels)
labels=list(X="cond",M="pmi",Y="reaction")
modelsSummary(labels=labels,data=pmi)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
df$Variables=changeLabelName(df$y,labels=labels,add=TRUE)
df$Predictors=changeLabelName(df$x,labels=labels,add=TRUE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
labels
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq2var("donate~justify+frame+skeptic+frame:skeptic")
eq="donate~justify+frame+skeptic+frame:skeptic"
temp=unlist(strsplit(eq,"~"))
y=temp[1]
x=unlist(strsplit(temp[2],"\\+"))
y=rep(y,length(x))
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
df$name=makeCoefLabel(name=df$x,dep=y[1],labels=labels,constant = "iy",prefix="b")
df$name=str_replace(df$name,"'","")
df
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq2var("donate~justify+frame+skeptic+frame:skeptic")
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq="donate~justify+frame+skeptic+frame:skeptic"
eq2var(eq=eq)
eq2var(eq)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq="donate~justify+frame+skeptic+frame:skeptic"
eq2var(eq,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=multipleMediation(labels=labels,moderator=moderator,mode=1)
equations2var(eq)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=multipleMediation(labels=labels,moderator=moderator,mode=1)
equations2var(eq,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,serial=TRUE)
labels2table(labels,covar=covar)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
moderator=list();serial=FALSE;eq=NULL
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
labels
df=equations2var(eq,labels=labels)
df
eq
labels
df=equations2var(eq,labels=labels)
df
eq
labels
equations=unlist(strsplit(eq,"\n"))
purrr::map_df(equations,eq2var,labels=labels)
equations=unlist(strsplit(eq,"\n"))
eq=equations[1]
eq
labels
temp=unlist(strsplit(eq,"~"))
y=temp[1]
x=unlist(strsplit(temp[2],"\\+"))
y=rep(y,length(x))
df=data.frame(y=y,x=x,stringsAsFactors = FALSE)
df
df$Variables=changeLabelName(df$y,labels=labels)
df$Predictors=changeLabelName(df$x,labels=labels)
df
labels
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
eq="donate~justify+frame+skeptic+frame:skeptic"
eq2var(eq,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
labels
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
eq=multipleMediation(labels=labels,covar=covar,mode=1)
eq
equations2var(eq,labels=labels)
equations=unlist(strsplit(eq,"\n"))
equations
eq=equations[1]
eq
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
library(processR)
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
eq=multipleMediation(labels=labels,covar=covar,mode=1)
eq
equations2var(eq,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
devtools::document()
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,covar=covar)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,covar=covar)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels=labels,moderator=list(),covar=covar,serial=FALSE,eq=NULL)
labels
covar
eq=multipleMediation(labels=labels,moderator=moderator,covar=covar,mode=1,serial=serial)
eq
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels=labels,moderator=list(),covar=covar,serial=FALSE,eq=NULL)
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL)
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL,mode=1)
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
covar=list(name=c("C1","C2","C3"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels,covar=covar)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL)
drawModel(labels=labels,covar=covar)
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
labels2table(labels=labels,covar=covar,serial=FALSE,eq=NULL)
drawModel(labels=labels,covar=covar)
drawModel(labels=labels,covar=covar,label.pos=2)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
adjustypos
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
library(processR)
drawModel(labels=labels,covar=covar)
library(processR)
drawModel(labels=labels,covar=covar)
drawModel(labels=labels,covar=covar)
library(processR)
devtools::document()
devtools::check()
devtools::document()
library(processR)
labels=list(Y="withdraw",M="affect",X="estress")
covar=list(name=c("ese","sex","age"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
modelsSummary(labels=labels,covar=covar,data=estress)
library(processR)
labels=list(Y="withdraw",M="affect",X="estress")
covar=list(name=c("ese","sex","age"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
modelsSummary(labels=labels,covar=covar,data=estress)
library(processR)
devtools::document()
devtools::check()
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
covar=list(name=c("ese","sex","tenure"),site=list(c("M","Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,covar=covar)
drawModel(labels=labels,covar=covar,data=estress,whatLabel="est")
library(processR)
library(processR)
library(processR)
library(processR)
library(processR)
library(processR)
library(processR)
file="~/test1.R"
code<-c()
count=0
text=readr::read_file(file)
text
text=unlist(strsplit(text,"\n"))
text
keyword=c("Diagram","Model","Plot","plot","Table","summary")
pattern=paste0(keyword,collapse="|")
pattern
keyword=c("Diagram","Model","Plot","plot","Table","summary")
file
filename
filename="report.pptx"
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
for( i in seq_along(text)){
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,text[i],sep="\n")
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
}
require(stringr)
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
for( i in seq_along(text)){
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,text[i],sep="\n")
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
}
code
df=data.frame(code,stringsAsFactors = FALSE)
makePPTx(df,filename=filename)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(processR)
