# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
temp=changeLabelName(name,labels,add=FALSE)
temp
temp
for(i in seq_along(temp)){
cat("i=",i,"\n")
cat("temp[i]=",temp[i],"\n")
if(temp[i]=="(Intercept)") {
if(dep=="M1") {
result=c(result,"iM1")
} else if(dep=="M2"){
result=c(result,"iM2")
} else {
result=c(result,constant)
}
} else if(temp[i]=="M") {
result=c(result,paste0("b",l))
l=l+1
} else if(substr(temp[i],1,1)=="C"){
if(dep=="Y") {
result=c(result,paste0("g",k))
} else{
result=c(result,paste0("f",k))
}
k<-k+1
} else if(temp[i]=="X"){
if(dep=="Y") {
result=c(result,paste0(ifelse(any(str_detect(temp,"^M")),"c'","c"),j))
} else if(str_detect(dep,"^M")){
result=c(result,paste0("a",j))
}  else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i]=="W"){
if(("X:W" %in% temp)|("W:X" %in% temp)|("D1:W" %in% temp)|("W:D1" %in% temp)){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else{
# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
temp=changeLabelName(name,labels,add=FALSE)
temp
for(i in seq_along(temp)){
cat("i=",i,"\n")
cat("temp[i]=",temp[i],"\n")
if(temp[i]=="(Intercept)") {
if(dep=="M1") {
result=c(result,"iM1")
} else if(dep=="M2"){
result=c(result,"iM2")
} else {
result=c(result,constant)
}
} else if(temp[i]=="M") {
result=c(result,paste0("b",l))
l=l+1
} else if(substr(temp[i],1,1)=="C"){
if(dep=="Y") {
result=c(result,paste0("g",k))
} else{
result=c(result,paste0("f",k))
}
k<-k+1
} else if(temp[i]=="X"){
if(dep=="Y") {
result=c(result,paste0(ifelse(any(str_detect(temp,"^M")),"c'","c"),j))
} else if(str_detect(dep,"^M")){
result=c(result,paste0("a",j))
}  else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i]=="W"){
if(("X:W" %in% temp)|("W:X" %in% temp)|("D1:W" %in% temp)|("W:D1" %in% temp)){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else{
# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
for(i in seq_along(temp)){
cat("i=",i,"\n")
cat("temp=",temp,"\n")
cat("temp[i]=",temp[i],"\n")
if(temp[i]=="(Intercept)") {
if(dep=="M1") {
result=c(result,"iM1")
} else if(dep=="M2"){
result=c(result,"iM2")
} else {
result=c(result,constant)
}
} else if(temp[i]=="M") {
result=c(result,paste0("b",l))
l=l+1
} else if(substr(temp[i],1,1)=="C"){
if(dep=="Y") {
result=c(result,paste0("g",k))
} else{
result=c(result,paste0("f",k))
}
k<-k+1
} else if(temp[i]=="X"){
if(dep=="Y") {
result=c(result,paste0(ifelse(any(str_detect(temp,"^M")),"c'","c"),j))
} else if(str_detect(dep,"^M")){
result=c(result,paste0("a",j))
}  else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i]=="W"){
if(("X:W" %in% temp)|("W:X" %in% temp)|("D1:W" %in% temp)|("W:D1" %in% temp)){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else{
# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
temp=changeLabelName(name,labels,add=FALSE)
temp
for(i in seq_along(temp)){
cat("i=",i,"\n")
cat("temp=",temp,"\n")
cat("temp[i]=",temp[i],"\n")
if(temp[i]=="(Intercept)") {
if(dep=="M1") {
result=c(result,"iM1")
} else if(dep=="M2"){
result=c(result,"iM2")
} else {
result=c(result,constant)
}
} else if(temp[i]=="M") {
result=c(result,paste0("b",l))
l=l+1
} else if(substr(temp[i],1,1)=="C"){
if(dep=="Y") {
result=c(result,paste0("g",k))
} else{
result=c(result,paste0("f",k))
}
k<-k+1
} else if(temp[i]=="X"){
if(dep=="Y") {
result=c(result,paste0(ifelse(any(str_detect(temp,"^M")),"c'","c"),j))
} else if(str_detect(dep,"^M")){
result=c(result,paste0("a",j))
}  else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i]=="W"){
if(("X:W" %in% temp)|("W:X" %in% temp)|("D1:W" %in% temp)|("W:D1" %in% temp)){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else{
# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
temp=changeLabelName(name,labels,add=FALSE)
temp
for(i in seq_along(temp)){
cat("i=",i,"\n")
cat("temp=",temp,"\n")
cat("temp[i]=",temp[i],"\n")
if(temp[i]=="(Intercept)") {
if(dep=="M1") {
result=c(result,"iM1")
} else if(dep=="M2"){
result=c(result,"iM2")
} else {
result=c(result,constant)
}
} else if(temp[i]=="M") {
result=c(result,paste0("b",l))
l=l+1
} else if(substr(temp[i],1,1)=="C"){
if(dep=="Y") {
result=c(result,paste0("g",k))
} else{
result=c(result,paste0("f",k))
}
k<-k+1
} else if(temp[i]=="X"){
if(dep=="Y") {
result=c(result,paste0(ifelse(any(str_detect(temp,"^M")),"c'","c"),j))
} else if(str_detect(dep,"^M")){
result=c(result,paste0("a",j))
}  else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i]=="W"){
if(("X:W" %in% temp)|("W:X" %in% temp)|("D1:W" %in% temp)|("W:D1" %in% temp)){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else{
# result=c(result,paste0("b",l))
# l<-l+1
result=c(result,paste0(prefix,j))
j<-j+1
}
} else if(temp[i] %in% c("X:W","W:X")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(str_detect(temp[i],"^D[0-9]")){
if(dep=="Y") {
result=c(result,paste0(ifelse("M" %in% temp,"c'","c"),j))
} else{
result=c(result,paste0(prefix,j))
}
j<-j+1
} else if(temp[i] %in% c("M1","M2")){
if(dep %in% c("M2","M3")) {
temp1=paste0("d",substr(dep,2,2),substr(temp[i],2,2))
result=c(result,temp1)
} else{
result=c(result,paste0("b",l))
l=l+1
}
} else {  #if(temp[i]=="M:W")
result=c(result,paste0("b",l))
l=l+1
}
}
library(processR)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=1)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=3)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=1)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=1)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
library(processR)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
library(processR)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
devtools::document()
devtools::check()
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(0,1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.1,1.1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.2,1.2))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.2,1.2))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.2,1.2),ylim=c(0.2,1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.2,1.2),ylim=c(0.3,1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=2,xlim=c(-0.2,1.2),ylim=c(0.4,1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4,ylim=c(0.4,1))
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4,ylim=c(0.4,1))
devtools::document()
devtools::check()
devtools::check()
library(processR)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4,ylim=c(0.4,1))
labels=list(X="X",M=c("M1","M2","Mk-1","Mk"),Y="Y")
drawModel(labels=labels,parallel=TRUE,kmediator=TRUE,nodemode=2,label.pos=list(c=0.4),radx=0.08)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
semfit=sem(model=model,data=pmi)
drawModel(semfit,labels=labels,whatLabel="est",parallel=TRUE)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
library(processR)
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
semfit=sem(model=model,data=pmi)
drawModel(semfit,labels=labels,whatLabel="est",parallel=TRUE)
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,"protest",mode=3)
model=catMediation(X="protest",M="respappr",Y="liking",moderator=moderator,data=protest,maxylev=6)
semfit=sem(model,data=data1)
nodelabels=list(D1="Ind.Protest",D2="Col.Protest",W="sexism",M="respappr",Y="liking")
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3))
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","wt","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels,maxypos=0.5)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
nodelabels=c(X="Intervention\n(vs.control)",
M=c("Restrained\nEating","Emotional\nEating","Perceived\nBarriers to\nExercise"),Y="Weight Loss")
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.02)
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.03)
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.04)
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.04,ylim=c(0.4,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.04,ylim=c(0,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.04,ylim=c(-0.2,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),yinterval=0.04,ylim=c(-0.3,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),
yinterval=0.04,ylim=c(-0.3,1.2))
labels=list(X="X",M=c("M1","M2","Mk-1","Mk"),Y="Y")
drawModel(labels=labels,parallel=TRUE,kmediator=TRUE,nodemode=2,label.pos=list(c=0.4),radx=0.08)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
semfit=sem(model=model,data=pmi)
drawModel(semfit,labels=labels,whatLabel="est",parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
drawModel(labels=labels,maxypos=0.5,serial=TRUE,nodemode=4,ylim=c(0.4,1))
devtools::document()
devtools::check()
