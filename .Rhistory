}
}
}
eq
labels
# vars=list();eq=NULL;covar=NULL;serial=TRUE;bmatrix=NULL
# labels=list(X="X",M="M",Y="Y")
# moderator=list(name="X",site=list(c("b")))
# labels=list(X="baby",M=c("wine","tent","sand"),Y="tile")
# bmatrix=c(1,1,0,1,0,0,1,1,1,1)
# moderator=list(name=c("milk","hair"),labels=c("W","Z"),
#                matrix=list(c(1,0,0,0,0,0,0,0,0,0),c(0,0,0,0,0,0,0,1,0,0)))
labels=list(X="baby",M="wine",Y="tile")
vars=list()
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
serial=FALSE
bmatrix=NULL
eq=NULL
if(is.null(eq)) {
eq=multipleMediation(labels=labels,vars=vars,moderator=moderator,covar=covar,mode=1,
serial=serial,bmatrix=bmatrix)
}
eq
eq=checkEquationVars(eq)
labels
if(length(vars)>0){
if(is.null(vars$label)){
if(length(vars$name)==1){
labels=addLabels(labels,"W",vars$name[[1]][1])
labels=addLabels(labels,"Z",vars$name[[1]][2])
} else{
for(i in seq_along(vars$name)){
labels=addLabels(labels,paste0("W",i),vars$name[[i]][1])
labels=addLabels(labels,paste0("Z",i),vars$name[[i]][2])
}
}
} else{
if(length(vars$name)==1){
labels=addLabels(labels,vars$label[[1]][1],vars$name[[1]][1])
labels=addLabels(labels,vars$label[[1]][2],vars$name[[1]][2])
} else{
for(i in seq_along(vars$name)){
labels=addLabels(labels,vars$label[[i]][1],vars$name[[i]][1])
labels=addLabels(labels,vars$label[[i]][2],vars$name[[i]][2])
}
}
}
}
if(length(moderator)>0){
# prefix=ifelse(length(vars)==0,"W","V")
# if(length(moderator$name)==1){
#   labels=addLabels(labels,prefix,moderator$name)
# } else{
# for(i in seq_along(moderator$name)){
#   labels=addLabels(labels,paste0(prefix,i),moderator$name[i])
# }
# }
if(is.null(moderator$label)){
prefix=ifelse(length(vars)==0,"W","V")
if(length(moderator$name)==1){
labels=addLabels(labels,prefix,moderator$name)
} else{
for(i in 1:length(moderator$name)){
labels=addLabels(labels,paste0(prefix,i),moderator$name[i])
}
}
} else{
for(i in 1:length(moderator$label)){
labels=addLabels(labels,moderator$label[i],moderator$name[i])
}
}
}
if(!is.null(covar)){
for(i in seq_along(covar$name)){
labels=addLabels(labels,paste0("C",i),covar$name[i])
}
}
eq
labels
df=equations2var(eq,labels=labels)
df
library(processR)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,moderator=moderator,covar=covar)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
labels2table(labels,moderator=moderator,covar=covar,serial=FALSE)
library(processR)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
labels2table(labels,moderator=moderator,covar=covar,serial=FALSE)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,moderator=moderator,covar=covar)
library(processR)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,moderator=moderator,covar=covar)
devtools::document()
library(processR)
devtools::document()
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,moderator=moderator,covar=covar)
devtools::document()
devtools::check()
library(processR)
devtools::document()
library(processR)
devtools::check()
library(processR)
system("grep -r 'r2pptx' *")
library(processR)
require(rrtable)
sampleData2
str(sampleData2)
editData::editData(sampleData2)
sampleData2
library(processR)
r2pptx("./inst/test.R")
r2pptx("./inst/test/test.R")
r2pptx("./inst/test/test.R")
r2pptx("./inst/test/test.R")
file="./inst/test/test.R"
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
text
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
keyword=c("Concept","Diagram","Model","Plot","plot","Table","summary")
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
text
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
i=1
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,text[i],sep="\n")
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
temp
i=2
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,text[i],sep="\n")
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
temp
i=3
temp
temp
temp=paste0(temp,text[i],sep="\n")
temp
temp=""
i=1
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
i=2
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
temp
i=3
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
temp
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
i=4
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
temp
library(processR)
r2pptx("./inst/test/test.R")
file="./inst/test/test.R"
keyword=c("Concept","Diagram","Model","Plot","plot","Table","summary")
code<-c()
count=0
library(processR)
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
text
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
for( i in seq_along(text)){
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
if(str_detect(text[i],"^#")) next
if(str_detect(text[i],"%>%$")) next
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
}
code
r2pptx("./inst/test/test.R")
r2pptx("./inst/test/test.R")
r2pptx("./inst/test/test.R",rmdRemove = FALSE)
file="./inst/test/test.R"
keyword=c("Concept","Diagram","Model","Plot","plot","Table","summary")
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
text
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
for( i in seq_along(text)){
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
if(str_detect(text[i],"^#")) next
if(str_detect(text[i],"%>%$")) next
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
}
code
type=c()
for(i in seq_along(code)){
if(str_detect(code[i],"Table")) {
type=c(type,"table")
} else if(str_detect(code[i],"Concept|Diagram|Model")){
type=c(type,"plot")
} else{
type=c(type,"ggplot")
}
}
df=data.frame(type=type,code=code,stringsAsFactors = FALSE)
df$title=""
preprocessing="require(processR)
require(predict3d)
require(lavaan)
require(flextable)
require(ggplot2)
require(tidyverse)"
data2pptx(df,preprocesing=preprocessing,filename=filename)
data2pptx(df,preprocessing=preprocessing,filename=filename)
data2pptx(data=df,preprocessing=preprocessing,filename=filename)
data2pptx(sampleData2)
require(moonBook)
requier(ggplot2)
data2pptx(sampleData2)
require(ggplot2)
str(sampleData2)
str(df)
title=rep("",length(type))
df=data.frame(type=type,title=title,code=code,stringsAsFactors = FALSE)
str(df)
preprocessing="require(processR)
require(predict3d)
require(lavaan)
require(flextable)
require(ggplot2)
require(tidyverse)"
data2pptx(data=df,preprocessing=preprocessing,filename=filename)
file="./inst/test/test.R"
keyword=c("Concept","Diagram","Model","Plot","plot","Table","summary")
code<-c()
count=0
text=readr::read_file(file)
text=unlist(strsplit(text,"\n"))
text
tempcode=""
pattern=paste0(keyword,collapse="|")
pattern
temp=""
for( i in seq_along(text)){
temp
if(temp=="") {
temp=text[i]
} else{
temp=paste0(temp,"\n",text[i])
}
if(str_detect(text[i],"^#")) next
if(str_detect(text[i],"%>%$")) next
if(str_detect(temp,pattern)) {
code=c(code,temp)
temp=""
}
}
code
type=c()
for(i in seq_along(code)){
if(str_detect(code[i],"Table")) {
type=c(type,"table")
} else if(str_detect(code[i],"Concept|Diagram|Model")){
type=c(type,"plot")
} else{
type=c(type,"ggplot")
}
}
title=rep("",length(type))
df=data.frame(type=type,title=title,code=code,stringsAsFactors = FALSE)
str(df)
preprocessing="require(processR)
require(predict3d)
require(lavaan)
require(flextable)
require(ggplot2)
require(tidyverse)"
data2pptx(data=df,preprocessing=preprocessing,filename=filename)
data2pptx(data=df,preprocessing=preprocessing)
data2docx(data=df,preprocessing=preprocessing)
data2HTML(data=df,preprocessing=preprocessing)
data2pdf(data=df,preprocessing=preprocessing,path=".",filename="Report")
data2HTML(data=df,preprocessing=preprocessing,path=".",filename="Report")
data2HTML(data=df,preprocessing=preprocessing,filename="Report")
data2HTML(data=df,preprocessing=preprocessing,path="tmp",filename="Report")
data2pdf(data=df,preprocessing=preprocessing,path="tmp",filename="Report")
data2pptx(data=df,preprocessing=preprocessing,path="tmp",filename="Report")
library(processR)
devtools::document()
devtools::document()
devtools::check()
requier(processR)
require(processR)
labels=list(X="X",M="M",Y="Y")
moderator=list(name=c("W1","W2"),site=list(c("a","c"),c("b")))
drawConcept(labels=labels,moderator=moderator)
library(processR)
require(processR)
labels=list(X="X",M="M",Y="Y")
moderator=list(name=c("W1","W2"),site=list(c("a","c"),c("b")))
drawConcept(labels=labels,moderator=moderator)
drawModel(labels=labels,moderator=moderator)
labels=list(X="baby",M="wine",Y="tile")
moderator=list(name=c("milk"),site=list("a"))
covar=list(name=c("milk","tent","sand"),site=list(c("Y"),c("M","Y"),c("M","Y")))
drawModel(labels=labels,moderator=moderator,covar=covar)
equation='M1~X
M2~X
M3~X
M4~X+M1+M2+M3
Y~X+M1+M2+M3+M4'
node.pos=list(X=c(0,0.5),M1=c(0.35,0.9),M2=c(0.35,0.5),M3=c(0.35,0.1),M4=c(0.7,0.5),Y=c(1,0.5))
curved.arrow=list(a4=0.15,b2=0.15)
segment.arrow=list(c=0.5)
drawModel(equation=equation,nodemode=2,node.pos=node.pos,radx=0.08,curved.arrow=curved.arrow,
segment.arrow=segment.arrow)
library(processR)
require(processR)
pmacroModel(58.2)
statisticalDiagram(58.2)
pmacroModel(58.2)
labels=list(X="X",M=c("M1","M2"),Y="Y")
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a","b")))
drawConcept(labels=labels,moderator=moderator)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a1","b1")))
drawConcept(labels=labels,moderator=moderator)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a1","b1")))
statisticalDiagram(58.2)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a1","b1")))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a11","b11")))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a11","b11")))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
moderator=list(name="W",site=list(c("a","b")))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
matrix=c(0,0,1,0,0,0)
matrixPlot(matrix)
labels=list(X="X",M=c("M1","M2"),Y="Y")
matrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
moderator=list(name="W",matrix=wmatrix)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,1,1,1,1,1)
matrixPlot(matrix)
moderator=list(name="W",matrix=wmatrix)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE,serial=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,1,1,1,1,1)
matrixPlot(matrix)
moderator=list(name="W",matrix=wmatrix)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE,serial=TRUE)
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,1,1,1,1,1)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
wmatrix=c(0,1,1,1,1,1)
matrixPlot(matrix)
wmatrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
drawModel(labels=labels,moderator=moderator,parallel=TRUE)
statisticalDiagram(58.2)
drawModel(labels=labels,moderator=moderator,parallel=TRUE)
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9)))
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
statisticalDiagram(58.2)
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
matrixPlot(matrix)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE)
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0.5,1.2)))
pmacroModel(58.2)
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0.5,1.2)))
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
labels=list(X="X",M=c("M1","M2"),Y="Y")
wmatrix=c(1,0,0,0,1,0)
moderator=list(name="W",matrix=list(wmatrix))
drawConcept(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0.5,1.2)))
drawModel(labels=labels,moderator=moderator,parallel=TRUE,
node.pos=list(W=c(0,0.7),`X:W`=c(0,0.9),`M1:W`=c(1,0.9)))
require(processR)
pmacroModel(58.2)
statisticalDiagram(58.2)
