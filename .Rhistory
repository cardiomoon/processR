labels=list(X="cyl",M=c("am","vs"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
cat(model)
str_detect(model,"NA")
semfit=sem(model=model,data=mtcars)
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
labels=list(X=c("cyl","am"),M="hp",Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
modmedSummaryTable(semfit)
estimatesTable2(semfit)
labels=list(X=c("cyl","am"),M="hp",Y="mpg")
nodelabels=NULL;whatLabel="name"
xmargin=0.01;radx=NULL;mode=2
ymargin=0.02;xlim=c(-0.2,1.2);ylim=xlim
rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
xinterval=NULL;yinterval=NULL;xspace=NULL;label.pos=list()
digits=3
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
# nodelabels=NULL;whatLabel="name"
xmargin=0.01;radx=NULL;mode=2;nodemode=1
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
estimatesTable2(semfit)
modmedSummaryTable(semfit)
labels=list(X="cyl",M=c("am","hp"),Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
estimatesTable2(semfit)
modmedSummaryTable(semfit)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
nodelabels=NULL;whatLabel="name"
xmargin=0.01;radx=NULL;mode=2;nodemode=1
ymargin=0.02;xlim=c(-0.2,1.2);ylim=xlim
rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
xinterval=NULL;yinterval=NULL;xspace=NULL;label.pos=list()
digits=3
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
estimatesTable2(semfit)
modmedSummaryTable(semfit)
nodelabels=NULL;whatLabel="name"
xmargin=0.01;radx=NULL;mode=2;nodemode=1
ymargin=0.02;xlim=c(-0.2,1.2);ylim=xlim
rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
xinterval=NULL;yinterval=NULL;xspace=NULL;label.pos=list()
digits=3
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
if(is.null(nodelabels)) {
nodelabels=labels
}
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
if(is.null(nodelabels)) {
nodelabels=labels
}
name=unique(c(df1$start,df1$end))
name
count=length(setdiff(name,c("M","Y")))
count
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes$no=4
nodes$no[nodes$name=="Y"]=1
name=unique(c(df1$start,df1$end))
name
str_detect(nodes$name,"M[1-9]?")
str_view(nodes$name,"^M[1-9]?$")
str_view(nodes$name,"^M[0-9]?$")
str_detect(nodes$name,"^X[0-9]?$")
str_view(nodes$name,"^X[0-9]?$")
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes$no=4
nodes$no[nodes$name=="Y"]=1
nodes$no[str_detect(nodes$name,"^M[0-9]?$")]=2
nodes$no[str_detect(nodes$name,"^X[0-9]?$")]=3
count=
nodes$no[nodes$no==4]
count=
nodes$no[nodes$no==4]
nodes$no[nodes$no==4]
count=length(nodes$no[nodes$no==4])
nodes$no[(nodes$no==4)&(str_detect(nodes$name,":"))]=6
nodes$no[(nodes$no==6)&(str_detect(nodes$name,"^X"))]=5
temp="dplyr::arrange(nodes,no,name)"
nodes<-eval(parse(text=temp))
nodes
icount=sum(str_detect(nodes$name,":"))
nodes$xpos=0
nodes$xpos[nodes$name=="Y"]=ypos[1]
mcount=nrow(nodes[nodes$no==2,])
mcount
mcount
seq(from=0,to=1,length.out=2)
seq(from=0,to=1,length.out=3)
seq(from=0,to=1,length.out=4)
seq.int(from=0,to=1,length.out=4)
seq.int(from=0,to=1,length.out=mcount+2)
seq(from=0,to=1,length.out=mcount+2)
mcount=nrow(nodes[nodes$no==2,])
mcount
mympos=seq(from=0,to=1,length.out=mcount+2)
mympos
mympos[2:(length(mympos)-1)]
mcount=nrow(nodes[nodes$no==2,])
mympos=seq(from=0,to=1,length.out=mcount+2)
nodes$xpos[nodes$n0==2]=mympos[2:(length(mympos)-1)]
if(icount>0) {
nodes$xpos[str_detect(nodes$name,":")]=seq(from=0.05,by=0.1,length.out=icount)
}
nodes$ypos=1
nodes$ypos[nodes$name=="Y"]=ypos[2]
nodes$ypos[nodes$name=="M"]=mpos[2]
nodes
select1=which(nodes$no>2)
select1=which(nodes$no<2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
mcount=nrow(nodes[nodes$no==2,])
mympos=seq(from=0,to=1,length.out=mcount+2)
nodes$xpos[nodes$no==2]=mympos[2:(length(mympos)-1)]
if(icount>0) {
nodes$xpos[str_detect(nodes$name,":")]=seq(from=0.05,by=0.1,length.out=icount)
}
nodes$ypos=1
nodes$ypos[nodes$name=="Y"]=ypos[2]
nodes$ypos[nodes$name=="M"]=mpos[2]
select1=which(nodes$no<2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
if(is.null(nodelabels)) {
nodelabels=labels
}
name=unique(c(df1$start,df1$end))
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes$no=4
nodes$no[nodes$name=="Y"]=1
nodes$no[str_detect(nodes$name,"^M[0-9]?$")]=2
nodes$no[str_detect(nodes$name,"^X[0-9]?$")]=3
count=length(nodes$no[nodes$no==4])
nodes$no[(nodes$no==4)&(str_detect(nodes$name,":"))]=6
nodes$no[(nodes$no==6)&(str_detect(nodes$name,"^X"))]=5
temp="dplyr::arrange(nodes,no,name)"
nodes<-eval(parse(text=temp))
nodes
icount=sum(str_detect(nodes$name,":"))
nodes$xpos=0
nodes$xpos[nodes$name=="Y"]=ypos[1]
mcount=nrow(nodes[nodes$no==2,])
mympos=seq(from=0,to=1,length.out=mcount+2)
nodes$xpos[nodes$no==2]=mympos[2:(length(mympos)-1)]
if(icount>0) {
nodes$xpos[str_detect(nodes$name,":")]=seq(from=0.05,by=0.1,length.out=icount)
}
nodes$ypos=1
nodes$ypos[nodes$no==1]=ypos[2]
nodes$ypos[nodes$n0==2]=mpos[2]
select1=which(nodes$no<2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
nodes$ypos[nodes$no==2]=mpos[2]
select1=which(nodes$no<2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
nodes$ypos[nodes$no==1]=ypos[2]
nodes$ypos[nodes$no==2]=mpos[2]
select1=which(nodes$no<2)
select1=which(nodes$no<=2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
# nodes$xpos1=adjustxpos(nodes$xpos,xmargin=xmargin,radx=radx)
nodes$ypos=adjustypos(nodes$ypos,ymargin=ymargin,rady=rady,
maxypos=maxypos,minypos=minypos)
arrows=df1
arrows$labelpos=0.5
arrows$arrpos=0.8
arrows$no=1
arrows$lty=1
arrows$label1=arrows$name
if(whatLabel=="name") {
arrows$label=arrows$name
addprime=TRUE
} else{
arrows$label=round(arrows$est,digits)
arrows$lty=ifelse(arrows$p<0.05,1,3)
addprime=FALSE
}
print(nodes)
print(arrows)
# print(nodes)
#   print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
library(diagram)
# print(nodes)
#   print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
mid=c(xpos,nodes$ypos[i])
label=nodes$name[i]
if(nodemode==2) {
if(!is.null(labels[[label]])) label=labels[[label]]
} else if(nodemode==3){
if(!is.null(labels[[label]])) label=paste0(labels[[label]],"(",label,")")
}
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
if(nodemode==1){
if(!is.null(nodelabels[[label]])) {
if(is.null(yinterval)) yinterval=2*rady+ymargin
if(is.null(xinterval)) xinterval=2*radx
if(mid[2]<=rady+ymargin){
newmid=mid-c(0,yinterval)
} else if(mid[2]>=0.9){
newmid=mid+c(0,yinterval)
} else if(mid[1]>0.85){
newmid=mid+c(xinterval,0)
} else{
newmid=mid-c(xinterval,0)
}
textplain(mid=newmid,lab=nodelabels[[label]])
}
}
}
library(processR)
require(lavaan)
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
nodelabels=NULL;whatLabel="name"
xmargin=0.01;radx=NULL;mode=2;nodemode=1
ymargin=0.02;xlim=c(-0.2,1.2);ylim=xlim
rady=0.04;maxypos=0.6;minypos=0;ypos=c(1,0.5);mpos=c(0.5,0.9)
xinterval=NULL;yinterval=NULL;xspace=NULL;label.pos=list()
digits=3
if(is.null(radx)) radx=ifelse(nodemode==1,0.09,0.12)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
res$start=changeLabelName(res$start,labels,add=FALSE)
res$end=changeLabelName(res$end,labels,add=FALSE)
df1=res
df1
if(is.null(nodelabels)) {
nodelabels=labels
}
name=unique(c(df1$start,df1$end))
nodes=data.frame(name=name,stringsAsFactors = FALSE)
nodes$no=4
nodes$no[nodes$name=="Y"]=1
nodes$no[str_detect(nodes$name,"^M[0-9]?$")]=2
nodes$no[str_detect(nodes$name,"^X[0-9]?$")]=3
count=length(nodes$no[nodes$no==4])
nodes$no[(nodes$no==4)&(str_detect(nodes$name,":"))]=6
nodes$no[(nodes$no==6)&(str_detect(nodes$name,"^X"))]=5
temp="dplyr::arrange(nodes,no,name)"
nodes<-eval(parse(text=temp))
nodes
icount=sum(str_detect(nodes$name,":"))
nodes$xpos=0
nodes$xpos[nodes$name=="Y"]=ypos[1]
mcount=nrow(nodes[nodes$no==2,])
mympos=seq(from=0,to=1,length.out=mcount+2)
nodes$xpos[nodes$no==2]=mympos[2:(length(mympos)-1)]
if(icount>0) {
nodes$xpos[str_detect(nodes$name,":")]=seq(from=0.05,by=0.1,length.out=icount)
}
nodes$ypos=1
nodes$ypos[nodes$no==1]=ypos[2]
nodes$ypos[nodes$no==2]=mpos[2]
select1=which(nodes$no<=2)
select=setdiff(which(!str_detect(nodes$name,":")),select1)
nodes$ypos[select]=seq(to=2,by=-1,length.out = length(select))
nodes
# nodes$xpos1=adjustxpos(nodes$xpos,xmargin=xmargin,radx=radx)
nodes$ypos=adjustypos(nodes$ypos,ymargin=ymargin,rady=rady,
maxypos=maxypos,minypos=minypos)
arrows=df1
arrows$labelpos=0.5
arrows$arrpos=0.8
arrows$no=1
arrows$lty=1
arrows$label1=arrows$name
if(whatLabel=="name") {
arrows$label=arrows$name
addprime=TRUE
} else{
arrows$label=round(arrows$est,digits)
arrows$lty=ifelse(arrows$p<0.05,1,3)
addprime=FALSE
}
# print(nodes)
#   print(arrows)
openplotmat(xlim=xlim,ylim=ylim)
for(i in 1:nrow(arrows)){
temppos=arrows$labelpos[i]
if(!is.null(label.pos[[arrows$name[i]]])) temppos=label.pos[[arrows$name[i]]]
myarrow2(nodes, from=arrows$start[i],to=arrows$end[i],
label=arrows$label[i],no=arrows$no[1],xmargin=xmargin,radx=radx,rady=rady,
label.pos=temppos,arr.pos=NULL,lty=arrows$lty[i],addprime=addprime,xspace=xspace)
}
for(i in 1:nrow(nodes)){
xpos=nodes$xpos[i]
xpos=adjustxpos(xpos,xmargin,radx,xspace=xspace)
mid=c(xpos,nodes$ypos[i])
label=nodes$name[i]
if(nodemode==2) {
if(!is.null(labels[[label]])) label=labels[[label]]
} else if(nodemode==3){
if(!is.null(labels[[label]])) label=paste0(labels[[label]],"(",label,")")
}
drawtext(mid,radx=radx,rady=rady,lab=label,latent=FALSE)
if(nodemode==1){
if(!is.null(nodelabels[[label]])) {
if(is.null(yinterval)) yinterval=2*rady+ymargin
if(is.null(xinterval)) xinterval=2*radx
if(mid[2]<=rady+ymargin){
newmid=mid-c(0,yinterval)
} else if(mid[2]>=0.9){
newmid=mid+c(0,yinterval)
} else if(mid[1]>0.85){
newmid=mid+c(xinterval,0)
} else{
newmid=mid-c(xinterval,0)
}
textplain(mid=newmid,lab=nodelabels[[label]])
}
}
}
print(nodes)
library(processR)
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
library(processR)
drawModel(semfit,labels=labels)
library(processR)
drawModel(semfit,labels=labels)
drawModel(semfit,labels=labels,whatLabel = "est")
drawModel(semfit,labels=labels)
statisticalDiagram(58.2)
showModels()
statisticalDiagram(10)
library(processR)
statisticalDiagram(10)
showModels()
require(lavaan)
labels=list(X=c("cyl","am"),M="hp",Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
cat(model)
semfit=sem(model=model,data=mtcars)
estimatesTable2(semfit)
modmedSummaryTable(semfit)
drawModel(semfit,labels=labels)
library(processR)
labels=list(X=c("cyl","am"),M="hp",Y="mpg")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels,whatLabel = "est")
drawModel(semfit,labels=labels)
library(processR)
drawModel(semfit,labels=labels)
statisticalDiagram(58.2)
drawModel(semfit,labels=labels)
statisticalDiagram(58.2)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
library(processR)
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
devtools::document()
devtools::check()
showModels()
