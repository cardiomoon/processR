mod
x=modmedSummary(semfit,mod=mod,values=values)
indirect=attr(x,"indirect")
direct=attr(x,"direct")
indirect
direct
for(i in 1:nrow(res)){
indirect=str_replace(indirect,res$label[i],as.character(res$est[i],3))
direct=str_replace(direct,res$label[i],as.character(res$est[i],3))
}
fun1=function(W) eval(parse(text=direct))
fun2=function(W) eval(parse(text=indirect))
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color="black",size=1)+
stat_function(fun=fun2,color="red",lty=3,size=1)
data=teams
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color="black",size=1)+
stat_function(fun=fun2,color="red",lty=3,size=1)
p
indirect
direct
res=parameterEstimates(semfit)
res=res[res$label!="",]
res
if(is.null(mod)){
mod=res$lhs[str_detect(res$label,"mean")][1]
mod
}
x=modmedSummary(semfit,mod=mod,values=values)
indirect=attr(x,"indirect")
direct=attr(x,"direct")
indirect
direct
res
for(i in 1:nrow(res)){
indirect=str_replace(indirect,res$label[i],as.character(res$est[i],3))
direct=str_replace(direct,res$label[i],as.character(res$est[i],3))
}
fun1=function(W) eval(parse(text=direct))
fun2=function(W) eval(parse(text=indirect))
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color="black",size=1)+
stat_function(fun=fun2,color="red",lty=3,size=1)
p
res1=fun2eq(fun1)
res2=fun2eq(fun2)
slope=c(res1$slope,res2$slope)
intercept=c(res1$intercept,res2$intercept)
name=c("Direct Effect","Indirect Effect")
df=data.frame(name,slope,intercept,stringsAsFactors = FALSE)
df
info=getAspectRatio(p)
info
ratio=info$ratio
df$slope2=df$slope*ratio
df$radian=atan(df$slope2)
df$angle=df$radian*180/pi
df$label=paste0("Y = ",sprintf("%0.3f",df$intercept),ifelse(df$slope>0," + "," - "),
sprintf("%0.3f",abs(df$slope)),"*W")
p
x=info$xmin+(info$xmax-info$xmin)/3*(1:2)
x
y1=unlist(lapply(1:2,function(i){fun1(x[i])}))
y2=unlist(lapply(1:2,function(i){fun2(x[i])}))
select=which.max(abs(y1-y2))
df$x=x[select]
y=c(fun1(x[select]),fun2(x[select]))
df$y=y
df
p+coord_fixed(ratio=ratio)+
geom_text(data=df,aes_string(x="x",y="y",label="name",angle="angle"),color=c("black","red"),vjust=-1.0,fontface="italic")+
geom_text(data=df,aes_string(x="x",y="y",label="label",angle="angle"),color=c("black","red"),fontface="italic",vjust=1.5)+
guides(color=FALSE)+
xlab(paste0(mod,"(W)"))+ylab("Conditional Effects")+
theme_bw()
conditionalEffectPlot(semfit,data=teams)
devtools::document()
library(processR)
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
semfit@Data
str(semfit@Data)
semfit@Data@ov
str(semfit@Data@ov)
str(teams)
require(lavaan)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=disaster,se="boot",bootstrap=100)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=disaster)
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
add_lines
add_lines()
predict3d::add_lines
library(processR)
library(processR)
add_lines
library(predict3d)
add_lines
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
library(processR)
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
values=NULL;mod=NULL;color=c("black","red");lty=c(1,3);linesize=1
res=parameterEstimates(semfit)
res=res[res$label!="",]
res
if(is.null(mod)){
mod=res$lhs[str_detect(res$label,"mean")][1]
mod
}
x=modmedSummary(semfit,mod=mod,values=values)
indirect=attr(x,"indirect")
direct=attr(x,"direct")
indirect
direct
for(i in 1:nrow(res)){
indirect=str_replace(indirect,res$label[i],as.character(res$est[i],3))
direct=str_replace(direct,res$label[i],as.character(res$est[i],3))
}
fun1=function(W) eval(parse(text=direct))
fun2=function(W) eval(parse(text=indirect))
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color=color[1],lty=lty[1],size=linesize)+
stat_function(fun=fun2,color=color[2],lty=lty[2],size=linesize)
require(ggplot2)
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color=color[1],lty=lty[1],size=linesize)+
stat_function(fun=fun2,color=color[2],lty=lty[2],size=linesize)
data=treams
data=teams
fun1=function(W) eval(parse(text=direct))
fun2=function(W) eval(parse(text=indirect))
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color=color[1],lty=lty[1],size=linesize)+
stat_function(fun=fun2,color=color[2],lty=lty[2],size=linesize)
p
res1=fun2eq(fun1)
res2=fun2eq(fun2)
slope=c(res1$slope,res2$slope)
intercept=c(res1$intercept,res2$intercept)
name=c("Direct Effect","Indirect Effect")
df=data.frame(name,slope,intercept,stringsAsFactors = FALSE)
df
info=getAspectRatio(p)
info
ratio=info$ratio
df$slope2=df$slope*ratio
df$radian=atan(df$slope2)
df$angle=df$radian*180/pi
df
str(df)
df$label=paste0("Y = ",sprintf("%0.3f",df$intercept),
ifelse(df$slope==0,"",ifelse(df$slope>0," + "," - ")),
ifelse(df$slope==0,"",sprintf("%0.3f",abs(df$slope)),"*W"))
p
df
str(df)
df$label=paste0("Y = ",sprintf("%0.3f",df$intercept),
ifelse(df$slope==0,"",ifelse(df$slope>0," + "," - ")),
ifelse(df$slope==0,"",sprintf("%0.3f",abs(df$slope),"*W")))
p
df
x=info$xmin+(info$xmax-info$xmin)/3*(1:2)
x
y1=unlist(lapply(1:2,function(i){fun1(x[i])}))
y2=unlist(lapply(1:2,function(i){fun2(x[i])}))
select=which.max(abs(y1-y2))
df$x=x[select]
y=c(fun1(x[select]),fun2(x[select]))
df$y=y
df
p+coord_fixed(ratio=ratio)+
geom_text(data=df,aes_string(x="x",y="y",label="name",angle="angle"),color=color,vjust=-1.0,fontface="italic")+
geom_text(data=df,aes_string(x="x",y="y",label="label",angle="angle"),color=color,fontface="italic",vjust=1.5)+
guides(color=FALSE)+
xlab(paste0(mod,"(W)"))+ylab("Conditional Effects")+
theme_bw2()
sprintf("%0.3f",-12,"*W")
#'@param values Optional value
#'@param data A data.frame
#'@param mod Name of moderator variable
#'@param color charactor vector line color
#'@param lty numeric line type
#'@param linesize numeric linesize
#'@importFrom ggplot2 stat_function guides xlab ylab ggplot aes_string coord_fixed
#'@importFrom ggplot2 geom_text aes theme_bw
#'@importFrom predict3d theme_bw2
#'@export
conditionalEffectPlot=function(semfit,values=NULL,data,
mod=NULL,color=c("black","red"),lty=c(1,3),linesize=1){
# values=NULL;mod=NULL;color=c("black","red");lty=c(1,3);linesize=1
res=parameterEstimates(semfit)
res=res[res$label!="",]
res
if(is.null(mod)){
mod=res$lhs[str_detect(res$label,"mean")][1]
mod
}
x=modmedSummary(semfit,mod=mod,values=values)
indirect=attr(x,"indirect")
direct=attr(x,"direct")
indirect
direct
for(i in 1:nrow(res)){
indirect=str_replace(indirect,res$label[i],as.character(res$est[i],3))
direct=str_replace(direct,res$label[i],as.character(res$est[i],3))
}
fun1=function(W) eval(parse(text=direct))
fun2=function(W) eval(parse(text=indirect))
p<-ggplot(data=data,aes_string(x=mod))+
stat_function(fun=fun1,color=color[1],lty=lty[1],size=linesize)+
stat_function(fun=fun2,color=color[2],lty=lty[2],size=linesize)
p
res1=fun2eq(fun1)
res2=fun2eq(fun2)
slope=c(res1$slope,res2$slope)
intercept=c(res1$intercept,res2$intercept)
name=c("Direct Effect","Indirect Effect")
df=data.frame(name,slope,intercept,stringsAsFactors = FALSE)
df
info=getAspectRatio(p)
info
ratio=info$ratio
df$slope2=df$slope*ratio
df$radian=atan(df$slope2)
df$angle=df$radian*180/pi
df
str(df)
df$label=paste0("Y = ",sprintf("%0.3f",df$intercept),
ifelse(df$slope==0,"",ifelse(df$slope>0," + "," - ")),
ifelse(df$slope==0,"",paste0(sprintf("%0.3f",abs(df$slope)),"*W")))
p
x=info$xmin+(info$xmax-info$xmin)/3*(1:2)
x
y1=unlist(lapply(1:2,function(i){fun1(x[i])}))
y2=unlist(lapply(1:2,function(i){fun2(x[i])}))
select=which.max(abs(y1-y2))
df$x=x[select]
y=c(fun1(x[select]),fun2(x[select]))
df$y=y
df
p+coord_fixed(ratio=ratio)+
geom_text(data=df,aes_string(x="x",y="y",label="name",angle="angle"),color=color,vjust=-1.0,fontface="italic")+
geom_text(data=df,aes_string(x="x",y="y",label="label",angle="angle"),color=color,fontface="italic",vjust=1.5)+
guides(color=FALSE)+
xlab(paste0(mod,"(W)"))+ylab("Conditional Effects")+
theme_bw2()
}
library(processR)
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
conditionalEffectPlot(semfit,data=teams,color=c("red","blue"))
conditionalEffectPlot(semfit,data=teams)
modmedSummary(semfit)
cat(model)
library(processR)
labels=list(X="cond",M="pmi",Y="reaction")
model=tripleEquation(labels=labels)
semfit=sem(model=model,data=pmi, se="boot", bootstrap=100)
medSummary(semfit)
library(processR)
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
modSummary(semfit,mod="skeptic")
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
modSummary(semfit,mod="skeptic")
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=10)
modSummary(semfit,mod="skeptic")
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
modSummary(semfit,mod="skeptic")
modSummaryTable(semfit,mod="skeptic")
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
modSummary(semfit,mod="skeptic")
modSummaryTable(semfit,mod="skeptic")
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
modSummary(semfit,mod="skeptic")
fit=semfit;mod="skeptic";values=NULL;boot.ci.type="bca.simple"
# fit=semfit;mod="skeptic";values=NULL;boot.ci.type="bca.simple"
fit=semfit
res=parameterEstimates(fit,boot.ci.type = boot.ci.type,
level = .95, ci = TRUE,
standardized = FALSE)
res=res[res$label!="",]
res
if(is.null(values)){
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
values1
} else{
values1=values
}
library(processR)
require(lavaan)
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
modSummary(semfit)
modSummaryTable(semfit)
fit=semfit;mod="skeptic";values=NULL;boot.ci.type="bca.simple"
res=parameterEstimates(fit,boot.ci.type = boot.ci.type,
level = .95, ci = TRUE,
standardized = FALSE)
res=res[res$label!="",]
res
if(is.null(mod)){
mod=res$lhs[str_detect(res$label,"mean")][1]
mod
}
mod
if(is.null(values)){
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
values1
} else{
values1=values
}
#'Extract range from a data.frame
#'@param res A data.frame
#'@param mod Name of moderator
#'@param what string
extractRange=function(res,mod,what="indirect"){
select=str_detect(res$lhs,what)
res1=res[select,c(1,3)]
temp=res1$rhs
temp
result=extractNumber(temp)
result
if(length(result)>0) {
values=result
} else{
values=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
}
values
}
require(stringr)
if(is.null(values)){
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
values1
} else{
values1=values
}
# select=c("indirect","indirect.below","indirect.above")
# indirect=res$est[which(res$lhs %in% select)]
# lower=res$ci.lower[which(res$lhs %in% select)]
# upper=res$ci.upper[which(res$lhs %in% select)]
# indirectp=res$pvalue[which(res$lhs %in% select)]
select=c("direct","direct.below","direct.above")
direct=res$est[which(res$lhs %in% select)]
lowerd=res$ci.lower[which(res$lhs %in% select)]
upperd=res$ci.upper[which(res$lhs %in% select)]
#
# se=res$se[which(res$lhs %in% select)]
directp=res$p[which(res$lhs %in% select)]
df=data.frame(values=values1,direct,lowerd,upperd,directp)
df=df[c(2,1,3),]
df[]=round(df,3)
df=data.frame(values=values1,direct,lowerd,upperd,directp)
df=df[c(2,1,3),]
df[]=round(df,3)
df
str(df)
require(lavaan)
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
fit=semfit;mod="skeptic";values=NULL;boot.ci.type="bca.simple"
# fit=semfit;mod="skeptic";values=NULL;boot.ci.type="bca.simple"
fit=semfit
res=parameterEstimates(fit,boot.ci.type = boot.ci.type,
level = .95, ci = TRUE,
standardized = FALSE)
res=res[res$label!="",]
res
if(is.null(mod)){
mod=res$lhs[str_detect(res$label,"mean")][1]
mod
}
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
values1
is.numeric(values1)
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
if(is.null(values)){
# values1=res$est[res$label==paste0(mod,".mean")]+c(0,-1,1)*sqrt(res$est[res$label==paste0(mod,".var")])
values1=extractRange(res,mod=mod,what="direct")
if(!is.numeric(values1)) values1=as.numeric(values1)
} else{
values1=values
}
# select=c("indirect","indirect.below","indirect.above")
# indirect=res$est[which(res$lhs %in% select)]
# lower=res$ci.lower[which(res$lhs %in% select)]
# upper=res$ci.upper[which(res$lhs %in% select)]
# indirectp=res$pvalue[which(res$lhs %in% select)]
select=c("direct","direct.below","direct.above")
direct=res$est[which(res$lhs %in% select)]
lowerd=res$ci.lower[which(res$lhs %in% select)]
upperd=res$ci.upper[which(res$lhs %in% select)]
#
# se=res$se[which(res$lhs %in% select)]
directp=res$p[which(res$lhs %in% select)]
df=data.frame(values=values1,direct,lowerd,upperd,directp)
df=df[c(2,1,3),]
str(df)
df[]=round(df,3)
attr(df,"mod")=mod
if(is.null(values)) {
direct=res$rhs[res$lhs=="direct"]
if(str_detect(direct,".mean")){
direct=str_replace(direct,paste0(mod,".mean"),"W")
} else{
temp=unlist(strsplit(direct,"*",fixed=TRUE))
direct=paste0(temp[1],"*W")
}
} else{
direct=res$rhs[res$lhs=="direct"]
if(str_detect(direct,paste0(mod,".mean"))) {
direct=str_replace(direct,paste0(mod,".mean"),"W")
} else{
temp=as.character(values1[1])
direct=str_replace(direct,temp,"W")
}
}
attr(df,"direct")=direct
attr(df,"direct2")=paste0(sprintf("%0.3f",res$est[res$label=="c1"]),
ifelse(res$est[res$label=="c3"]>=0," + "," - "),
sprintf("%0.3f",abs(res$est[res$label=="c3"])),"*W")
attr(df,"boot.ci.type")=boot.ci.type
class(df)=c("modSummary","data.frame")
df
library(processR)
labels=list(X="frame",W="skeptic",Y="justify")
moderator=list(name='skeptic',site=list("c"))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model=model,data=disaster,se="boot",bootstrap=100)
modSummary(semfit)
modSummaryTable(semfit)
labels=list(X="negemot",W="sex",Z="age",Y="govact",C1="posemot",C2="ideology")
fit=lm(govact~negemot*sex+negemot*age+posemot+ideology,data=glbwarm)
modSummary2(fit,rangemode=2,mod2.values=c(30,50,70),summarymode=2)
modSummary2(fit,mod2.values=c(30,50,70),summarymode=1,labels=labels)
labels=list(X="frame",W="skeptic",Y="justify")
fit=lm(justify~frame*skeptic,data=disaster)
modSummary2(fit,labels=labels)
devtools::document()
library(processR)
devtools::check()
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
library(processR)
labels=list(X="dysfunc",M="negtone",Y="perform",W="negexp")
moderator=list(name="negexp",site=list("b"))
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
semfit=sem(model,data=teams,se="boot",bootstrap=100)
summary(semfit)
modmedSummary(semfit)
conditionalEffectPlot(semfit,data=teams)
