affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
indirect.ps :=(a)*(b)/sqrt(withdraw.var)
direct.ps :=c/sqrt(withdraw.var)
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
indirect.ps :=(a)*(b)/sqrt(withdraw.var)
direct.ps :=c/sqrt(withdraw.var)
total.ps := direct.ps + indirect.ps
'
cat(model)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
indirect.ps :=(a)*(b)/sqrt(withdraw.var)
direct.ps :=c/sqrt(withdraw.var)
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
sd(estress.var)
sd(estress$var)
sd(estress$withdraw)
sd(estress$withdraw)^2
nrow(estress)
(estress$withdraw-mean(estress$withdraw))^2/nrow(estress)
sum((estress$withdraw-mean(estress$withdraw))^2)/nrow(estress)
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/nrow(estress))
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1))
sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var*262/(261))
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1)
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1))
var(estress$withdraw)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var*261/262)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
var(estress$withdraw)
sd(estress$withdraw)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
sd(estress$withdraw)
var(estress$withdraw)
sd(estress$withdraw)
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1))
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
wathdraw.var1:=withdraw.var*262/261
sdy:=sqrt(withdraw.var1)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
wathdraw.var1:=withdraw.var*262/261
sdy:=sqrt(withdraw.var1)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
withdraw.var1:=withdraw.var * 262 / 261
sdy:=sqrt(withdraw.var1)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
withdraw.var1:=withdraw.var * 262 / 261
sdy:=sqrt(withdraw.var1)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
var(estress$withdraw)
sd(estress$withdraw)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
withdraw.var1:=withdraw.var * 262 / 261
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
var(estress$withdraw)
sd(estress$withdraw)
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)))
sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress))
sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)-1)
var(estress$withdraw)
sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress))
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)))
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
withdraw.var1:=withdraw.var
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
sqrt(sum((estress$withdraw-mean(estress$withdraw))^2)/(nrow(estress)))
var(estress$withdraw)
model=tripleEquation(labels=labels)
cat(model)
sd(estress$withdraw)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=1.24687
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~~ withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~~ withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~~ withdraw.var
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~~ withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
withdraw.var:=withdraw.var*1
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
model=tripleEquation(labels=labels,moderator=moderator)
cat(model)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:=sqrt(withdraw.var)
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
var(estress$withdraw)
sd(estress$withdraw)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:= 1.24687
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
'
semfit=sem(model=model,data=estress)
summary(semfit)
sd(estress$estress)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:= 1.24687
sdx:= 1.423614
indirect.ps :=(a)*(b)/sdy
direct.ps :=c/sdy
total.ps := direct.ps + indirect.ps
indirect.cs := sdx*indirect.ps
direct.cs := sdx* direct.ps
total.cs := direct.cs + indirect.cs
'
semfit=sem(model=model,data=estress)
summary(semfit)
model='
affect~a*estress
withdraw~c*estress+b*affect
withdraw ~ withdraw.mean*1
withdraw ~~ withdraw.var*withdraw
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total
sdy:= 1.24687
sdx:= 1.423614
indirect.ps :=indirect/sdy
direct.ps :=direct/sdy
total.ps := direct.ps + indirect.ps
indirect.cs := sdx*indirect.ps
direct.cs := sdx* direct.ps
total.cs := direct.cs + indirect.cs
'
semfit=sem(model=model,data=estress)
summary(semfit)
system("grep -r 'makeIndirect' *")
devtools::document()
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels)
cat(model)
model=tripleEquation(labels=labels,effectsize=TRUE)
cat(model)
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
cat(model)
semfit=sem(model=model,data=estress)
summary(semfit)
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
cat(model)
library(processR)
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
cat(model)
semfit=sem(model=model,data=estress)
library(processR)
library(processR)
labels=list(X="estress",M="affect",Y="withdraw")
model=tripleEquation(labels=labels,effectsize=TRUE,data=estress)
cat(model)
semfit=sem(model=model,data=estress)
summary(semfit)
devtools::document()
devtools::check()
require(processR)
library(lavaan)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
nodelabels=c(X="Intervention\n(vs.control)",
M=c("Restrained\nEating","Emotional\nEating","Perceived\nBarriers to\nExercise"),Y="Weight Loss")
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),
yinterval=0.04,ylim=c(-0.3,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),
yinterval=0.03,ylim=c(-0.3,1.2))
drawModel(labels=labels,nodelabels=nodelabels,parallel=TRUE,xlim=c(-0.4,1.4),
yinterval=0.02,ylim=c(-0.3,1.2))
library(processR)
labels=list(X="X",M=c("M1","M2","M3"),Y="Y")
nodelabels=c(X="Intervention\n(vs.control)",
M=c("Restrained\nEating","Emotional\nEating","Perceived\nBarriers to\nExercise"),Y="Weight Loss")
drawModel(labels=labels,nodelabels=nodelabels,whatLabel="none",parallel=TRUE,xlim=c(-0.4,1.4),
yinterval=0.02,ylim=c(-0.3,1.2))
labels=list(X="X",M=c("M1","M2","Mk-1","Mk"),Y="Y")
drawModel(labels=labels,parallel=TRUE,kmediator=TRUE,nodemode=2,label.pos=list(c=0.4),radx=0.08)
devtools::document()
devtools::check()
library(processR)
devtools::document()
labels=list(X="X",M="M",Y="Y")
drawModel(labels=labels)
labels=list(X="X",M=c("M1","M2"),Y="Y")
drawModel(labels=labels)
drawModel(labels=labels,parallel=TRUE)
drawModel(labels=labels,parallel=TRUE,serial=TRUE)
drawModel(labels=labels,serial=TRUE)
devtools::check()
require(processR)
require(lavaan)
labels=list(X="cond",M=c("import","pmi"),W="age",Y="reaction")
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
cat(model)
semfit=sem(model=model,data=pmi)
drawModel(semfit,labels=labels)
devtools::document()
devtools::check
()
devtools::check()
labels=list(X="cond",M=c("import","pmi"),W="age",Y="reaction")
labels=list(X="cond",M=c("import","pmi"),W="age",Y="reaction")
model=multipleMediation(labels=labels,data=pmi,serial=TRUE)
cat(model)
model=multipleMediation(labels=labels,data=pmi,serial=TRUE,contrast=2)
cat(model)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
model=multipleMediation(labels=labels,data=pmi)
model=multipleMediation(labels=labels,data=pmi,contrast=2)
cat(model)
semfit=sem(model=model,data=pmi,se="boot",bootstrap=200)
require(lavaan)
semfit=sem(model=model,data=pmi,se="boot",bootstrap=200)
medSummary(semfit)
library(processR)
labels=list(X="cond",M=c("import","pmi"),Y="reaction")
cat(multipleMediation(labels=labels,data=pmi,serial=TRUE))
cat(multipleMediation(labels=labels,data=pmi,contrast=1))
cat(multipleMediation(labels=labels,data=pmi,contrast=2))
devtools::document()
devtools::check()
