arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
arrows3
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
estimatesTable
fit
#
no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
arrowslty=NULL
labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
digits=3;covar=list();addCovar=TRUE;type=NULL
includeLatentVars=FALSE;addprime=TRUE
covar=list(name=c("C1","C2"),site=list(c("M","Y"),"Y"));xlim=c(0,1);ylim=c(0,1)
fit=semfit;whatLabel="est";no=8
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
estimateTable
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
if( !is.null(estimateTable)) {
if(no==1.1){
arrows2$Predictors=arrows2$start
} else{
arrows2$Predictors=findNames(labels,names=arrows2$start)
}
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
arrows3
nodes
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
arrows3
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
arrows2$Predictors=findNames(labels,names=arrows2$start)
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
arrows3
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
print(arrows3)
#
no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
arrowslty=NULL
labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
digits=3;covar=list();addCovar=TRUE;type=NULL
includeLatentVars=FALSE;addprime=TRUE
covar=list(name=c("C1","C2"),site=list(c("M","Y"),"Y"));xlim=c(0,1);ylim=c(0,1)
fit=semfit;whatLabel="est";no=8
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model,data=disaster)
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
if( !is.null(estimateTable)) {
if(no==1.1){
arrows2$Predictors=arrows2$start
} else{
arrows2$Predictors=findNames(labels,names=arrows2$start)
}
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
print(arrows3)
#
no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
arrowslty=NULL
labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
digits=3;covar=list();addCovar=TRUE;type=NULL
includeLatentVars=FALSE;addprime=TRUE
covar=list(name=c("C1","C2"),site=list(c("M","Y"),"Y"));xlim=c(0,1);ylim=c(0,1)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,covar=covar,data=disaster,rangemode=2)
semfit=sem(model,data=disaster)
fit=semfit;whatLabel="est";no=8
#
no=4;radx=0.10;rady=0.04;xmargin=0.01;arrowlabel=TRUE;arrowslabels=NULL
arrowslty=NULL
labels=list();nodeslabels=list();whatLabel="name";fit=NULL;estimateTable=NULL
digits=3;covar=list();addCovar=TRUE;type=NULL
includeLatentVars=FALSE;addprime=TRUE
covar=list(name=c("C1","C2"),site=list(c("M","Y"),"Y"));xlim=c(0,1);ylim=c(0,1)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
covar=NULL
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model,data=disaster)
fit=semfit;whatLabel="est";no=8
if(!is.null(fit)) {
if(is.null(estimateTable)) estimateTable<-estimatesTable(fit,digits=digits)
}
if(no==1.1) {
nodes=est2Nodes(estimateTable)
} else {
nodes=getNodes(no)
}
if(no==1.1){
arrows1=est2Arrows(estimateTable)
} else{
arrows1=getArrows(no)
}
nodes
arrows1
# Add covariates
if(addCovar){
if(no!=1.1) nodes=addNodes(nodes,covar,radx=radx,rady=rady,no=no)
}
# print(nodes)
arrows1
covar
if(no==1.1) {
arrows2=arrows1
} else {
if(addCovar){
arrows2=addArrows(arrows1,covar)
} else{
arrows2=arrows1
}
}
arrows2
if( !is.null(estimateTable)) {
if(no==1.1){
arrows2$Predictors=arrows2$start
} else{
arrows2$Predictors=findNames(labels,names=arrows2$start)
}
arrows2$Variables=findNames(labels,names=arrows2$end)
labels
arrows2
estimateTable
# temp=c()
# for(i in 1:nrow(estimateTable)){
#    temp=c(temp,names(labels)[str_detect(labels,estimateTable$Variables[i])])
# }
# temp
# estimateTable$start=temp
# estimateTable
arrows2
if(includeLatentVars){
arrows3<-full_join(arrows2,estimateTable,by=c("Predictors","Variables"))
arrows3
arrows3$no=  arrows3$no[1]
arrows3$name[is.na(arrows3$name)]=""
arrows3$start[is.na(arrows3$start)]=arrows3$Predictors[is.na(arrows3$start)]
arrows3$end[is.na(arrows3$end)]=arrows3$Variables[is.na(arrows3$end)]
arrows3$labelpos=0.5
arrows3$arrpos=0.84
arrows3$end=changeLabelName(arrows3$end,labels)
} else{
arrows3<-left_join(arrows2,estimateTable,by=c("Predictors","Variables"))
}
if(is.null(arrowslty)) {
arrows3$lty=ifelse(arrows3$p<0.05,1,3)
} else{
arrows3$lty=arrowslty
}
# print(arrows3)
}  else{
arrows2$lty=1
arrows3<-arrows2
if(!is.null(arrowslty)) arrows3$lty=arrowslty
}
if(arrowlabel){
if(whatLabel=="name") {
arrows3$label=arrows3$name
} else if(whatLabel=="est"){
arrows3$label=arrows3$B
} else if(whatLabel=="label"){
if((!is.null(arrowslabels))&(length(arrowslabels)==nrow(arrows3))){
arrows3$label=arrowslabels
} else{
arrows3$label=""
}
} else{
arrows3$label=arrows3[,ncol(arrows3)-1]
}
} else {
arrows3$label=""
}
print(arrows3)
if((!is.null(fit))&(includeLatentVars)){
nodes=addLatentNodes(nodes,fit,labels)
nodes=adjustPosNodes(nodes)
}
arrows3
nodes
if(length(labels)>0){
nodes$name=str_replace(nodes$name,"i$","")
arrows3$name=str_replace(arrows3$name,"i$","")
arrows3$start=str_replace(arrows3$start,"i$","")
arrows3$end=str_replace(arrows3$end,"i$","")
arrows3$label=str_replace(arrows3$label,"i$","")
}
if(is.null(ylim)) ylim=c(min(nodes$ypos-rady-0.01),max(nodes$ypos+rady+0.01))
arrows3
str(arrows3)
if(whatLabel!="name") arrows3$label=as.numeric(arrows3$label)
drawStatDiagram(no=no,arrows=arrows3,nodes=nodes,labels=labels,nodeslabels=nodeslabels,
xmargin=xmargin,radx=radx,rady=rady,fit,addprime=addprime,xlim=xlim,ylim=ylim)
require(diagram)
drawStatDiagram(no=no,arrows=arrows3,nodes=nodes,labels=labels,nodeslabels=nodeslabels,
xmargin=xmargin,radx=radx,rady=rady,fit,addprime=addprime,xlim=xlim,ylim=ylim)
library(processR)
statisticalDiagram(no=1)
covar=list(name=c("posemot","ideology","sex"),site=list(c("Y"),c("Y"),c("Y")))
statisticalDiagram(no=1,covar=covar)
covar=list(name=c("posemot","ideology","sex"),site=list(c("M","Y"),c("Mi","Y"),c("Mi","Y")))
covar=list(name=c("C1","C2"),site=list(c("M","Y"),"Y"))
statisticalDiagram(no=4,covar=covar)
statisticalDiagram(no=8,covar=covar)
labels=list(X="wintense",Mi="cogapp",Y="emotion")
nodeslabels=list(X="Work\nIntensity",Mi="Cognitive\nAppraisal",Y="Emotional\nExhaustion")
statisticalDiagram(4,labels=labels)
statisticalDiagram(4,labels=nodeslabels)
statisticalDiagram(4,labels=labels,nodeslabels=nodeslabels)
labels=list(X="GDP\nper inhabitant",M="Illiteracy Rate",Y="Mean Life\nExpectation")
statisticalDiagram(4,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model,data=disaster)
statisticalDiagram(no=8,labels=labels,fit=semfit)
statisticalDiagram(no=8,labels=labels,fit=semfit,whatLabel="est")
drawModel(semfit,labels=labels,mode=2,nodemode=2)
drawModel(semfit,labels=labels,mode=2,nodemode=3)
library(processR)
devtools::document()
devtools::check()
library(processR)
