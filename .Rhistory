class(res)="data.frame"
if(count==1){
nrow1=nrow(res)-1
Variables=rep(Y[1],nrow1)
} else if(count==2) {
nrow1=which(res$name1=="Constant")[2]-2
nrow2=nrow(res)-2-nrow1
Variables=c(rep(Y[1],nrow1),rep(Y[2],nrow2))
}
df$Variables=Variables
res=res[res$name1!="Constant",]
res$label=str_replace(res$name,"'","")
df$label=res$label
colnames(df)[1:4]=c("B","SE","t","p")
df$B=round(df$B,digits=digits)
df
}
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
fit2table(fit=fit,labels=labels)
#' Make estimateTable with a list of lm object
#' @param fit A list of lm object
#' @param labels A list
#' @export
#' @examples
#' labels=list(X="frame",M="justify",Y="donate",W="skeptic")
#' moderator=list(name="skeptic",site=list(c("a","c")))
#' eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
#' fit=eq2fit(eq,data=disaster)
#' fit2table(fit=fit,labels=labels)
fit2table=function(fit,labels=labels,digits=3){
count=length(fit)
Y=c()
for(i in 1:count){
Y=c(Y,names(fit[[i]]$model)[1])
if(i==1) {
df=as.data.frame(summary(fit[[i]])$coef[-1,])
df$Predictors=rownames(df)
} else{
temp=as.data.frame(summary(fit[[i]])$coef[-1,])
temp$Predictors=rownames(temp)
df=rbind(df,temp)
}
}
Y
df
res=modelsSummary2(fit,labels=labels)
class(res)="data.frame"
if(count==1){
nrow1=nrow(res)-1
Variables=rep(Y[1],nrow1)
} else if(count==2) {
nrow1=which(res$name1=="Constant")[2]-2
nrow2=nrow(res)-2-nrow1
Variables=c(rep(Y[1],nrow1),rep(Y[2],nrow2))
}
df$Variables=Variables
res=res[res$name1!="Constant",]
res$label=str_replace(res$name,"'","")
df$label=res$label
colnames(df)[1:4]=c("B","SE","t","p")
df$B=round(df$B,digits=digits)
df$SE=round(df$SE,digits=digits)
df$t=round(df$t,digits=digits)
df
}
devtools::document()
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
class(fit)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
covar=NULL
model=tripleEquation(labels=labels,moderator=moderator,data=disaster,rangemode=2)
semfit=sem(model,data=disaster)
class(semfit)
class(semfit)=="lavaan"
devtools::document()
library(processR)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
showModels()
statisticalDiagram(8,labels=labels,fit=fit)
statisticalDiagram(8,labels=labels)
library(processR)
statisticalDiagram(8,labels=labels)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
statisticalDiagram(8,labels=labels,fit=fit)
statisticalDiagram(8,labels=labels,fit=fit,whatLabel="est")
statisticalDiagram(8,labels=labels,fit=fit,whatLabel="name")
library(processR)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
statisticalDiagram(8,labels=labels,fit=fit)
statisticalDiagram(8,labels=labels,fit=fit,whatLabel="est")
statisticalDiagram(8,labels=labels,fit=fit)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
semfit=fit
res=fit2table(semfit,labels=labels,digits=digits)
digits=3
res=fit2table(semfit,labels=labels,digits=digits)
res
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
res=parameterEstimates(semfit)
res=res[res$op=="~",]
res
res=res[c(1,3,4,5,8)]
colnames(res)=c("end","start","name","est","p")
res
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
library(processR)
statisticalDiagram(8,labels=labels,fit=fit)
statisticalDiagram(8,labels=labels,fit=fit,whatLabel="est")
drawModel(fit)
drawModel(semfit=fit)
labels=list(X="frame",M="justify",Y="donate",W="skeptic")
moderator=list(name="skeptic",site=list(c("a","c")))
eq=tripleEquation(labels=labels,moderator=moderator,data=disaster,mode=1)
fit=eq2fit(eq,data=disaster)
library(processR)
drawModel(semfit=fit,labels=labels)
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model,data=disaster)
drawModel(fit,labels=labels)
drawModel(semfit,labels=labels)
drawModel(fit,labels=labels)
drawModel(semfit,labels=labels)
drawModel(fit,labels=labels,whatLabel="est")
drawModel(semfit,labels=labels,whatLabel="est")
drawModel(fit,labels=labels,whatLabel="est")
drawModel(fit,labels=labels)
drawModel(fit,labels=labels,nodemode=2)
drawModel(fit,labels=labels,nodemode=3)
drawModel(fit,labels=labels,nodemode=4)
fit=eq2fit(eq,data=disaster)
showModels()
devtools::document()
devtools::check()
devtools:document()
devtools::document()
library(processR)
devtools::check()
library(processR)
devtools::check()
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),xinterval=0.26)
devtools::document()
devtools::check()
devtools::document()
devtools::check()
library(processR)
require(processR)
system("grep -r 'changeLabelName' *")
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
changeLabelName(x,labels)
#'Change Label Names
#'@param x A character vector
#'@param labels A list
#'@param add A logical
#'@export
#'@examples
#'labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
#'x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
#'changeLabelName(x,labels)
#'changeLabelName(x,labels,add=TRUE)
changeLabelName=function(x,labels,add=FALSE){
res=c()
# i=5;add=FALSE
for(i in 1:length(x)){
if(x[i] %in% unlist(labels)){
if(add){
temp=names(unlist(labels))[which(unlist(labels)==x[i])]
res=c(res,paste0(x[i],"(",temp,")"))
} else{
res=c(res,names(unlist(labels))[which(unlist(labels)==x[i])])
}
} else if(str_detect(x[i],":")){
temp=unlist(strsplit(x[i],":"))
temp
temp2=c()
for(j in 1:length(temp)){
temp3=names(unlist(labels))[which(unlist(labels)==temp[j])]
if(length(temp3)==0) temp3=temp[j]
temp2=c(temp2,temp3)
}
temp2
if(length(temp2)>1){
temp2=paste0(temp2,collapse=":")
if(add){
res=c(res,paste0(x[i],"(",temp2,")"))
} else{
res=c(res,temp2)
}
} else{
temp=x[i]
temp
for(j in 1:length(labels)){
if(add) {
temp=str_replace(x[i],labels[[j]],paste0(labels[[j]],"(",names(labels)[j],")"))
} else{
temp=str_replace(x[i],labels[[j]],names(labels)[j])
}
}
temp
res=c(res,temp)
}
}  else {
res=c(res,x[i])
}
}
res
}
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
changeLabelName(x,labels)
require(stringr)
labels=list(X="skeptic",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame")
changeLabelName(x,labels)
changeLabelName(x,labels,add=TRUE)
labels=list(X="frame:test",Mi="empathy",Y="intervention",W="frame",Z="test")
x=c("skeptic","test","empathy","skeptic:frame:test","D1:frame","frame:test")
changeLabelName(x,labels)
changeLabelName(x,labels,add=TRUE)
library(processR)
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
library(processR)
library(diagram)
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
textpain(mid=c(0.5,0.5),lab="center",adj=(0,0.5))
textpain(mid=c(0.5,0.5),lab="center",adj=c(0,0.5))
textplain(mid=c(0.5,0.5),lab="center",adj=c(0,0.5))
textplain(mid=c(0.5,0.5),lab="center",adj=c(1,0.5))
textplain(mid=c(0.5,0.5),lab="center",adj=c(0.5,1))
textplain(mid=c(0.5,0.5),lab="center",adj=c(0.5,2))
textplain(mid=c(0.5,0.5),lab="center",adj=c(0.5,-2))
textplain(mid=c(0.5,0.5),lab="center",adj=c(0.5,-1))
library(processR)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,"protest",mode=3)
model=catMediation(X="protest",M="respappr",Y="liking",moderator=moderator,data=protest,maxylev=6)
semfit=sem(model,data=data1)
nodelabels=list(D1="Ind.Protest",D2="Col.Protest",W="sexism",M="respappr",Y="liking")
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3),xinterval=0.26)
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3))
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
library(processR)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,"protest",mode=3)
model=catMediation(X="protest",M="respappr",Y="liking",moderator=moderator,data=protest,maxylev=6)
semfit=sem(model,data=data1)
nodelabels=list(D1="Ind.Protest",D2="Col.Protest",W="sexism",M="respappr",Y="liking")
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3))
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","wt","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
devtools::document()
devtools::check()
labels=list(X="frame:skeptic",M="justify",Y="donate")
labels=list(X="frame:skeptic",M="justify",Y="donate")
covar=list(name=c("frame","skeptic"),site=list(c("M","Y"),c("M","Y")))
require(processR)
labels=list(X="frame:skeptic",M="justify",Y="donate")
covar=list(name=c("frame","skeptic"),site=list(c("M","Y"),c("M","Y")))
model=tripleEquation(labels=labels,covar=covar)
model
cat(model)
model='justify ~ a*frame:skeptic + f1*frame + f2*skeptic
donate ~ c*frame:skeptic+b*justify + g1*frame + g2*skeptic
indirect :=(a)*(b)
direct :=c
total := direct + indirect
prop.mediated := indirect / total'
require(lavaan)
semfit=sem(model=model,data=disaster)
summary(semfit)
medSummary(fit)
medSummary(sefit)
medSummary(semfit)
estimatesTable(semfit)
medSummary(semfit)
summary(semfit,ci=TRUE)
estimatesTable(semfit)
medSummary(semfit)
modmedSummary(semfit)
estimatesTable(semfit)
medSummary(semfit)
labels=list(X="frame:skeptic",M="justify",Y="donate")
covar=list(name=c("frame","skeptic"),site=list(c("M","Y"),c("M","Y")))
# labels=list(X="frame",M="justify",Y="donate",W="skeptic")
# moderator=list(name=c("skeptic","Z"),site=list(c("a","b","c"),c("b")))
labels=list(X="frame:skeptic",M="justify",Y="donate")
covar=list(name=c("frame","skeptic"),site=list(c("M","Y"),c("M","Y")))
moderator=list()
X=NULL;M=NULL;Y=NULL;vars=NULL;suffix=0;
range=TRUE;mode=0;data=NULL;rangemode=1;probs=c(0.16,0.5,0.84)
if(is.null(X)) X=labels$X
if(is.null(M)) if(!is.null(labels$M)) M=labels$M
if(is.null(Y)) Y=labels$Y
temp1<-temp2<-temp3<-temp4<-NULL
(XM=moderator$name[str_detect2(moderator$site,"a")])
(MY=moderator$name[str_detect2(moderator$site,"b")])
(XY=moderator$name[str_detect2(moderator$site,"c")])
res=seekNameVars(vars,"a")
if(length(res)>0) {
for(i in 1:length(res)){
newvars=c(X,vars$name[[res[i]]])
temp1=c(temp1,tripleInteraction(newvars,prefix="a",suffix=suffix,mode=mode,addPrefix=FALSE))
suffix=suffix+1
}
}
temp1
if(!is.null(M)){
XM=c(X,XM)
XMstr=interactStr(XM,addPrefix=FALSE)
temp1=union(temp1,XMstr)
if(mode==0) temp1=paste0("a",1:length(temp1),"*",temp1)
temp4=paste0(M,"~",paste(temp1,collapse="+"))
if(!is.null(covar)){
covar$site=lapply(covar$site,function(x) str_replace(x,"Mi|M",M))
if(mode){
temp4=addCovarEquation(temp4,covar,prefix=NULL)
} else{
temp4=addCovarEquation(temp4,covar,prefix="f")
}
}
}
res=seekNameVars(vars,"b")
length(res)
if(length(res)>0) {
for(i in 1:length(res)){
newvars=c(M,vars$name[[res[i]]])
temp2=c(temp2,tripleInteraction(newvars,prefix="b",suffix=suffix,mode=mode,addPrefix=FALSE))
suffix=suffix+1
}
}
temp2
MY=c(M,MY)
MYstr=interactStr(MY,addPrefix=FALSE)
MYstr
for(i in 1:length(moderator$site)){
if("c" %in% moderator$site[[i]]) MYstr=setdiff(MYstr,moderator$name[i])
}
temp2=union(temp2,MYstr)
temp2
if(mode==0) {
if(length(temp2)>0) temp2=paste0("b",1:length(temp2),"*",temp2)
}
res=seekNameVars(vars,"c")
if(length(res)>0) {
for(i in 1:length(res)){
newvars=c(X,vars$name[[res[i]]])
if("a" %in% vars$site[[res[i]]]){
newsuffix=0
if(res[i]>1){
for(j in 1:res[i]){
if("a" %in% vars$site[[j]]) newsuffix=newsuffix+1
}
}
} else{
newsuffix=suffix
}
temp3=c(temp3,tripleInteraction(newvars,suffix=newsuffix,mode=mode,addPrefix=FALSE))
suffix=suffix+1
}
}
XY=c(X,XY)
XYstr=interactStr(XY,addPrefix=FALSE)
temp3=union(temp3,XYstr)
if(mode==0) temp3=paste0("c",1:length(temp3),"*",temp3)
temp3
temp=c(temp3,temp2)
temp=paste0(Y,"~",paste(temp,collapse="+"))
if(!is.null(covar)){
covar$site=lapply(covar$site,function(x) str_replace(x,"Y",Y))
if(mode){
temp=addCovarEquation(temp,covar,prefix=NULL)
} else{
temp=addCovarEquation(temp,covar,prefix="g")
}
}
temp=c(temp4,temp)
equation=paste(temp,collapse="\n")
equation=paste0(equation,"\n")
equation
moderatorNames=union(unlist(vars$name),moderator$name)
moderatorNames
for(i in seq_along(moderatorNames)){
name=moderatorNames[i]
temp=paste0(name," ~ ",name,".mean*1\n")
temp=paste0(temp,name," ~~ ",name,".var*",name,"\n")
equation=paste0(equation,temp)
}
X
M
temp1
temp2
temp3
moderatorNames
range
rangemode
X="frame:skeptic"; M="justify";temp1="a1*frame:skeptic";
temp2="b1*justify";temp3="c1*frame:skeptic";moderatorNames=NULL
range=TRUE;rangemode=1
# range=TRUE;data=NULL;rangemode=1;probs=c(0.16,0.5,0.84)
equation=""
temp1=stringr::str_replace_all(temp1,":","*")
ind1=strGrouping(temp1,X)$yes
ind1
X="frame:skeptic"; M="justify";temp1="a1*frame:skeptic";
temp2="b1*justify";temp3="c1*frame:skeptic";moderatorNames=NULL
range=TRUE;rangemode=1
ind1=strGrouping(temp1,X)$yes
ind1
if(!str_detect(X,":")) temp1=stringr::str_replace_all(temp1,":","*")
ind1=strGrouping(temp1,X)$yes
if(!str_detect(M,":")) temp2=stringr::str_replace_all(temp2,":","*")
ind2=strGrouping(temp2,M)$yes
ind=paste0("(",str_flatten(ind1,"+"), ")*(",str_flatten(ind2,"+"),")")
ind
library(processR)
labels=list(X="frame:skeptic",M="justify",Y="donate")
covar=list(name=c("frame","skeptic"),site=list(c("M","Y"),c("M","Y")))
model=tripleEquation(labels=labels,covar=covar)
cat(model)
semfit=sem(model=model,data=disaster)
summary(semfit,ci=TRUE)
estimatesTable(semfit)
medSummary(semfit)
modmedSummary(semfit)
cat(model)
devtools::document()
devtools::check()
library(processR)
devtools::document()
devtools::check()
library(processR)
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
devtools::document()
devtools::check()
devtools::document()
library(processR)
library(lavaan)
labels=list(X="frame",W="skeptic",M="justify",Y="donate")
moderator=list(name="skeptic",site=list(c("a","c")))
model=tripleEquation(labels=labels,moderator=moderator,data=disaster)
semfit=sem(model=model,data=disaster)
drawModel(semfit,labels=labels,interactionFirst=TRUE)
labels=list(X="protest",W="sexism",M="respappr",Y="liking")
moderator=list(name="sexism",site=list(c("a","c")))
data1=addCatVars(protest,"protest",mode=3)
model=catMediation(X="protest",M="respappr",Y="liking",moderator=moderator,data=protest,maxylev=6)
semfit=sem(model,data=data1)
nodelabels=list(D1="Ind.Protest",D2="Col.Protest",W="sexism",M="respappr",Y="liking")
drawModel(semfit,labels=labels,nodelabels=nodelabels,whatLabel="name",
xlim=c(-0.4,1.3))
drawModel(semfit,labels=labels)
labels=list(X="cyl",M=c("am","wt","hp"),Y="mpg",W="vs")
moderator=list(name=c("vs"),site=list(c("a","b")))
model=multipleMediation(labels=labels,moderator=moderator,data=mtcars)
semfit=sem(model=model,data=mtcars)
drawModel(semfit,labels=labels)
